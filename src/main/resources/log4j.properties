### set log levels - for more verbose logging change 'info' to 'debug' ###
#log4j.rootLogger=debug, infolog , stdout , errorlog
log4j.logger.com.ksource=DEBUG,stdout, infolog,errorlog
log4j.logger.java.sql=DEBUG,stdout, infolog,errorlog
#log4j.logger.com.ibatis=DEBUG
log4j.logger.StatisData=TRACE
### direct log messages to stdout ###
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
#log4j.appender.stdout.Threshold开发环境下为DEBUG，生产环境下为INFO
log4j.appender.stdout.Threshold=DEBUG
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %p %c{1} - %m%n
### direct messages to file stock.log ###
#文件大小到达指定尺寸的时候产生一个新的文件
log4j.appender.infolog=org.apache.log4j.RollingFileAppender
#指定定文件大小
log4j.appender.infolog.MaxFileSize=100000KB
log4j.appender.infolog.File=../logs/liangfa_info.log
log4j.appender.infolog.Append=true
log4j.appender.infolog.Threshold=DEBUG
log4j.appender.infolog.layout=org.apache.log4j.PatternLayout
log4j.appender.infolog.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n
#每天产生一个日志文件
log4j.appender.errorlog=org.apache.log4j.DailyRollingFileAppender
#配置每天、小时、分钟生成日志文件，默认是每天产生一个日志文件
#log4j.appender.errorlog.DatePattern='.'yyyy-MM-dd-HH-mm
log4j.appender.errorlog.File=../logs/liangfa_error.log
log4j.appender.errorlog.Append=true
log4j.appender.errorlog.Threshold=ERROR
log4j.appender.errorlog.layout=org.apache.log4j.PatternLayout
log4j.appender.errorlog.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n