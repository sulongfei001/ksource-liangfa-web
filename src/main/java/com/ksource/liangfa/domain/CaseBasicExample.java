package com.ksource.liangfa.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class CaseBasicExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table LIANGFA_XINXIANG20170222.CASE_BASIC
	 * @mbggenerated  Tue Apr 11 11:18:42 CST 2017
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table LIANGFA_XINXIANG20170222.CASE_BASIC
	 * @mbggenerated  Tue Apr 11 11:18:42 CST 2017
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table LIANGFA_XINXIANG20170222.CASE_BASIC
	 * @mbggenerated  Tue Apr 11 11:18:42 CST 2017
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LIANGFA_XINXIANG20170222.CASE_BASIC
	 * @mbggenerated  Tue Apr 11 11:18:42 CST 2017
	 */
	public CaseBasicExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LIANGFA_XINXIANG20170222.CASE_BASIC
	 * @mbggenerated  Tue Apr 11 11:18:42 CST 2017
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LIANGFA_XINXIANG20170222.CASE_BASIC
	 * @mbggenerated  Tue Apr 11 11:18:42 CST 2017
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LIANGFA_XINXIANG20170222.CASE_BASIC
	 * @mbggenerated  Tue Apr 11 11:18:42 CST 2017
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LIANGFA_XINXIANG20170222.CASE_BASIC
	 * @mbggenerated  Tue Apr 11 11:18:42 CST 2017
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LIANGFA_XINXIANG20170222.CASE_BASIC
	 * @mbggenerated  Tue Apr 11 11:18:42 CST 2017
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LIANGFA_XINXIANG20170222.CASE_BASIC
	 * @mbggenerated  Tue Apr 11 11:18:42 CST 2017
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LIANGFA_XINXIANG20170222.CASE_BASIC
	 * @mbggenerated  Tue Apr 11 11:18:42 CST 2017
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LIANGFA_XINXIANG20170222.CASE_BASIC
	 * @mbggenerated  Tue Apr 11 11:18:42 CST 2017
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LIANGFA_XINXIANG20170222.CASE_BASIC
	 * @mbggenerated  Tue Apr 11 11:18:42 CST 2017
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LIANGFA_XINXIANG20170222.CASE_BASIC
	 * @mbggenerated  Tue Apr 11 11:18:42 CST 2017
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table LIANGFA_XINXIANG20170222.CASE_BASIC
	 * @mbggenerated  Tue Apr 11 11:18:42 CST 2017
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andCaseIdIsNull() {
			addCriterion("CASE_ID is null");
			return (Criteria) this;
		}

		public Criteria andCaseIdIsNotNull() {
			addCriterion("CASE_ID is not null");
			return (Criteria) this;
		}

		public Criteria andCaseIdEqualTo(String value) {
			addCriterion("CASE_ID =", value, "caseId");
			return (Criteria) this;
		}

		public Criteria andCaseIdNotEqualTo(String value) {
			addCriterion("CASE_ID <>", value, "caseId");
			return (Criteria) this;
		}

		public Criteria andCaseIdGreaterThan(String value) {
			addCriterion("CASE_ID >", value, "caseId");
			return (Criteria) this;
		}

		public Criteria andCaseIdGreaterThanOrEqualTo(String value) {
			addCriterion("CASE_ID >=", value, "caseId");
			return (Criteria) this;
		}

		public Criteria andCaseIdLessThan(String value) {
			addCriterion("CASE_ID <", value, "caseId");
			return (Criteria) this;
		}

		public Criteria andCaseIdLessThanOrEqualTo(String value) {
			addCriterion("CASE_ID <=", value, "caseId");
			return (Criteria) this;
		}

		public Criteria andCaseIdLike(String value) {
			addCriterion("CASE_ID like", value, "caseId");
			return (Criteria) this;
		}

		public Criteria andCaseIdNotLike(String value) {
			addCriterion("CASE_ID not like", value, "caseId");
			return (Criteria) this;
		}

		public Criteria andCaseIdIn(List<String> values) {
			addCriterion("CASE_ID in", values, "caseId");
			return (Criteria) this;
		}

		public Criteria andCaseIdNotIn(List<String> values) {
			addCriterion("CASE_ID not in", values, "caseId");
			return (Criteria) this;
		}

		public Criteria andCaseIdBetween(String value1, String value2) {
			addCriterion("CASE_ID between", value1, value2, "caseId");
			return (Criteria) this;
		}

		public Criteria andCaseIdNotBetween(String value1, String value2) {
			addCriterion("CASE_ID not between", value1, value2, "caseId");
			return (Criteria) this;
		}

		public Criteria andCaseNoIsNull() {
			addCriterion("CASE_NO is null");
			return (Criteria) this;
		}

		public Criteria andCaseNoIsNotNull() {
			addCriterion("CASE_NO is not null");
			return (Criteria) this;
		}

		public Criteria andCaseNoEqualTo(String value) {
			addCriterion("CASE_NO =", value, "caseNo");
			return (Criteria) this;
		}

		public Criteria andCaseNoNotEqualTo(String value) {
			addCriterion("CASE_NO <>", value, "caseNo");
			return (Criteria) this;
		}

		public Criteria andCaseNoGreaterThan(String value) {
			addCriterion("CASE_NO >", value, "caseNo");
			return (Criteria) this;
		}

		public Criteria andCaseNoGreaterThanOrEqualTo(String value) {
			addCriterion("CASE_NO >=", value, "caseNo");
			return (Criteria) this;
		}

		public Criteria andCaseNoLessThan(String value) {
			addCriterion("CASE_NO <", value, "caseNo");
			return (Criteria) this;
		}

		public Criteria andCaseNoLessThanOrEqualTo(String value) {
			addCriterion("CASE_NO <=", value, "caseNo");
			return (Criteria) this;
		}

		public Criteria andCaseNoLike(String value) {
			addCriterion("CASE_NO like", value, "caseNo");
			return (Criteria) this;
		}

		public Criteria andCaseNoNotLike(String value) {
			addCriterion("CASE_NO not like", value, "caseNo");
			return (Criteria) this;
		}

		public Criteria andCaseNoIn(List<String> values) {
			addCriterion("CASE_NO in", values, "caseNo");
			return (Criteria) this;
		}

		public Criteria andCaseNoNotIn(List<String> values) {
			addCriterion("CASE_NO not in", values, "caseNo");
			return (Criteria) this;
		}

		public Criteria andCaseNoBetween(String value1, String value2) {
			addCriterion("CASE_NO between", value1, value2, "caseNo");
			return (Criteria) this;
		}

		public Criteria andCaseNoNotBetween(String value1, String value2) {
			addCriterion("CASE_NO not between", value1, value2, "caseNo");
			return (Criteria) this;
		}

		public Criteria andCaseNameIsNull() {
			addCriterion("CASE_NAME is null");
			return (Criteria) this;
		}

		public Criteria andCaseNameIsNotNull() {
			addCriterion("CASE_NAME is not null");
			return (Criteria) this;
		}

		public Criteria andCaseNameEqualTo(String value) {
			addCriterion("CASE_NAME =", value, "caseName");
			return (Criteria) this;
		}

		public Criteria andCaseNameNotEqualTo(String value) {
			addCriterion("CASE_NAME <>", value, "caseName");
			return (Criteria) this;
		}

		public Criteria andCaseNameGreaterThan(String value) {
			addCriterion("CASE_NAME >", value, "caseName");
			return (Criteria) this;
		}

		public Criteria andCaseNameGreaterThanOrEqualTo(String value) {
			addCriterion("CASE_NAME >=", value, "caseName");
			return (Criteria) this;
		}

		public Criteria andCaseNameLessThan(String value) {
			addCriterion("CASE_NAME <", value, "caseName");
			return (Criteria) this;
		}

		public Criteria andCaseNameLessThanOrEqualTo(String value) {
			addCriterion("CASE_NAME <=", value, "caseName");
			return (Criteria) this;
		}

		public Criteria andCaseNameLike(String value) {
			addCriterion("CASE_NAME like", value, "caseName");
			return (Criteria) this;
		}

		public Criteria andCaseNameNotLike(String value) {
			addCriterion("CASE_NAME not like", value, "caseName");
			return (Criteria) this;
		}

		public Criteria andCaseNameIn(List<String> values) {
			addCriterion("CASE_NAME in", values, "caseName");
			return (Criteria) this;
		}

		public Criteria andCaseNameNotIn(List<String> values) {
			addCriterion("CASE_NAME not in", values, "caseName");
			return (Criteria) this;
		}

		public Criteria andCaseNameBetween(String value1, String value2) {
			addCriterion("CASE_NAME between", value1, value2, "caseName");
			return (Criteria) this;
		}

		public Criteria andCaseNameNotBetween(String value1, String value2) {
			addCriterion("CASE_NAME not between", value1, value2, "caseName");
			return (Criteria) this;
		}

		public Criteria andInputerIsNull() {
			addCriterion("INPUTER is null");
			return (Criteria) this;
		}

		public Criteria andInputerIsNotNull() {
			addCriterion("INPUTER is not null");
			return (Criteria) this;
		}

		public Criteria andInputerEqualTo(String value) {
			addCriterion("INPUTER =", value, "inputer");
			return (Criteria) this;
		}

		public Criteria andInputerNotEqualTo(String value) {
			addCriterion("INPUTER <>", value, "inputer");
			return (Criteria) this;
		}

		public Criteria andInputerGreaterThan(String value) {
			addCriterion("INPUTER >", value, "inputer");
			return (Criteria) this;
		}

		public Criteria andInputerGreaterThanOrEqualTo(String value) {
			addCriterion("INPUTER >=", value, "inputer");
			return (Criteria) this;
		}

		public Criteria andInputerLessThan(String value) {
			addCriterion("INPUTER <", value, "inputer");
			return (Criteria) this;
		}

		public Criteria andInputerLessThanOrEqualTo(String value) {
			addCriterion("INPUTER <=", value, "inputer");
			return (Criteria) this;
		}

		public Criteria andInputerLike(String value) {
			addCriterion("INPUTER like", value, "inputer");
			return (Criteria) this;
		}

		public Criteria andInputerNotLike(String value) {
			addCriterion("INPUTER not like", value, "inputer");
			return (Criteria) this;
		}

		public Criteria andInputerIn(List<String> values) {
			addCriterion("INPUTER in", values, "inputer");
			return (Criteria) this;
		}

		public Criteria andInputerNotIn(List<String> values) {
			addCriterion("INPUTER not in", values, "inputer");
			return (Criteria) this;
		}

		public Criteria andInputerBetween(String value1, String value2) {
			addCriterion("INPUTER between", value1, value2, "inputer");
			return (Criteria) this;
		}

		public Criteria andInputerNotBetween(String value1, String value2) {
			addCriterion("INPUTER not between", value1, value2, "inputer");
			return (Criteria) this;
		}

		public Criteria andInputTimeIsNull() {
			addCriterion("INPUT_TIME is null");
			return (Criteria) this;
		}

		public Criteria andInputTimeIsNotNull() {
			addCriterion("INPUT_TIME is not null");
			return (Criteria) this;
		}

		public Criteria andInputTimeEqualTo(Date value) {
			addCriterion("INPUT_TIME =", value, "inputTime");
			return (Criteria) this;
		}

		public Criteria andInputTimeNotEqualTo(Date value) {
			addCriterion("INPUT_TIME <>", value, "inputTime");
			return (Criteria) this;
		}

		public Criteria andInputTimeGreaterThan(Date value) {
			addCriterion("INPUT_TIME >", value, "inputTime");
			return (Criteria) this;
		}

		public Criteria andInputTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("INPUT_TIME >=", value, "inputTime");
			return (Criteria) this;
		}

		public Criteria andInputTimeLessThan(Date value) {
			addCriterion("INPUT_TIME <", value, "inputTime");
			return (Criteria) this;
		}

		public Criteria andInputTimeLessThanOrEqualTo(Date value) {
			addCriterion("INPUT_TIME <=", value, "inputTime");
			return (Criteria) this;
		}

		public Criteria andInputTimeIn(List<Date> values) {
			addCriterion("INPUT_TIME in", values, "inputTime");
			return (Criteria) this;
		}

		public Criteria andInputTimeNotIn(List<Date> values) {
			addCriterion("INPUT_TIME not in", values, "inputTime");
			return (Criteria) this;
		}

		public Criteria andInputTimeBetween(Date value1, Date value2) {
			addCriterion("INPUT_TIME between", value1, value2, "inputTime");
			return (Criteria) this;
		}

		public Criteria andInputTimeNotBetween(Date value1, Date value2) {
			addCriterion("INPUT_TIME not between", value1, value2, "inputTime");
			return (Criteria) this;
		}

		public Criteria andInputUnitIsNull() {
			addCriterion("INPUT_UNIT is null");
			return (Criteria) this;
		}

		public Criteria andInputUnitIsNotNull() {
			addCriterion("INPUT_UNIT is not null");
			return (Criteria) this;
		}

		public Criteria andInputUnitEqualTo(String value) {
			addCriterion("INPUT_UNIT =", value, "inputUnit");
			return (Criteria) this;
		}

		public Criteria andInputUnitNotEqualTo(String value) {
			addCriterion("INPUT_UNIT <>", value, "inputUnit");
			return (Criteria) this;
		}

		public Criteria andInputUnitGreaterThan(String value) {
			addCriterion("INPUT_UNIT >", value, "inputUnit");
			return (Criteria) this;
		}

		public Criteria andInputUnitGreaterThanOrEqualTo(String value) {
			addCriterion("INPUT_UNIT >=", value, "inputUnit");
			return (Criteria) this;
		}

		public Criteria andInputUnitLessThan(String value) {
			addCriterion("INPUT_UNIT <", value, "inputUnit");
			return (Criteria) this;
		}

		public Criteria andInputUnitLessThanOrEqualTo(String value) {
			addCriterion("INPUT_UNIT <=", value, "inputUnit");
			return (Criteria) this;
		}

		public Criteria andInputUnitLike(String value) {
			addCriterion("INPUT_UNIT like", value, "inputUnit");
			return (Criteria) this;
		}

		public Criteria andInputUnitNotLike(String value) {
			addCriterion("INPUT_UNIT not like", value, "inputUnit");
			return (Criteria) this;
		}

		public Criteria andInputUnitIn(List<String> values) {
			addCriterion("INPUT_UNIT in", values, "inputUnit");
			return (Criteria) this;
		}

		public Criteria andInputUnitNotIn(List<String> values) {
			addCriterion("INPUT_UNIT not in", values, "inputUnit");
			return (Criteria) this;
		}

		public Criteria andInputUnitBetween(String value1, String value2) {
			addCriterion("INPUT_UNIT between", value1, value2, "inputUnit");
			return (Criteria) this;
		}

		public Criteria andInputUnitNotBetween(String value1, String value2) {
			addCriterion("INPUT_UNIT not between", value1, value2, "inputUnit");
			return (Criteria) this;
		}

		public Criteria andCaseStateIsNull() {
			addCriterion("CASE_STATE is null");
			return (Criteria) this;
		}

		public Criteria andCaseStateIsNotNull() {
			addCriterion("CASE_STATE is not null");
			return (Criteria) this;
		}

		public Criteria andCaseStateEqualTo(String value) {
			addCriterion("CASE_STATE =", value, "caseState");
			return (Criteria) this;
		}

		public Criteria andCaseStateNotEqualTo(String value) {
			addCriterion("CASE_STATE <>", value, "caseState");
			return (Criteria) this;
		}

		public Criteria andCaseStateGreaterThan(String value) {
			addCriterion("CASE_STATE >", value, "caseState");
			return (Criteria) this;
		}

		public Criteria andCaseStateGreaterThanOrEqualTo(String value) {
			addCriterion("CASE_STATE >=", value, "caseState");
			return (Criteria) this;
		}

		public Criteria andCaseStateLessThan(String value) {
			addCriterion("CASE_STATE <", value, "caseState");
			return (Criteria) this;
		}

		public Criteria andCaseStateLessThanOrEqualTo(String value) {
			addCriterion("CASE_STATE <=", value, "caseState");
			return (Criteria) this;
		}

		public Criteria andCaseStateLike(String value) {
			addCriterion("CASE_STATE like", value, "caseState");
			return (Criteria) this;
		}

		public Criteria andCaseStateNotLike(String value) {
			addCriterion("CASE_STATE not like", value, "caseState");
			return (Criteria) this;
		}

		public Criteria andCaseStateIn(List<String> values) {
			addCriterion("CASE_STATE in", values, "caseState");
			return (Criteria) this;
		}

		public Criteria andCaseStateNotIn(List<String> values) {
			addCriterion("CASE_STATE not in", values, "caseState");
			return (Criteria) this;
		}

		public Criteria andCaseStateBetween(String value1, String value2) {
			addCriterion("CASE_STATE between", value1, value2, "caseState");
			return (Criteria) this;
		}

		public Criteria andCaseStateNotBetween(String value1, String value2) {
			addCriterion("CASE_STATE not between", value1, value2, "caseState");
			return (Criteria) this;
		}

		public Criteria andRecordSrcIsNull() {
			addCriterion("RECORD_SRC is null");
			return (Criteria) this;
		}

		public Criteria andRecordSrcIsNotNull() {
			addCriterion("RECORD_SRC is not null");
			return (Criteria) this;
		}

		public Criteria andRecordSrcEqualTo(String value) {
			addCriterion("RECORD_SRC =", value, "recordSrc");
			return (Criteria) this;
		}

		public Criteria andRecordSrcNotEqualTo(String value) {
			addCriterion("RECORD_SRC <>", value, "recordSrc");
			return (Criteria) this;
		}

		public Criteria andRecordSrcGreaterThan(String value) {
			addCriterion("RECORD_SRC >", value, "recordSrc");
			return (Criteria) this;
		}

		public Criteria andRecordSrcGreaterThanOrEqualTo(String value) {
			addCriterion("RECORD_SRC >=", value, "recordSrc");
			return (Criteria) this;
		}

		public Criteria andRecordSrcLessThan(String value) {
			addCriterion("RECORD_SRC <", value, "recordSrc");
			return (Criteria) this;
		}

		public Criteria andRecordSrcLessThanOrEqualTo(String value) {
			addCriterion("RECORD_SRC <=", value, "recordSrc");
			return (Criteria) this;
		}

		public Criteria andRecordSrcLike(String value) {
			addCriterion("RECORD_SRC like", value, "recordSrc");
			return (Criteria) this;
		}

		public Criteria andRecordSrcNotLike(String value) {
			addCriterion("RECORD_SRC not like", value, "recordSrc");
			return (Criteria) this;
		}

		public Criteria andRecordSrcIn(List<String> values) {
			addCriterion("RECORD_SRC in", values, "recordSrc");
			return (Criteria) this;
		}

		public Criteria andRecordSrcNotIn(List<String> values) {
			addCriterion("RECORD_SRC not in", values, "recordSrc");
			return (Criteria) this;
		}

		public Criteria andRecordSrcBetween(String value1, String value2) {
			addCriterion("RECORD_SRC between", value1, value2, "recordSrc");
			return (Criteria) this;
		}

		public Criteria andRecordSrcNotBetween(String value1, String value2) {
			addCriterion("RECORD_SRC not between", value1, value2, "recordSrc");
			return (Criteria) this;
		}

		public Criteria andLatestPocessTimeIsNull() {
			addCriterion("LATEST_POCESS_TIME is null");
			return (Criteria) this;
		}

		public Criteria andLatestPocessTimeIsNotNull() {
			addCriterion("LATEST_POCESS_TIME is not null");
			return (Criteria) this;
		}

		public Criteria andLatestPocessTimeEqualTo(Date value) {
			addCriterion("LATEST_POCESS_TIME =", value, "latestPocessTime");
			return (Criteria) this;
		}

		public Criteria andLatestPocessTimeNotEqualTo(Date value) {
			addCriterion("LATEST_POCESS_TIME <>", value, "latestPocessTime");
			return (Criteria) this;
		}

		public Criteria andLatestPocessTimeGreaterThan(Date value) {
			addCriterion("LATEST_POCESS_TIME >", value, "latestPocessTime");
			return (Criteria) this;
		}

		public Criteria andLatestPocessTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("LATEST_POCESS_TIME >=", value, "latestPocessTime");
			return (Criteria) this;
		}

		public Criteria andLatestPocessTimeLessThan(Date value) {
			addCriterion("LATEST_POCESS_TIME <", value, "latestPocessTime");
			return (Criteria) this;
		}

		public Criteria andLatestPocessTimeLessThanOrEqualTo(Date value) {
			addCriterion("LATEST_POCESS_TIME <=", value, "latestPocessTime");
			return (Criteria) this;
		}

		public Criteria andLatestPocessTimeIn(List<Date> values) {
			addCriterion("LATEST_POCESS_TIME in", values, "latestPocessTime");
			return (Criteria) this;
		}

		public Criteria andLatestPocessTimeNotIn(List<Date> values) {
			addCriterion("LATEST_POCESS_TIME not in", values,
					"latestPocessTime");
			return (Criteria) this;
		}

		public Criteria andLatestPocessTimeBetween(Date value1, Date value2) {
			addCriterion("LATEST_POCESS_TIME between", value1, value2,
					"latestPocessTime");
			return (Criteria) this;
		}

		public Criteria andLatestPocessTimeNotBetween(Date value1, Date value2) {
			addCriterion("LATEST_POCESS_TIME not between", value1, value2,
					"latestPocessTime");
			return (Criteria) this;
		}

		public Criteria andProcKeyIsNull() {
			addCriterion("PROC_KEY is null");
			return (Criteria) this;
		}

		public Criteria andProcKeyIsNotNull() {
			addCriterion("PROC_KEY is not null");
			return (Criteria) this;
		}

		public Criteria andProcKeyEqualTo(String value) {
			addCriterion("PROC_KEY =", value, "procKey");
			return (Criteria) this;
		}

		public Criteria andProcKeyNotEqualTo(String value) {
			addCriterion("PROC_KEY <>", value, "procKey");
			return (Criteria) this;
		}

		public Criteria andProcKeyGreaterThan(String value) {
			addCriterion("PROC_KEY >", value, "procKey");
			return (Criteria) this;
		}

		public Criteria andProcKeyGreaterThanOrEqualTo(String value) {
			addCriterion("PROC_KEY >=", value, "procKey");
			return (Criteria) this;
		}

		public Criteria andProcKeyLessThan(String value) {
			addCriterion("PROC_KEY <", value, "procKey");
			return (Criteria) this;
		}

		public Criteria andProcKeyLessThanOrEqualTo(String value) {
			addCriterion("PROC_KEY <=", value, "procKey");
			return (Criteria) this;
		}

		public Criteria andProcKeyLike(String value) {
			addCriterion("PROC_KEY like", value, "procKey");
			return (Criteria) this;
		}

		public Criteria andProcKeyNotLike(String value) {
			addCriterion("PROC_KEY not like", value, "procKey");
			return (Criteria) this;
		}

		public Criteria andProcKeyIn(List<String> values) {
			addCriterion("PROC_KEY in", values, "procKey");
			return (Criteria) this;
		}

		public Criteria andProcKeyNotIn(List<String> values) {
			addCriterion("PROC_KEY not in", values, "procKey");
			return (Criteria) this;
		}

		public Criteria andProcKeyBetween(String value1, String value2) {
			addCriterion("PROC_KEY between", value1, value2, "procKey");
			return (Criteria) this;
		}

		public Criteria andProcKeyNotBetween(String value1, String value2) {
			addCriterion("PROC_KEY not between", value1, value2, "procKey");
			return (Criteria) this;
		}

		public Criteria andInputTypeIsNull() {
			addCriterion("INPUT_TYPE is null");
			return (Criteria) this;
		}

		public Criteria andInputTypeIsNotNull() {
			addCriterion("INPUT_TYPE is not null");
			return (Criteria) this;
		}

		public Criteria andInputTypeEqualTo(Integer value) {
			addCriterion("INPUT_TYPE =", value, "inputType");
			return (Criteria) this;
		}

		public Criteria andInputTypeNotEqualTo(Integer value) {
			addCriterion("INPUT_TYPE <>", value, "inputType");
			return (Criteria) this;
		}

		public Criteria andInputTypeGreaterThan(Integer value) {
			addCriterion("INPUT_TYPE >", value, "inputType");
			return (Criteria) this;
		}

		public Criteria andInputTypeGreaterThanOrEqualTo(Integer value) {
			addCriterion("INPUT_TYPE >=", value, "inputType");
			return (Criteria) this;
		}

		public Criteria andInputTypeLessThan(Integer value) {
			addCriterion("INPUT_TYPE <", value, "inputType");
			return (Criteria) this;
		}

		public Criteria andInputTypeLessThanOrEqualTo(Integer value) {
			addCriterion("INPUT_TYPE <=", value, "inputType");
			return (Criteria) this;
		}

		public Criteria andInputTypeIn(List<Integer> values) {
			addCriterion("INPUT_TYPE in", values, "inputType");
			return (Criteria) this;
		}

		public Criteria andInputTypeNotIn(List<Integer> values) {
			addCriterion("INPUT_TYPE not in", values, "inputType");
			return (Criteria) this;
		}

		public Criteria andInputTypeBetween(Integer value1, Integer value2) {
			addCriterion("INPUT_TYPE between", value1, value2, "inputType");
			return (Criteria) this;
		}

		public Criteria andInputTypeNotBetween(Integer value1, Integer value2) {
			addCriterion("INPUT_TYPE not between", value1, value2, "inputType");
			return (Criteria) this;
		}

		public Criteria andVersionNoIsNull() {
			addCriterion("VERSION_NO is null");
			return (Criteria) this;
		}

		public Criteria andVersionNoIsNotNull() {
			addCriterion("VERSION_NO is not null");
			return (Criteria) this;
		}

		public Criteria andVersionNoEqualTo(Integer value) {
			addCriterion("VERSION_NO =", value, "versionNo");
			return (Criteria) this;
		}

		public Criteria andVersionNoNotEqualTo(Integer value) {
			addCriterion("VERSION_NO <>", value, "versionNo");
			return (Criteria) this;
		}

		public Criteria andVersionNoGreaterThan(Integer value) {
			addCriterion("VERSION_NO >", value, "versionNo");
			return (Criteria) this;
		}

		public Criteria andVersionNoGreaterThanOrEqualTo(Integer value) {
			addCriterion("VERSION_NO >=", value, "versionNo");
			return (Criteria) this;
		}

		public Criteria andVersionNoLessThan(Integer value) {
			addCriterion("VERSION_NO <", value, "versionNo");
			return (Criteria) this;
		}

		public Criteria andVersionNoLessThanOrEqualTo(Integer value) {
			addCriterion("VERSION_NO <=", value, "versionNo");
			return (Criteria) this;
		}

		public Criteria andVersionNoIn(List<Integer> values) {
			addCriterion("VERSION_NO in", values, "versionNo");
			return (Criteria) this;
		}

		public Criteria andVersionNoNotIn(List<Integer> values) {
			addCriterion("VERSION_NO not in", values, "versionNo");
			return (Criteria) this;
		}

		public Criteria andVersionNoBetween(Integer value1, Integer value2) {
			addCriterion("VERSION_NO between", value1, value2, "versionNo");
			return (Criteria) this;
		}

		public Criteria andVersionNoNotBetween(Integer value1, Integer value2) {
			addCriterion("VERSION_NO not between", value1, value2, "versionNo");
			return (Criteria) this;
		}

		public Criteria andIsAssignIsNull() {
			addCriterion("IS_ASSIGN is null");
			return (Criteria) this;
		}

		public Criteria andIsAssignIsNotNull() {
			addCriterion("IS_ASSIGN is not null");
			return (Criteria) this;
		}

		public Criteria andIsAssignEqualTo(Integer value) {
			addCriterion("IS_ASSIGN =", value, "isAssign");
			return (Criteria) this;
		}

		public Criteria andIsAssignNotEqualTo(Integer value) {
			addCriterion("IS_ASSIGN <>", value, "isAssign");
			return (Criteria) this;
		}

		public Criteria andIsAssignGreaterThan(Integer value) {
			addCriterion("IS_ASSIGN >", value, "isAssign");
			return (Criteria) this;
		}

		public Criteria andIsAssignGreaterThanOrEqualTo(Integer value) {
			addCriterion("IS_ASSIGN >=", value, "isAssign");
			return (Criteria) this;
		}

		public Criteria andIsAssignLessThan(Integer value) {
			addCriterion("IS_ASSIGN <", value, "isAssign");
			return (Criteria) this;
		}

		public Criteria andIsAssignLessThanOrEqualTo(Integer value) {
			addCriterion("IS_ASSIGN <=", value, "isAssign");
			return (Criteria) this;
		}

		public Criteria andIsAssignIn(List<Integer> values) {
			addCriterion("IS_ASSIGN in", values, "isAssign");
			return (Criteria) this;
		}

		public Criteria andIsAssignNotIn(List<Integer> values) {
			addCriterion("IS_ASSIGN not in", values, "isAssign");
			return (Criteria) this;
		}

		public Criteria andIsAssignBetween(Integer value1, Integer value2) {
			addCriterion("IS_ASSIGN between", value1, value2, "isAssign");
			return (Criteria) this;
		}

		public Criteria andIsAssignNotBetween(Integer value1, Integer value2) {
			addCriterion("IS_ASSIGN not between", value1, value2, "isAssign");
			return (Criteria) this;
		}

		public Criteria andAnfaTimeIsNull() {
			addCriterion("ANFA_TIME is null");
			return (Criteria) this;
		}

		public Criteria andAnfaTimeIsNotNull() {
			addCriterion("ANFA_TIME is not null");
			return (Criteria) this;
		}

		public Criteria andAnfaTimeEqualTo(Date value) {
			addCriterion("ANFA_TIME =", value, "anfaTime");
			return (Criteria) this;
		}

		public Criteria andAnfaTimeNotEqualTo(Date value) {
			addCriterion("ANFA_TIME <>", value, "anfaTime");
			return (Criteria) this;
		}

		public Criteria andAnfaTimeGreaterThan(Date value) {
			addCriterion("ANFA_TIME >", value, "anfaTime");
			return (Criteria) this;
		}

		public Criteria andAnfaTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("ANFA_TIME >=", value, "anfaTime");
			return (Criteria) this;
		}

		public Criteria andAnfaTimeLessThan(Date value) {
			addCriterion("ANFA_TIME <", value, "anfaTime");
			return (Criteria) this;
		}

		public Criteria andAnfaTimeLessThanOrEqualTo(Date value) {
			addCriterion("ANFA_TIME <=", value, "anfaTime");
			return (Criteria) this;
		}

		public Criteria andAnfaTimeIn(List<Date> values) {
			addCriterion("ANFA_TIME in", values, "anfaTime");
			return (Criteria) this;
		}

		public Criteria andAnfaTimeNotIn(List<Date> values) {
			addCriterion("ANFA_TIME not in", values, "anfaTime");
			return (Criteria) this;
		}

		public Criteria andAnfaTimeBetween(Date value1, Date value2) {
			addCriterion("ANFA_TIME between", value1, value2, "anfaTime");
			return (Criteria) this;
		}

		public Criteria andAnfaTimeNotBetween(Date value1, Date value2) {
			addCriterion("ANFA_TIME not between", value1, value2, "anfaTime");
			return (Criteria) this;
		}

		public Criteria andAnfaAddressIsNull() {
			addCriterion("ANFA_ADDRESS is null");
			return (Criteria) this;
		}

		public Criteria andAnfaAddressIsNotNull() {
			addCriterion("ANFA_ADDRESS is not null");
			return (Criteria) this;
		}

		public Criteria andAnfaAddressEqualTo(String value) {
			addCriterion("ANFA_ADDRESS =", value, "anfaAddress");
			return (Criteria) this;
		}

		public Criteria andAnfaAddressNotEqualTo(String value) {
			addCriterion("ANFA_ADDRESS <>", value, "anfaAddress");
			return (Criteria) this;
		}

		public Criteria andAnfaAddressGreaterThan(String value) {
			addCriterion("ANFA_ADDRESS >", value, "anfaAddress");
			return (Criteria) this;
		}

		public Criteria andAnfaAddressGreaterThanOrEqualTo(String value) {
			addCriterion("ANFA_ADDRESS >=", value, "anfaAddress");
			return (Criteria) this;
		}

		public Criteria andAnfaAddressLessThan(String value) {
			addCriterion("ANFA_ADDRESS <", value, "anfaAddress");
			return (Criteria) this;
		}

		public Criteria andAnfaAddressLessThanOrEqualTo(String value) {
			addCriterion("ANFA_ADDRESS <=", value, "anfaAddress");
			return (Criteria) this;
		}

		public Criteria andAnfaAddressLike(String value) {
			addCriterion("ANFA_ADDRESS like", value, "anfaAddress");
			return (Criteria) this;
		}

		public Criteria andAnfaAddressNotLike(String value) {
			addCriterion("ANFA_ADDRESS not like", value, "anfaAddress");
			return (Criteria) this;
		}

		public Criteria andAnfaAddressIn(List<String> values) {
			addCriterion("ANFA_ADDRESS in", values, "anfaAddress");
			return (Criteria) this;
		}

		public Criteria andAnfaAddressNotIn(List<String> values) {
			addCriterion("ANFA_ADDRESS not in", values, "anfaAddress");
			return (Criteria) this;
		}

		public Criteria andAnfaAddressBetween(String value1, String value2) {
			addCriterion("ANFA_ADDRESS between", value1, value2, "anfaAddress");
			return (Criteria) this;
		}

		public Criteria andAnfaAddressNotBetween(String value1, String value2) {
			addCriterion("ANFA_ADDRESS not between", value1, value2,
					"anfaAddress");
			return (Criteria) this;
		}

		public Criteria andIsSuspectedCriminalIsNull() {
			addCriterion("IS_SUSPECTED_CRIMINAL is null");
			return (Criteria) this;
		}

		public Criteria andIsSuspectedCriminalIsNotNull() {
			addCriterion("IS_SUSPECTED_CRIMINAL is not null");
			return (Criteria) this;
		}

		public Criteria andIsSuspectedCriminalEqualTo(Integer value) {
			addCriterion("IS_SUSPECTED_CRIMINAL =", value,
					"isSuspectedCriminal");
			return (Criteria) this;
		}

		public Criteria andIsSuspectedCriminalNotEqualTo(Integer value) {
			addCriterion("IS_SUSPECTED_CRIMINAL <>", value,
					"isSuspectedCriminal");
			return (Criteria) this;
		}

		public Criteria andIsSuspectedCriminalGreaterThan(Integer value) {
			addCriterion("IS_SUSPECTED_CRIMINAL >", value,
					"isSuspectedCriminal");
			return (Criteria) this;
		}

		public Criteria andIsSuspectedCriminalGreaterThanOrEqualTo(Integer value) {
			addCriterion("IS_SUSPECTED_CRIMINAL >=", value,
					"isSuspectedCriminal");
			return (Criteria) this;
		}

		public Criteria andIsSuspectedCriminalLessThan(Integer value) {
			addCriterion("IS_SUSPECTED_CRIMINAL <", value,
					"isSuspectedCriminal");
			return (Criteria) this;
		}

		public Criteria andIsSuspectedCriminalLessThanOrEqualTo(Integer value) {
			addCriterion("IS_SUSPECTED_CRIMINAL <=", value,
					"isSuspectedCriminal");
			return (Criteria) this;
		}

		public Criteria andIsSuspectedCriminalIn(List<Integer> values) {
			addCriterion("IS_SUSPECTED_CRIMINAL in", values,
					"isSuspectedCriminal");
			return (Criteria) this;
		}

		public Criteria andIsSuspectedCriminalNotIn(List<Integer> values) {
			addCriterion("IS_SUSPECTED_CRIMINAL not in", values,
					"isSuspectedCriminal");
			return (Criteria) this;
		}

		public Criteria andIsSuspectedCriminalBetween(Integer value1,
				Integer value2) {
			addCriterion("IS_SUSPECTED_CRIMINAL between", value1, value2,
					"isSuspectedCriminal");
			return (Criteria) this;
		}

		public Criteria andIsSuspectedCriminalNotBetween(Integer value1,
				Integer value2) {
			addCriterion("IS_SUSPECTED_CRIMINAL not between", value1, value2,
					"isSuspectedCriminal");
			return (Criteria) this;
		}

		public Criteria andCaseTypeIsNull() {
			addCriterion("CASE_TYPE is null");
			return (Criteria) this;
		}

		public Criteria andCaseTypeIsNotNull() {
			addCriterion("CASE_TYPE is not null");
			return (Criteria) this;
		}

		public Criteria andCaseTypeEqualTo(Integer value) {
			addCriterion("CASE_TYPE =", value, "caseType");
			return (Criteria) this;
		}

		public Criteria andCaseTypeNotEqualTo(Integer value) {
			addCriterion("CASE_TYPE <>", value, "caseType");
			return (Criteria) this;
		}

		public Criteria andCaseTypeGreaterThan(Integer value) {
			addCriterion("CASE_TYPE >", value, "caseType");
			return (Criteria) this;
		}

		public Criteria andCaseTypeGreaterThanOrEqualTo(Integer value) {
			addCriterion("CASE_TYPE >=", value, "caseType");
			return (Criteria) this;
		}

		public Criteria andCaseTypeLessThan(Integer value) {
			addCriterion("CASE_TYPE <", value, "caseType");
			return (Criteria) this;
		}

		public Criteria andCaseTypeLessThanOrEqualTo(Integer value) {
			addCriterion("CASE_TYPE <=", value, "caseType");
			return (Criteria) this;
		}

		public Criteria andCaseTypeIn(List<Integer> values) {
			addCriterion("CASE_TYPE in", values, "caseType");
			return (Criteria) this;
		}

		public Criteria andCaseTypeNotIn(List<Integer> values) {
			addCriterion("CASE_TYPE not in", values, "caseType");
			return (Criteria) this;
		}

		public Criteria andCaseTypeBetween(Integer value1, Integer value2) {
			addCriterion("CASE_TYPE between", value1, value2, "caseType");
			return (Criteria) this;
		}

		public Criteria andCaseTypeNotBetween(Integer value1, Integer value2) {
			addCriterion("CASE_TYPE not between", value1, value2, "caseType");
			return (Criteria) this;
		}

		public Criteria andAmountInvolvedIsNull() {
			addCriterion("AMOUNT_INVOLVED is null");
			return (Criteria) this;
		}

		public Criteria andAmountInvolvedIsNotNull() {
			addCriterion("AMOUNT_INVOLVED is not null");
			return (Criteria) this;
		}

		public Criteria andAmountInvolvedEqualTo(Double value) {
			addCriterion("AMOUNT_INVOLVED =", value, "amountInvolved");
			return (Criteria) this;
		}

		public Criteria andAmountInvolvedNotEqualTo(Double value) {
			addCriterion("AMOUNT_INVOLVED <>", value, "amountInvolved");
			return (Criteria) this;
		}

		public Criteria andAmountInvolvedGreaterThan(Double value) {
			addCriterion("AMOUNT_INVOLVED >", value, "amountInvolved");
			return (Criteria) this;
		}

		public Criteria andAmountInvolvedGreaterThanOrEqualTo(Double value) {
			addCriterion("AMOUNT_INVOLVED >=", value, "amountInvolved");
			return (Criteria) this;
		}

		public Criteria andAmountInvolvedLessThan(Double value) {
			addCriterion("AMOUNT_INVOLVED <", value, "amountInvolved");
			return (Criteria) this;
		}

		public Criteria andAmountInvolvedLessThanOrEqualTo(Double value) {
			addCriterion("AMOUNT_INVOLVED <=", value, "amountInvolved");
			return (Criteria) this;
		}

		public Criteria andAmountInvolvedIn(List<Double> values) {
			addCriterion("AMOUNT_INVOLVED in", values, "amountInvolved");
			return (Criteria) this;
		}

		public Criteria andAmountInvolvedNotIn(List<Double> values) {
			addCriterion("AMOUNT_INVOLVED not in", values, "amountInvolved");
			return (Criteria) this;
		}

		public Criteria andAmountInvolvedBetween(Double value1, Double value2) {
			addCriterion("AMOUNT_INVOLVED between", value1, value2,
					"amountInvolved");
			return (Criteria) this;
		}

		public Criteria andAmountInvolvedNotBetween(Double value1, Double value2) {
			addCriterion("AMOUNT_INVOLVED not between", value1, value2,
					"amountInvolved");
			return (Criteria) this;
		}

		public Criteria andUndertakerSuggestIsNull() {
			addCriterion("UNDERTAKER_SUGGEST is null");
			return (Criteria) this;
		}

		public Criteria andUndertakerSuggestIsNotNull() {
			addCriterion("UNDERTAKER_SUGGEST is not null");
			return (Criteria) this;
		}

		public Criteria andUndertakerSuggestEqualTo(String value) {
			addCriterion("UNDERTAKER_SUGGEST =", value, "undertakerSuggest");
			return (Criteria) this;
		}

		public Criteria andUndertakerSuggestNotEqualTo(String value) {
			addCriterion("UNDERTAKER_SUGGEST <>", value, "undertakerSuggest");
			return (Criteria) this;
		}

		public Criteria andUndertakerSuggestGreaterThan(String value) {
			addCriterion("UNDERTAKER_SUGGEST >", value, "undertakerSuggest");
			return (Criteria) this;
		}

		public Criteria andUndertakerSuggestGreaterThanOrEqualTo(String value) {
			addCriterion("UNDERTAKER_SUGGEST >=", value, "undertakerSuggest");
			return (Criteria) this;
		}

		public Criteria andUndertakerSuggestLessThan(String value) {
			addCriterion("UNDERTAKER_SUGGEST <", value, "undertakerSuggest");
			return (Criteria) this;
		}

		public Criteria andUndertakerSuggestLessThanOrEqualTo(String value) {
			addCriterion("UNDERTAKER_SUGGEST <=", value, "undertakerSuggest");
			return (Criteria) this;
		}

		public Criteria andUndertakerSuggestLike(String value) {
			addCriterion("UNDERTAKER_SUGGEST like", value, "undertakerSuggest");
			return (Criteria) this;
		}

		public Criteria andUndertakerSuggestNotLike(String value) {
			addCriterion("UNDERTAKER_SUGGEST not like", value,
					"undertakerSuggest");
			return (Criteria) this;
		}

		public Criteria andUndertakerSuggestIn(List<String> values) {
			addCriterion("UNDERTAKER_SUGGEST in", values, "undertakerSuggest");
			return (Criteria) this;
		}

		public Criteria andUndertakerSuggestNotIn(List<String> values) {
			addCriterion("UNDERTAKER_SUGGEST not in", values,
					"undertakerSuggest");
			return (Criteria) this;
		}

		public Criteria andUndertakerSuggestBetween(String value1, String value2) {
			addCriterion("UNDERTAKER_SUGGEST between", value1, value2,
					"undertakerSuggest");
			return (Criteria) this;
		}

		public Criteria andUndertakerSuggestNotBetween(String value1,
				String value2) {
			addCriterion("UNDERTAKER_SUGGEST not between", value1, value2,
					"undertakerSuggest");
			return (Criteria) this;
		}

		public Criteria andCaseReasonIsNull() {
			addCriterion("CASE_REASON is null");
			return (Criteria) this;
		}

		public Criteria andCaseReasonIsNotNull() {
			addCriterion("CASE_REASON is not null");
			return (Criteria) this;
		}

		public Criteria andCaseReasonEqualTo(String value) {
			addCriterion("CASE_REASON =", value, "caseReason");
			return (Criteria) this;
		}

		public Criteria andCaseReasonNotEqualTo(String value) {
			addCriterion("CASE_REASON <>", value, "caseReason");
			return (Criteria) this;
		}

		public Criteria andCaseReasonGreaterThan(String value) {
			addCriterion("CASE_REASON >", value, "caseReason");
			return (Criteria) this;
		}

		public Criteria andCaseReasonGreaterThanOrEqualTo(String value) {
			addCriterion("CASE_REASON >=", value, "caseReason");
			return (Criteria) this;
		}

		public Criteria andCaseReasonLessThan(String value) {
			addCriterion("CASE_REASON <", value, "caseReason");
			return (Criteria) this;
		}

		public Criteria andCaseReasonLessThanOrEqualTo(String value) {
			addCriterion("CASE_REASON <=", value, "caseReason");
			return (Criteria) this;
		}

		public Criteria andCaseReasonLike(String value) {
			addCriterion("CASE_REASON like", value, "caseReason");
			return (Criteria) this;
		}

		public Criteria andCaseReasonNotLike(String value) {
			addCriterion("CASE_REASON not like", value, "caseReason");
			return (Criteria) this;
		}

		public Criteria andCaseReasonIn(List<String> values) {
			addCriterion("CASE_REASON in", values, "caseReason");
			return (Criteria) this;
		}

		public Criteria andCaseReasonNotIn(List<String> values) {
			addCriterion("CASE_REASON not in", values, "caseReason");
			return (Criteria) this;
		}

		public Criteria andCaseReasonBetween(String value1, String value2) {
			addCriterion("CASE_REASON between", value1, value2, "caseReason");
			return (Criteria) this;
		}

		public Criteria andCaseReasonNotBetween(String value1, String value2) {
			addCriterion("CASE_REASON not between", value1, value2,
					"caseReason");
			return (Criteria) this;
		}

		public Criteria andUndertakerIsNull() {
			addCriterion("UNDERTAKER is null");
			return (Criteria) this;
		}

		public Criteria andUndertakerIsNotNull() {
			addCriterion("UNDERTAKER is not null");
			return (Criteria) this;
		}

		public Criteria andUndertakerEqualTo(String value) {
			addCriterion("UNDERTAKER =", value, "undertaker");
			return (Criteria) this;
		}

		public Criteria andUndertakerNotEqualTo(String value) {
			addCriterion("UNDERTAKER <>", value, "undertaker");
			return (Criteria) this;
		}

		public Criteria andUndertakerGreaterThan(String value) {
			addCriterion("UNDERTAKER >", value, "undertaker");
			return (Criteria) this;
		}

		public Criteria andUndertakerGreaterThanOrEqualTo(String value) {
			addCriterion("UNDERTAKER >=", value, "undertaker");
			return (Criteria) this;
		}

		public Criteria andUndertakerLessThan(String value) {
			addCriterion("UNDERTAKER <", value, "undertaker");
			return (Criteria) this;
		}

		public Criteria andUndertakerLessThanOrEqualTo(String value) {
			addCriterion("UNDERTAKER <=", value, "undertaker");
			return (Criteria) this;
		}

		public Criteria andUndertakerLike(String value) {
			addCriterion("UNDERTAKER like", value, "undertaker");
			return (Criteria) this;
		}

		public Criteria andUndertakerNotLike(String value) {
			addCriterion("UNDERTAKER not like", value, "undertaker");
			return (Criteria) this;
		}

		public Criteria andUndertakerIn(List<String> values) {
			addCriterion("UNDERTAKER in", values, "undertaker");
			return (Criteria) this;
		}

		public Criteria andUndertakerNotIn(List<String> values) {
			addCriterion("UNDERTAKER not in", values, "undertaker");
			return (Criteria) this;
		}

		public Criteria andUndertakerBetween(String value1, String value2) {
			addCriterion("UNDERTAKER between", value1, value2, "undertaker");
			return (Criteria) this;
		}

		public Criteria andUndertakerNotBetween(String value1, String value2) {
			addCriterion("UNDERTAKER not between", value1, value2, "undertaker");
			return (Criteria) this;
		}

		public Criteria andUndertakerTimeIsNull() {
			addCriterion("UNDERTAKER_TIME is null");
			return (Criteria) this;
		}

		public Criteria andUndertakerTimeIsNotNull() {
			addCriterion("UNDERTAKER_TIME is not null");
			return (Criteria) this;
		}

		public Criteria andUndertakerTimeEqualTo(Date value) {
			addCriterion("UNDERTAKER_TIME =", value, "undertakerTime");
			return (Criteria) this;
		}

		public Criteria andUndertakerTimeNotEqualTo(Date value) {
			addCriterion("UNDERTAKER_TIME <>", value, "undertakerTime");
			return (Criteria) this;
		}

		public Criteria andUndertakerTimeGreaterThan(Date value) {
			addCriterion("UNDERTAKER_TIME >", value, "undertakerTime");
			return (Criteria) this;
		}

		public Criteria andUndertakerTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("UNDERTAKER_TIME >=", value, "undertakerTime");
			return (Criteria) this;
		}

		public Criteria andUndertakerTimeLessThan(Date value) {
			addCriterion("UNDERTAKER_TIME <", value, "undertakerTime");
			return (Criteria) this;
		}

		public Criteria andUndertakerTimeLessThanOrEqualTo(Date value) {
			addCriterion("UNDERTAKER_TIME <=", value, "undertakerTime");
			return (Criteria) this;
		}

		public Criteria andUndertakerTimeIn(List<Date> values) {
			addCriterion("UNDERTAKER_TIME in", values, "undertakerTime");
			return (Criteria) this;
		}

		public Criteria andUndertakerTimeNotIn(List<Date> values) {
			addCriterion("UNDERTAKER_TIME not in", values, "undertakerTime");
			return (Criteria) this;
		}

		public Criteria andUndertakerTimeBetween(Date value1, Date value2) {
			addCriterion("UNDERTAKER_TIME between", value1, value2,
					"undertakerTime");
			return (Criteria) this;
		}

		public Criteria andUndertakerTimeNotBetween(Date value1, Date value2) {
			addCriterion("UNDERTAKER_TIME not between", value1, value2,
					"undertakerTime");
			return (Criteria) this;
		}

		public Criteria andAssignOrgIsNull() {
			addCriterion("ASSIGN_ORG is null");
			return (Criteria) this;
		}

		public Criteria andAssignOrgIsNotNull() {
			addCriterion("ASSIGN_ORG is not null");
			return (Criteria) this;
		}

		public Criteria andAssignOrgEqualTo(String value) {
			addCriterion("ASSIGN_ORG =", value, "assignOrg");
			return (Criteria) this;
		}

		public Criteria andAssignOrgNotEqualTo(String value) {
			addCriterion("ASSIGN_ORG <>", value, "assignOrg");
			return (Criteria) this;
		}

		public Criteria andAssignOrgGreaterThan(String value) {
			addCriterion("ASSIGN_ORG >", value, "assignOrg");
			return (Criteria) this;
		}

		public Criteria andAssignOrgGreaterThanOrEqualTo(String value) {
			addCriterion("ASSIGN_ORG >=", value, "assignOrg");
			return (Criteria) this;
		}

		public Criteria andAssignOrgLessThan(String value) {
			addCriterion("ASSIGN_ORG <", value, "assignOrg");
			return (Criteria) this;
		}

		public Criteria andAssignOrgLessThanOrEqualTo(String value) {
			addCriterion("ASSIGN_ORG <=", value, "assignOrg");
			return (Criteria) this;
		}

		public Criteria andAssignOrgLike(String value) {
			addCriterion("ASSIGN_ORG like", value, "assignOrg");
			return (Criteria) this;
		}

		public Criteria andAssignOrgNotLike(String value) {
			addCriterion("ASSIGN_ORG not like", value, "assignOrg");
			return (Criteria) this;
		}

		public Criteria andAssignOrgIn(List<String> values) {
			addCriterion("ASSIGN_ORG in", values, "assignOrg");
			return (Criteria) this;
		}

		public Criteria andAssignOrgNotIn(List<String> values) {
			addCriterion("ASSIGN_ORG not in", values, "assignOrg");
			return (Criteria) this;
		}

		public Criteria andAssignOrgBetween(String value1, String value2) {
			addCriterion("ASSIGN_ORG between", value1, value2, "assignOrg");
			return (Criteria) this;
		}

		public Criteria andAssignOrgNotBetween(String value1, String value2) {
			addCriterion("ASSIGN_ORG not between", value1, value2, "assignOrg");
			return (Criteria) this;
		}

		public Criteria andIsTurnoverIsNull() {
			addCriterion("IS_TURNOVER is null");
			return (Criteria) this;
		}

		public Criteria andIsTurnoverIsNotNull() {
			addCriterion("IS_TURNOVER is not null");
			return (Criteria) this;
		}

		public Criteria andIsTurnoverEqualTo(Integer value) {
			addCriterion("IS_TURNOVER =", value, "isTurnover");
			return (Criteria) this;
		}

		public Criteria andIsTurnoverNotEqualTo(Integer value) {
			addCriterion("IS_TURNOVER <>", value, "isTurnover");
			return (Criteria) this;
		}

		public Criteria andIsTurnoverGreaterThan(Integer value) {
			addCriterion("IS_TURNOVER >", value, "isTurnover");
			return (Criteria) this;
		}

		public Criteria andIsTurnoverGreaterThanOrEqualTo(Integer value) {
			addCriterion("IS_TURNOVER >=", value, "isTurnover");
			return (Criteria) this;
		}

		public Criteria andIsTurnoverLessThan(Integer value) {
			addCriterion("IS_TURNOVER <", value, "isTurnover");
			return (Criteria) this;
		}

		public Criteria andIsTurnoverLessThanOrEqualTo(Integer value) {
			addCriterion("IS_TURNOVER <=", value, "isTurnover");
			return (Criteria) this;
		}

		public Criteria andIsTurnoverIn(List<Integer> values) {
			addCriterion("IS_TURNOVER in", values, "isTurnover");
			return (Criteria) this;
		}

		public Criteria andIsTurnoverNotIn(List<Integer> values) {
			addCriterion("IS_TURNOVER not in", values, "isTurnover");
			return (Criteria) this;
		}

		public Criteria andIsTurnoverBetween(Integer value1, Integer value2) {
			addCriterion("IS_TURNOVER between", value1, value2, "isTurnover");
			return (Criteria) this;
		}

		public Criteria andIsTurnoverNotBetween(Integer value1, Integer value2) {
			addCriterion("IS_TURNOVER not between", value1, value2,
					"isTurnover");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table LIANGFA_XINXIANG20170222.CASE_BASIC
	 * @mbggenerated  Tue Apr 11 11:18:42 CST 2017
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table CASE_BASIC
     *
     * @mbggenerated do_not_delete_during_merge Wed Feb 27 08:49:22 CST 2013
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}