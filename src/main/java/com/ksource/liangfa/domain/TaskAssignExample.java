package com.ksource.liangfa.domain;

import java.util.ArrayList;
import java.util.List;

public class TaskAssignExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table TASK_ASSIGN
	 * @mbggenerated  Sat Dec 31 09:01:24 CST 2011
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table TASK_ASSIGN
	 * @mbggenerated  Sat Dec 31 09:01:24 CST 2011
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table TASK_ASSIGN
	 * @mbggenerated  Sat Dec 31 09:01:24 CST 2011
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TASK_ASSIGN
	 * @mbggenerated  Sat Dec 31 09:01:24 CST 2011
	 */
	public TaskAssignExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TASK_ASSIGN
	 * @mbggenerated  Sat Dec 31 09:01:24 CST 2011
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TASK_ASSIGN
	 * @mbggenerated  Sat Dec 31 09:01:24 CST 2011
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TASK_ASSIGN
	 * @mbggenerated  Sat Dec 31 09:01:24 CST 2011
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TASK_ASSIGN
	 * @mbggenerated  Sat Dec 31 09:01:24 CST 2011
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TASK_ASSIGN
	 * @mbggenerated  Sat Dec 31 09:01:24 CST 2011
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TASK_ASSIGN
	 * @mbggenerated  Sat Dec 31 09:01:24 CST 2011
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TASK_ASSIGN
	 * @mbggenerated  Sat Dec 31 09:01:24 CST 2011
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TASK_ASSIGN
	 * @mbggenerated  Sat Dec 31 09:01:24 CST 2011
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TASK_ASSIGN
	 * @mbggenerated  Sat Dec 31 09:01:24 CST 2011
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TASK_ASSIGN
	 * @mbggenerated  Sat Dec 31 09:01:24 CST 2011
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table TASK_ASSIGN
	 * @mbggenerated  Sat Dec 31 09:01:24 CST 2011
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andDeptIdIsNull() {
			addCriterion("DEPT_ID is null");
			return (Criteria) this;
		}

		public Criteria andDeptIdIsNotNull() {
			addCriterion("DEPT_ID is not null");
			return (Criteria) this;
		}

		public Criteria andDeptIdEqualTo(Integer value) {
			addCriterion("DEPT_ID =", value, "deptId");
			return (Criteria) this;
		}

		public Criteria andDeptIdNotEqualTo(Integer value) {
			addCriterion("DEPT_ID <>", value, "deptId");
			return (Criteria) this;
		}

		public Criteria andDeptIdGreaterThan(Integer value) {
			addCriterion("DEPT_ID >", value, "deptId");
			return (Criteria) this;
		}

		public Criteria andDeptIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("DEPT_ID >=", value, "deptId");
			return (Criteria) this;
		}

		public Criteria andDeptIdLessThan(Integer value) {
			addCriterion("DEPT_ID <", value, "deptId");
			return (Criteria) this;
		}

		public Criteria andDeptIdLessThanOrEqualTo(Integer value) {
			addCriterion("DEPT_ID <=", value, "deptId");
			return (Criteria) this;
		}

		public Criteria andDeptIdIn(List<Integer> values) {
			addCriterion("DEPT_ID in", values, "deptId");
			return (Criteria) this;
		}

		public Criteria andDeptIdNotIn(List<Integer> values) {
			addCriterion("DEPT_ID not in", values, "deptId");
			return (Criteria) this;
		}

		public Criteria andDeptIdBetween(Integer value1, Integer value2) {
			addCriterion("DEPT_ID between", value1, value2, "deptId");
			return (Criteria) this;
		}

		public Criteria andDeptIdNotBetween(Integer value1, Integer value2) {
			addCriterion("DEPT_ID not between", value1, value2, "deptId");
			return (Criteria) this;
		}

		public Criteria andProcDefIdIsNull() {
			addCriterion("PROC_DEF_ID is null");
			return (Criteria) this;
		}

		public Criteria andProcDefIdIsNotNull() {
			addCriterion("PROC_DEF_ID is not null");
			return (Criteria) this;
		}

		public Criteria andProcDefIdEqualTo(String value) {
			addCriterion("PROC_DEF_ID =", value, "procDefId");
			return (Criteria) this;
		}

		public Criteria andProcDefIdNotEqualTo(String value) {
			addCriterion("PROC_DEF_ID <>", value, "procDefId");
			return (Criteria) this;
		}

		public Criteria andProcDefIdGreaterThan(String value) {
			addCriterion("PROC_DEF_ID >", value, "procDefId");
			return (Criteria) this;
		}

		public Criteria andProcDefIdGreaterThanOrEqualTo(String value) {
			addCriterion("PROC_DEF_ID >=", value, "procDefId");
			return (Criteria) this;
		}

		public Criteria andProcDefIdLessThan(String value) {
			addCriterion("PROC_DEF_ID <", value, "procDefId");
			return (Criteria) this;
		}

		public Criteria andProcDefIdLessThanOrEqualTo(String value) {
			addCriterion("PROC_DEF_ID <=", value, "procDefId");
			return (Criteria) this;
		}

		public Criteria andProcDefIdLike(String value) {
			addCriterion("PROC_DEF_ID like", value, "procDefId");
			return (Criteria) this;
		}

		public Criteria andProcDefIdNotLike(String value) {
			addCriterion("PROC_DEF_ID not like", value, "procDefId");
			return (Criteria) this;
		}

		public Criteria andProcDefIdIn(List<String> values) {
			addCriterion("PROC_DEF_ID in", values, "procDefId");
			return (Criteria) this;
		}

		public Criteria andProcDefIdNotIn(List<String> values) {
			addCriterion("PROC_DEF_ID not in", values, "procDefId");
			return (Criteria) this;
		}

		public Criteria andProcDefIdBetween(String value1, String value2) {
			addCriterion("PROC_DEF_ID between", value1, value2, "procDefId");
			return (Criteria) this;
		}

		public Criteria andProcDefIdNotBetween(String value1, String value2) {
			addCriterion("PROC_DEF_ID not between", value1, value2, "procDefId");
			return (Criteria) this;
		}

		public Criteria andTaskDefIdIsNull() {
			addCriterion("TASK_DEF_ID is null");
			return (Criteria) this;
		}

		public Criteria andTaskDefIdIsNotNull() {
			addCriterion("TASK_DEF_ID is not null");
			return (Criteria) this;
		}

		public Criteria andTaskDefIdEqualTo(String value) {
			addCriterion("TASK_DEF_ID =", value, "taskDefId");
			return (Criteria) this;
		}

		public Criteria andTaskDefIdNotEqualTo(String value) {
			addCriterion("TASK_DEF_ID <>", value, "taskDefId");
			return (Criteria) this;
		}

		public Criteria andTaskDefIdGreaterThan(String value) {
			addCriterion("TASK_DEF_ID >", value, "taskDefId");
			return (Criteria) this;
		}

		public Criteria andTaskDefIdGreaterThanOrEqualTo(String value) {
			addCriterion("TASK_DEF_ID >=", value, "taskDefId");
			return (Criteria) this;
		}

		public Criteria andTaskDefIdLessThan(String value) {
			addCriterion("TASK_DEF_ID <", value, "taskDefId");
			return (Criteria) this;
		}

		public Criteria andTaskDefIdLessThanOrEqualTo(String value) {
			addCriterion("TASK_DEF_ID <=", value, "taskDefId");
			return (Criteria) this;
		}

		public Criteria andTaskDefIdLike(String value) {
			addCriterion("TASK_DEF_ID like", value, "taskDefId");
			return (Criteria) this;
		}

		public Criteria andTaskDefIdNotLike(String value) {
			addCriterion("TASK_DEF_ID not like", value, "taskDefId");
			return (Criteria) this;
		}

		public Criteria andTaskDefIdIn(List<String> values) {
			addCriterion("TASK_DEF_ID in", values, "taskDefId");
			return (Criteria) this;
		}

		public Criteria andTaskDefIdNotIn(List<String> values) {
			addCriterion("TASK_DEF_ID not in", values, "taskDefId");
			return (Criteria) this;
		}

		public Criteria andTaskDefIdBetween(String value1, String value2) {
			addCriterion("TASK_DEF_ID between", value1, value2, "taskDefId");
			return (Criteria) this;
		}

		public Criteria andTaskDefIdNotBetween(String value1, String value2) {
			addCriterion("TASK_DEF_ID not between", value1, value2, "taskDefId");
			return (Criteria) this;
		}

		public Criteria andOrgCodeIsNull() {
			addCriterion("ORG_CODE is null");
			return (Criteria) this;
		}

		public Criteria andOrgCodeIsNotNull() {
			addCriterion("ORG_CODE is not null");
			return (Criteria) this;
		}

		public Criteria andOrgCodeEqualTo(Integer value) {
			addCriterion("ORG_CODE =", value, "orgCode");
			return (Criteria) this;
		}

		public Criteria andOrgCodeNotEqualTo(Integer value) {
			addCriterion("ORG_CODE <>", value, "orgCode");
			return (Criteria) this;
		}

		public Criteria andOrgCodeGreaterThan(Integer value) {
			addCriterion("ORG_CODE >", value, "orgCode");
			return (Criteria) this;
		}

		public Criteria andOrgCodeGreaterThanOrEqualTo(Integer value) {
			addCriterion("ORG_CODE >=", value, "orgCode");
			return (Criteria) this;
		}

		public Criteria andOrgCodeLessThan(Integer value) {
			addCriterion("ORG_CODE <", value, "orgCode");
			return (Criteria) this;
		}

		public Criteria andOrgCodeLessThanOrEqualTo(Integer value) {
			addCriterion("ORG_CODE <=", value, "orgCode");
			return (Criteria) this;
		}

		public Criteria andOrgCodeIn(List<Integer> values) {
			addCriterion("ORG_CODE in", values, "orgCode");
			return (Criteria) this;
		}

		public Criteria andOrgCodeNotIn(List<Integer> values) {
			addCriterion("ORG_CODE not in", values, "orgCode");
			return (Criteria) this;
		}

		public Criteria andOrgCodeBetween(Integer value1, Integer value2) {
			addCriterion("ORG_CODE between", value1, value2, "orgCode");
			return (Criteria) this;
		}

		public Criteria andOrgCodeNotBetween(Integer value1, Integer value2) {
			addCriterion("ORG_CODE not between", value1, value2, "orgCode");
			return (Criteria) this;
		}

		public Criteria andAssignTypeIsNull() {
			addCriterion("ASSIGN_TYPE is null");
			return (Criteria) this;
		}

		public Criteria andAssignTypeIsNotNull() {
			addCriterion("ASSIGN_TYPE is not null");
			return (Criteria) this;
		}

		public Criteria andAssignTypeEqualTo(Integer value) {
			addCriterion("ASSIGN_TYPE =", value, "assignType");
			return (Criteria) this;
		}

		public Criteria andAssignTypeNotEqualTo(Integer value) {
			addCriterion("ASSIGN_TYPE <>", value, "assignType");
			return (Criteria) this;
		}

		public Criteria andAssignTypeGreaterThan(Integer value) {
			addCriterion("ASSIGN_TYPE >", value, "assignType");
			return (Criteria) this;
		}

		public Criteria andAssignTypeGreaterThanOrEqualTo(Integer value) {
			addCriterion("ASSIGN_TYPE >=", value, "assignType");
			return (Criteria) this;
		}

		public Criteria andAssignTypeLessThan(Integer value) {
			addCriterion("ASSIGN_TYPE <", value, "assignType");
			return (Criteria) this;
		}

		public Criteria andAssignTypeLessThanOrEqualTo(Integer value) {
			addCriterion("ASSIGN_TYPE <=", value, "assignType");
			return (Criteria) this;
		}

		public Criteria andAssignTypeIn(List<Integer> values) {
			addCriterion("ASSIGN_TYPE in", values, "assignType");
			return (Criteria) this;
		}

		public Criteria andAssignTypeNotIn(List<Integer> values) {
			addCriterion("ASSIGN_TYPE not in", values, "assignType");
			return (Criteria) this;
		}

		public Criteria andAssignTypeBetween(Integer value1, Integer value2) {
			addCriterion("ASSIGN_TYPE between", value1, value2, "assignType");
			return (Criteria) this;
		}

		public Criteria andAssignTypeNotBetween(Integer value1, Integer value2) {
			addCriterion("ASSIGN_TYPE not between", value1, value2,
					"assignType");
			return (Criteria) this;
		}

		public Criteria andAssignPersonIsNull() {
			addCriterion("ASSIGN_PERSON is null");
			return (Criteria) this;
		}

		public Criteria andAssignPersonIsNotNull() {
			addCriterion("ASSIGN_PERSON is not null");
			return (Criteria) this;
		}

		public Criteria andAssignPersonEqualTo(String value) {
			addCriterion("ASSIGN_PERSON =", value, "assignPerson");
			return (Criteria) this;
		}

		public Criteria andAssignPersonNotEqualTo(String value) {
			addCriterion("ASSIGN_PERSON <>", value, "assignPerson");
			return (Criteria) this;
		}

		public Criteria andAssignPersonGreaterThan(String value) {
			addCriterion("ASSIGN_PERSON >", value, "assignPerson");
			return (Criteria) this;
		}

		public Criteria andAssignPersonGreaterThanOrEqualTo(String value) {
			addCriterion("ASSIGN_PERSON >=", value, "assignPerson");
			return (Criteria) this;
		}

		public Criteria andAssignPersonLessThan(String value) {
			addCriterion("ASSIGN_PERSON <", value, "assignPerson");
			return (Criteria) this;
		}

		public Criteria andAssignPersonLessThanOrEqualTo(String value) {
			addCriterion("ASSIGN_PERSON <=", value, "assignPerson");
			return (Criteria) this;
		}

		public Criteria andAssignPersonLike(String value) {
			addCriterion("ASSIGN_PERSON like", value, "assignPerson");
			return (Criteria) this;
		}

		public Criteria andAssignPersonNotLike(String value) {
			addCriterion("ASSIGN_PERSON not like", value, "assignPerson");
			return (Criteria) this;
		}

		public Criteria andAssignPersonIn(List<String> values) {
			addCriterion("ASSIGN_PERSON in", values, "assignPerson");
			return (Criteria) this;
		}

		public Criteria andAssignPersonNotIn(List<String> values) {
			addCriterion("ASSIGN_PERSON not in", values, "assignPerson");
			return (Criteria) this;
		}

		public Criteria andAssignPersonBetween(String value1, String value2) {
			addCriterion("ASSIGN_PERSON between", value1, value2,
					"assignPerson");
			return (Criteria) this;
		}

		public Criteria andAssignPersonNotBetween(String value1, String value2) {
			addCriterion("ASSIGN_PERSON not between", value1, value2,
					"assignPerson");
			return (Criteria) this;
		}

		public Criteria andAssignGroupIsNull() {
			addCriterion("ASSIGN_GROUP is null");
			return (Criteria) this;
		}

		public Criteria andAssignGroupIsNotNull() {
			addCriterion("ASSIGN_GROUP is not null");
			return (Criteria) this;
		}

		public Criteria andAssignGroupEqualTo(String value) {
			addCriterion("ASSIGN_GROUP =", value, "assignGroup");
			return (Criteria) this;
		}

		public Criteria andAssignGroupNotEqualTo(String value) {
			addCriterion("ASSIGN_GROUP <>", value, "assignGroup");
			return (Criteria) this;
		}

		public Criteria andAssignGroupGreaterThan(String value) {
			addCriterion("ASSIGN_GROUP >", value, "assignGroup");
			return (Criteria) this;
		}

		public Criteria andAssignGroupGreaterThanOrEqualTo(String value) {
			addCriterion("ASSIGN_GROUP >=", value, "assignGroup");
			return (Criteria) this;
		}

		public Criteria andAssignGroupLessThan(String value) {
			addCriterion("ASSIGN_GROUP <", value, "assignGroup");
			return (Criteria) this;
		}

		public Criteria andAssignGroupLessThanOrEqualTo(String value) {
			addCriterion("ASSIGN_GROUP <=", value, "assignGroup");
			return (Criteria) this;
		}

		public Criteria andAssignGroupLike(String value) {
			addCriterion("ASSIGN_GROUP like", value, "assignGroup");
			return (Criteria) this;
		}

		public Criteria andAssignGroupNotLike(String value) {
			addCriterion("ASSIGN_GROUP not like", value, "assignGroup");
			return (Criteria) this;
		}

		public Criteria andAssignGroupIn(List<String> values) {
			addCriterion("ASSIGN_GROUP in", values, "assignGroup");
			return (Criteria) this;
		}

		public Criteria andAssignGroupNotIn(List<String> values) {
			addCriterion("ASSIGN_GROUP not in", values, "assignGroup");
			return (Criteria) this;
		}

		public Criteria andAssignGroupBetween(String value1, String value2) {
			addCriterion("ASSIGN_GROUP between", value1, value2, "assignGroup");
			return (Criteria) this;
		}

		public Criteria andAssignGroupNotBetween(String value1, String value2) {
			addCriterion("ASSIGN_GROUP not between", value1, value2,
					"assignGroup");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table TASK_ASSIGN
	 * @mbggenerated  Sat Dec 31 09:01:24 CST 2011
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table TASK_ASSIGN
     *
     * @mbggenerated do_not_delete_during_merge Tue Jun 07 16:46:15 CST 2011
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}