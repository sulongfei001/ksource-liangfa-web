package com.ksource.liangfa.domain;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

public class ProcDiagramExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table PROC_DIAGRAM
	 * @mbggenerated  Thu May 12 14:25:05 CST 2011
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table PROC_DIAGRAM
	 * @mbggenerated  Thu May 12 14:25:05 CST 2011
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table PROC_DIAGRAM
	 * @mbggenerated  Thu May 12 14:25:05 CST 2011
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table PROC_DIAGRAM
	 * @mbggenerated  Thu May 12 14:25:05 CST 2011
	 */
	public ProcDiagramExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table PROC_DIAGRAM
	 * @mbggenerated  Thu May 12 14:25:05 CST 2011
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table PROC_DIAGRAM
	 * @mbggenerated  Thu May 12 14:25:05 CST 2011
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table PROC_DIAGRAM
	 * @mbggenerated  Thu May 12 14:25:05 CST 2011
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table PROC_DIAGRAM
	 * @mbggenerated  Thu May 12 14:25:05 CST 2011
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table PROC_DIAGRAM
	 * @mbggenerated  Thu May 12 14:25:05 CST 2011
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table PROC_DIAGRAM
	 * @mbggenerated  Thu May 12 14:25:05 CST 2011
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table PROC_DIAGRAM
	 * @mbggenerated  Thu May 12 14:25:05 CST 2011
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table PROC_DIAGRAM
	 * @mbggenerated  Thu May 12 14:25:05 CST 2011
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table PROC_DIAGRAM
	 * @mbggenerated  Thu May 12 14:25:05 CST 2011
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table PROC_DIAGRAM
	 * @mbggenerated  Thu May 12 14:25:05 CST 2011
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table PROC_DIAGRAM
	 * @mbggenerated  Thu May 12 14:25:05 CST 2011
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andElementIdIsNull() {
			addCriterion("ELEMENT_ID is null");
			return (Criteria) this;
		}

		public Criteria andElementIdIsNotNull() {
			addCriterion("ELEMENT_ID is not null");
			return (Criteria) this;
		}

		public Criteria andElementIdEqualTo(String value) {
			addCriterion("ELEMENT_ID =", value, "elementId");
			return (Criteria) this;
		}

		public Criteria andElementIdNotEqualTo(String value) {
			addCriterion("ELEMENT_ID <>", value, "elementId");
			return (Criteria) this;
		}

		public Criteria andElementIdGreaterThan(String value) {
			addCriterion("ELEMENT_ID >", value, "elementId");
			return (Criteria) this;
		}

		public Criteria andElementIdGreaterThanOrEqualTo(String value) {
			addCriterion("ELEMENT_ID >=", value, "elementId");
			return (Criteria) this;
		}

		public Criteria andElementIdLessThan(String value) {
			addCriterion("ELEMENT_ID <", value, "elementId");
			return (Criteria) this;
		}

		public Criteria andElementIdLessThanOrEqualTo(String value) {
			addCriterion("ELEMENT_ID <=", value, "elementId");
			return (Criteria) this;
		}

		public Criteria andElementIdLike(String value) {
			addCriterion("ELEMENT_ID like", value, "elementId");
			return (Criteria) this;
		}

		public Criteria andElementIdNotLike(String value) {
			addCriterion("ELEMENT_ID not like", value, "elementId");
			return (Criteria) this;
		}

		public Criteria andElementIdIn(List<String> values) {
			addCriterion("ELEMENT_ID in", values, "elementId");
			return (Criteria) this;
		}

		public Criteria andElementIdNotIn(List<String> values) {
			addCriterion("ELEMENT_ID not in", values, "elementId");
			return (Criteria) this;
		}

		public Criteria andElementIdBetween(String value1, String value2) {
			addCriterion("ELEMENT_ID between", value1, value2, "elementId");
			return (Criteria) this;
		}

		public Criteria andElementIdNotBetween(String value1, String value2) {
			addCriterion("ELEMENT_ID not between", value1, value2, "elementId");
			return (Criteria) this;
		}

		public Criteria andProcDefIdIsNull() {
			addCriterion("PROC_DEF_ID is null");
			return (Criteria) this;
		}

		public Criteria andProcDefIdIsNotNull() {
			addCriterion("PROC_DEF_ID is not null");
			return (Criteria) this;
		}

		public Criteria andProcDefIdEqualTo(String value) {
			addCriterion("PROC_DEF_ID =", value, "procDefId");
			return (Criteria) this;
		}

		public Criteria andProcDefIdNotEqualTo(String value) {
			addCriterion("PROC_DEF_ID <>", value, "procDefId");
			return (Criteria) this;
		}

		public Criteria andProcDefIdGreaterThan(String value) {
			addCriterion("PROC_DEF_ID >", value, "procDefId");
			return (Criteria) this;
		}

		public Criteria andProcDefIdGreaterThanOrEqualTo(String value) {
			addCriterion("PROC_DEF_ID >=", value, "procDefId");
			return (Criteria) this;
		}

		public Criteria andProcDefIdLessThan(String value) {
			addCriterion("PROC_DEF_ID <", value, "procDefId");
			return (Criteria) this;
		}

		public Criteria andProcDefIdLessThanOrEqualTo(String value) {
			addCriterion("PROC_DEF_ID <=", value, "procDefId");
			return (Criteria) this;
		}

		public Criteria andProcDefIdLike(String value) {
			addCriterion("PROC_DEF_ID like", value, "procDefId");
			return (Criteria) this;
		}

		public Criteria andProcDefIdNotLike(String value) {
			addCriterion("PROC_DEF_ID not like", value, "procDefId");
			return (Criteria) this;
		}

		public Criteria andProcDefIdIn(List<String> values) {
			addCriterion("PROC_DEF_ID in", values, "procDefId");
			return (Criteria) this;
		}

		public Criteria andProcDefIdNotIn(List<String> values) {
			addCriterion("PROC_DEF_ID not in", values, "procDefId");
			return (Criteria) this;
		}

		public Criteria andProcDefIdBetween(String value1, String value2) {
			addCriterion("PROC_DEF_ID between", value1, value2, "procDefId");
			return (Criteria) this;
		}

		public Criteria andProcDefIdNotBetween(String value1, String value2) {
			addCriterion("PROC_DEF_ID not between", value1, value2, "procDefId");
			return (Criteria) this;
		}

		public Criteria andElementNameIsNull() {
			addCriterion("ELEMENT_NAME is null");
			return (Criteria) this;
		}

		public Criteria andElementNameIsNotNull() {
			addCriterion("ELEMENT_NAME is not null");
			return (Criteria) this;
		}

		public Criteria andElementNameEqualTo(String value) {
			addCriterion("ELEMENT_NAME =", value, "elementName");
			return (Criteria) this;
		}

		public Criteria andElementNameNotEqualTo(String value) {
			addCriterion("ELEMENT_NAME <>", value, "elementName");
			return (Criteria) this;
		}

		public Criteria andElementNameGreaterThan(String value) {
			addCriterion("ELEMENT_NAME >", value, "elementName");
			return (Criteria) this;
		}

		public Criteria andElementNameGreaterThanOrEqualTo(String value) {
			addCriterion("ELEMENT_NAME >=", value, "elementName");
			return (Criteria) this;
		}

		public Criteria andElementNameLessThan(String value) {
			addCriterion("ELEMENT_NAME <", value, "elementName");
			return (Criteria) this;
		}

		public Criteria andElementNameLessThanOrEqualTo(String value) {
			addCriterion("ELEMENT_NAME <=", value, "elementName");
			return (Criteria) this;
		}

		public Criteria andElementNameLike(String value) {
			addCriterion("ELEMENT_NAME like", value, "elementName");
			return (Criteria) this;
		}

		public Criteria andElementNameNotLike(String value) {
			addCriterion("ELEMENT_NAME not like", value, "elementName");
			return (Criteria) this;
		}

		public Criteria andElementNameIn(List<String> values) {
			addCriterion("ELEMENT_NAME in", values, "elementName");
			return (Criteria) this;
		}

		public Criteria andElementNameNotIn(List<String> values) {
			addCriterion("ELEMENT_NAME not in", values, "elementName");
			return (Criteria) this;
		}

		public Criteria andElementNameBetween(String value1, String value2) {
			addCriterion("ELEMENT_NAME between", value1, value2, "elementName");
			return (Criteria) this;
		}

		public Criteria andElementNameNotBetween(String value1, String value2) {
			addCriterion("ELEMENT_NAME not between", value1, value2,
					"elementName");
			return (Criteria) this;
		}

		public Criteria andHeightIsNull() {
			addCriterion("HEIGHT is null");
			return (Criteria) this;
		}

		public Criteria andHeightIsNotNull() {
			addCriterion("HEIGHT is not null");
			return (Criteria) this;
		}

		public Criteria andHeightEqualTo(BigDecimal value) {
			addCriterion("HEIGHT =", value, "height");
			return (Criteria) this;
		}

		public Criteria andHeightNotEqualTo(BigDecimal value) {
			addCriterion("HEIGHT <>", value, "height");
			return (Criteria) this;
		}

		public Criteria andHeightGreaterThan(BigDecimal value) {
			addCriterion("HEIGHT >", value, "height");
			return (Criteria) this;
		}

		public Criteria andHeightGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("HEIGHT >=", value, "height");
			return (Criteria) this;
		}

		public Criteria andHeightLessThan(BigDecimal value) {
			addCriterion("HEIGHT <", value, "height");
			return (Criteria) this;
		}

		public Criteria andHeightLessThanOrEqualTo(BigDecimal value) {
			addCriterion("HEIGHT <=", value, "height");
			return (Criteria) this;
		}

		public Criteria andHeightIn(List<BigDecimal> values) {
			addCriterion("HEIGHT in", values, "height");
			return (Criteria) this;
		}

		public Criteria andHeightNotIn(List<BigDecimal> values) {
			addCriterion("HEIGHT not in", values, "height");
			return (Criteria) this;
		}

		public Criteria andHeightBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("HEIGHT between", value1, value2, "height");
			return (Criteria) this;
		}

		public Criteria andHeightNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("HEIGHT not between", value1, value2, "height");
			return (Criteria) this;
		}

		public Criteria andWidthIsNull() {
			addCriterion("WIDTH is null");
			return (Criteria) this;
		}

		public Criteria andWidthIsNotNull() {
			addCriterion("WIDTH is not null");
			return (Criteria) this;
		}

		public Criteria andWidthEqualTo(BigDecimal value) {
			addCriterion("WIDTH =", value, "width");
			return (Criteria) this;
		}

		public Criteria andWidthNotEqualTo(BigDecimal value) {
			addCriterion("WIDTH <>", value, "width");
			return (Criteria) this;
		}

		public Criteria andWidthGreaterThan(BigDecimal value) {
			addCriterion("WIDTH >", value, "width");
			return (Criteria) this;
		}

		public Criteria andWidthGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("WIDTH >=", value, "width");
			return (Criteria) this;
		}

		public Criteria andWidthLessThan(BigDecimal value) {
			addCriterion("WIDTH <", value, "width");
			return (Criteria) this;
		}

		public Criteria andWidthLessThanOrEqualTo(BigDecimal value) {
			addCriterion("WIDTH <=", value, "width");
			return (Criteria) this;
		}

		public Criteria andWidthIn(List<BigDecimal> values) {
			addCriterion("WIDTH in", values, "width");
			return (Criteria) this;
		}

		public Criteria andWidthNotIn(List<BigDecimal> values) {
			addCriterion("WIDTH not in", values, "width");
			return (Criteria) this;
		}

		public Criteria andWidthBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("WIDTH between", value1, value2, "width");
			return (Criteria) this;
		}

		public Criteria andWidthNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("WIDTH not between", value1, value2, "width");
			return (Criteria) this;
		}

		public Criteria andPointXIsNull() {
			addCriterion("POINT_X is null");
			return (Criteria) this;
		}

		public Criteria andPointXIsNotNull() {
			addCriterion("POINT_X is not null");
			return (Criteria) this;
		}

		public Criteria andPointXEqualTo(BigDecimal value) {
			addCriterion("POINT_X =", value, "pointX");
			return (Criteria) this;
		}

		public Criteria andPointXNotEqualTo(BigDecimal value) {
			addCriterion("POINT_X <>", value, "pointX");
			return (Criteria) this;
		}

		public Criteria andPointXGreaterThan(BigDecimal value) {
			addCriterion("POINT_X >", value, "pointX");
			return (Criteria) this;
		}

		public Criteria andPointXGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("POINT_X >=", value, "pointX");
			return (Criteria) this;
		}

		public Criteria andPointXLessThan(BigDecimal value) {
			addCriterion("POINT_X <", value, "pointX");
			return (Criteria) this;
		}

		public Criteria andPointXLessThanOrEqualTo(BigDecimal value) {
			addCriterion("POINT_X <=", value, "pointX");
			return (Criteria) this;
		}

		public Criteria andPointXIn(List<BigDecimal> values) {
			addCriterion("POINT_X in", values, "pointX");
			return (Criteria) this;
		}

		public Criteria andPointXNotIn(List<BigDecimal> values) {
			addCriterion("POINT_X not in", values, "pointX");
			return (Criteria) this;
		}

		public Criteria andPointXBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("POINT_X between", value1, value2, "pointX");
			return (Criteria) this;
		}

		public Criteria andPointXNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("POINT_X not between", value1, value2, "pointX");
			return (Criteria) this;
		}

		public Criteria andPointYIsNull() {
			addCriterion("POINT_Y is null");
			return (Criteria) this;
		}

		public Criteria andPointYIsNotNull() {
			addCriterion("POINT_Y is not null");
			return (Criteria) this;
		}

		public Criteria andPointYEqualTo(BigDecimal value) {
			addCriterion("POINT_Y =", value, "pointY");
			return (Criteria) this;
		}

		public Criteria andPointYNotEqualTo(BigDecimal value) {
			addCriterion("POINT_Y <>", value, "pointY");
			return (Criteria) this;
		}

		public Criteria andPointYGreaterThan(BigDecimal value) {
			addCriterion("POINT_Y >", value, "pointY");
			return (Criteria) this;
		}

		public Criteria andPointYGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("POINT_Y >=", value, "pointY");
			return (Criteria) this;
		}

		public Criteria andPointYLessThan(BigDecimal value) {
			addCriterion("POINT_Y <", value, "pointY");
			return (Criteria) this;
		}

		public Criteria andPointYLessThanOrEqualTo(BigDecimal value) {
			addCriterion("POINT_Y <=", value, "pointY");
			return (Criteria) this;
		}

		public Criteria andPointYIn(List<BigDecimal> values) {
			addCriterion("POINT_Y in", values, "pointY");
			return (Criteria) this;
		}

		public Criteria andPointYNotIn(List<BigDecimal> values) {
			addCriterion("POINT_Y not in", values, "pointY");
			return (Criteria) this;
		}

		public Criteria andPointYBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("POINT_Y between", value1, value2, "pointY");
			return (Criteria) this;
		}

		public Criteria andPointYNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("POINT_Y not between", value1, value2, "pointY");
			return (Criteria) this;
		}

		public Criteria andPointX2IsNull() {
			addCriterion("POINT_X2 is null");
			return (Criteria) this;
		}

		public Criteria andPointX2IsNotNull() {
			addCriterion("POINT_X2 is not null");
			return (Criteria) this;
		}

		public Criteria andPointX2EqualTo(BigDecimal value) {
			addCriterion("POINT_X2 =", value, "pointX2");
			return (Criteria) this;
		}

		public Criteria andPointX2NotEqualTo(BigDecimal value) {
			addCriterion("POINT_X2 <>", value, "pointX2");
			return (Criteria) this;
		}

		public Criteria andPointX2GreaterThan(BigDecimal value) {
			addCriterion("POINT_X2 >", value, "pointX2");
			return (Criteria) this;
		}

		public Criteria andPointX2GreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("POINT_X2 >=", value, "pointX2");
			return (Criteria) this;
		}

		public Criteria andPointX2LessThan(BigDecimal value) {
			addCriterion("POINT_X2 <", value, "pointX2");
			return (Criteria) this;
		}

		public Criteria andPointX2LessThanOrEqualTo(BigDecimal value) {
			addCriterion("POINT_X2 <=", value, "pointX2");
			return (Criteria) this;
		}

		public Criteria andPointX2In(List<BigDecimal> values) {
			addCriterion("POINT_X2 in", values, "pointX2");
			return (Criteria) this;
		}

		public Criteria andPointX2NotIn(List<BigDecimal> values) {
			addCriterion("POINT_X2 not in", values, "pointX2");
			return (Criteria) this;
		}

		public Criteria andPointX2Between(BigDecimal value1, BigDecimal value2) {
			addCriterion("POINT_X2 between", value1, value2, "pointX2");
			return (Criteria) this;
		}

		public Criteria andPointX2NotBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("POINT_X2 not between", value1, value2, "pointX2");
			return (Criteria) this;
		}

		public Criteria andPointY2IsNull() {
			addCriterion("POINT_Y2 is null");
			return (Criteria) this;
		}

		public Criteria andPointY2IsNotNull() {
			addCriterion("POINT_Y2 is not null");
			return (Criteria) this;
		}

		public Criteria andPointY2EqualTo(BigDecimal value) {
			addCriterion("POINT_Y2 =", value, "pointY2");
			return (Criteria) this;
		}

		public Criteria andPointY2NotEqualTo(BigDecimal value) {
			addCriterion("POINT_Y2 <>", value, "pointY2");
			return (Criteria) this;
		}

		public Criteria andPointY2GreaterThan(BigDecimal value) {
			addCriterion("POINT_Y2 >", value, "pointY2");
			return (Criteria) this;
		}

		public Criteria andPointY2GreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("POINT_Y2 >=", value, "pointY2");
			return (Criteria) this;
		}

		public Criteria andPointY2LessThan(BigDecimal value) {
			addCriterion("POINT_Y2 <", value, "pointY2");
			return (Criteria) this;
		}

		public Criteria andPointY2LessThanOrEqualTo(BigDecimal value) {
			addCriterion("POINT_Y2 <=", value, "pointY2");
			return (Criteria) this;
		}

		public Criteria andPointY2In(List<BigDecimal> values) {
			addCriterion("POINT_Y2 in", values, "pointY2");
			return (Criteria) this;
		}

		public Criteria andPointY2NotIn(List<BigDecimal> values) {
			addCriterion("POINT_Y2 not in", values, "pointY2");
			return (Criteria) this;
		}

		public Criteria andPointY2Between(BigDecimal value1, BigDecimal value2) {
			addCriterion("POINT_Y2 between", value1, value2, "pointY2");
			return (Criteria) this;
		}

		public Criteria andPointY2NotBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("POINT_Y2 not between", value1, value2, "pointY2");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table PROC_DIAGRAM
	 * @mbggenerated  Thu May 12 14:25:05 CST 2011
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PROC_DIAGRAM
     *
     * @mbggenerated do_not_delete_during_merge Sat May 07 14:52:40 CST 2011
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}