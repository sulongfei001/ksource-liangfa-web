package com.ksource.liangfa.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class XingzhengNotPenaltyExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table LIANGFA_XINXIANG20170222.XINGZHENG_NOT_PENALTY
     *
     * @mbggenerated Wed Jul 26 13:56:35 CST 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table LIANGFA_XINXIANG20170222.XINGZHENG_NOT_PENALTY
     *
     * @mbggenerated Wed Jul 26 13:56:36 CST 2017
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table LIANGFA_XINXIANG20170222.XINGZHENG_NOT_PENALTY
     *
     * @mbggenerated Wed Jul 26 13:56:36 CST 2017
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table LIANGFA_XINXIANG20170222.XINGZHENG_NOT_PENALTY
     *
     * @mbggenerated Wed Jul 26 13:56:35 CST 2017
     */
    public XingzhengNotPenaltyExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table LIANGFA_XINXIANG20170222.XINGZHENG_NOT_PENALTY
     *
     * @mbggenerated Wed Jul 26 13:56:35 CST 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table LIANGFA_XINXIANG20170222.XINGZHENG_NOT_PENALTY
     *
     * @mbggenerated Wed Jul 26 13:56:36 CST 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table LIANGFA_XINXIANG20170222.XINGZHENG_NOT_PENALTY
     *
     * @mbggenerated Wed Jul 26 13:56:36 CST 2017
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table LIANGFA_XINXIANG20170222.XINGZHENG_NOT_PENALTY
     *
     * @mbggenerated Wed Jul 26 13:56:36 CST 2017
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table LIANGFA_XINXIANG20170222.XINGZHENG_NOT_PENALTY
     *
     * @mbggenerated Wed Jul 26 13:56:36 CST 2017
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table LIANGFA_XINXIANG20170222.XINGZHENG_NOT_PENALTY
     *
     * @mbggenerated Wed Jul 26 13:56:36 CST 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table LIANGFA_XINXIANG20170222.XINGZHENG_NOT_PENALTY
     *
     * @mbggenerated Wed Jul 26 13:56:36 CST 2017
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table LIANGFA_XINXIANG20170222.XINGZHENG_NOT_PENALTY
     *
     * @mbggenerated Wed Jul 26 13:56:36 CST 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table LIANGFA_XINXIANG20170222.XINGZHENG_NOT_PENALTY
     *
     * @mbggenerated Wed Jul 26 13:56:36 CST 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table LIANGFA_XINXIANG20170222.XINGZHENG_NOT_PENALTY
     *
     * @mbggenerated Wed Jul 26 13:56:36 CST 2017
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table LIANGFA_XINXIANG20170222.XINGZHENG_NOT_PENALTY
     *
     * @mbggenerated Wed Jul 26 13:56:36 CST 2017
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andCaseIdIsNull() {
            addCriterion("CASE_ID is null");
            return (Criteria) this;
        }

        public Criteria andCaseIdIsNotNull() {
            addCriterion("CASE_ID is not null");
            return (Criteria) this;
        }

        public Criteria andCaseIdEqualTo(String value) {
            addCriterion("CASE_ID =", value, "caseId");
            return (Criteria) this;
        }

        public Criteria andCaseIdNotEqualTo(String value) {
            addCriterion("CASE_ID <>", value, "caseId");
            return (Criteria) this;
        }

        public Criteria andCaseIdGreaterThan(String value) {
            addCriterion("CASE_ID >", value, "caseId");
            return (Criteria) this;
        }

        public Criteria andCaseIdGreaterThanOrEqualTo(String value) {
            addCriterion("CASE_ID >=", value, "caseId");
            return (Criteria) this;
        }

        public Criteria andCaseIdLessThan(String value) {
            addCriterion("CASE_ID <", value, "caseId");
            return (Criteria) this;
        }

        public Criteria andCaseIdLessThanOrEqualTo(String value) {
            addCriterion("CASE_ID <=", value, "caseId");
            return (Criteria) this;
        }

        public Criteria andCaseIdLike(String value) {
            addCriterion("CASE_ID like", value, "caseId");
            return (Criteria) this;
        }

        public Criteria andCaseIdNotLike(String value) {
            addCriterion("CASE_ID not like", value, "caseId");
            return (Criteria) this;
        }

        public Criteria andCaseIdIn(List<String> values) {
            addCriterion("CASE_ID in", values, "caseId");
            return (Criteria) this;
        }

        public Criteria andCaseIdNotIn(List<String> values) {
            addCriterion("CASE_ID not in", values, "caseId");
            return (Criteria) this;
        }

        public Criteria andCaseIdBetween(String value1, String value2) {
            addCriterion("CASE_ID between", value1, value2, "caseId");
            return (Criteria) this;
        }

        public Criteria andCaseIdNotBetween(String value1, String value2) {
            addCriterion("CASE_ID not between", value1, value2, "caseId");
            return (Criteria) this;
        }

        public Criteria andUndertakerIsNull() {
            addCriterion("UNDERTAKER is null");
            return (Criteria) this;
        }

        public Criteria andUndertakerIsNotNull() {
            addCriterion("UNDERTAKER is not null");
            return (Criteria) this;
        }

        public Criteria andUndertakerEqualTo(String value) {
            addCriterion("UNDERTAKER =", value, "undertaker");
            return (Criteria) this;
        }

        public Criteria andUndertakerNotEqualTo(String value) {
            addCriterion("UNDERTAKER <>", value, "undertaker");
            return (Criteria) this;
        }

        public Criteria andUndertakerGreaterThan(String value) {
            addCriterion("UNDERTAKER >", value, "undertaker");
            return (Criteria) this;
        }

        public Criteria andUndertakerGreaterThanOrEqualTo(String value) {
            addCriterion("UNDERTAKER >=", value, "undertaker");
            return (Criteria) this;
        }

        public Criteria andUndertakerLessThan(String value) {
            addCriterion("UNDERTAKER <", value, "undertaker");
            return (Criteria) this;
        }

        public Criteria andUndertakerLessThanOrEqualTo(String value) {
            addCriterion("UNDERTAKER <=", value, "undertaker");
            return (Criteria) this;
        }

        public Criteria andUndertakerLike(String value) {
            addCriterion("UNDERTAKER like", value, "undertaker");
            return (Criteria) this;
        }

        public Criteria andUndertakerNotLike(String value) {
            addCriterion("UNDERTAKER not like", value, "undertaker");
            return (Criteria) this;
        }

        public Criteria andUndertakerIn(List<String> values) {
            addCriterion("UNDERTAKER in", values, "undertaker");
            return (Criteria) this;
        }

        public Criteria andUndertakerNotIn(List<String> values) {
            addCriterion("UNDERTAKER not in", values, "undertaker");
            return (Criteria) this;
        }

        public Criteria andUndertakerBetween(String value1, String value2) {
            addCriterion("UNDERTAKER between", value1, value2, "undertaker");
            return (Criteria) this;
        }

        public Criteria andUndertakerNotBetween(String value1, String value2) {
            addCriterion("UNDERTAKER not between", value1, value2, "undertaker");
            return (Criteria) this;
        }

        public Criteria andUndertakeTimeIsNull() {
            addCriterion("UNDERTAKE_TIME is null");
            return (Criteria) this;
        }

        public Criteria andUndertakeTimeIsNotNull() {
            addCriterion("UNDERTAKE_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andUndertakeTimeEqualTo(Date value) {
            addCriterion("UNDERTAKE_TIME =", value, "undertakeTime");
            return (Criteria) this;
        }

        public Criteria andUndertakeTimeNotEqualTo(Date value) {
            addCriterion("UNDERTAKE_TIME <>", value, "undertakeTime");
            return (Criteria) this;
        }

        public Criteria andUndertakeTimeGreaterThan(Date value) {
            addCriterion("UNDERTAKE_TIME >", value, "undertakeTime");
            return (Criteria) this;
        }

        public Criteria andUndertakeTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("UNDERTAKE_TIME >=", value, "undertakeTime");
            return (Criteria) this;
        }

        public Criteria andUndertakeTimeLessThan(Date value) {
            addCriterion("UNDERTAKE_TIME <", value, "undertakeTime");
            return (Criteria) this;
        }

        public Criteria andUndertakeTimeLessThanOrEqualTo(Date value) {
            addCriterion("UNDERTAKE_TIME <=", value, "undertakeTime");
            return (Criteria) this;
        }

        public Criteria andUndertakeTimeIn(List<Date> values) {
            addCriterion("UNDERTAKE_TIME in", values, "undertakeTime");
            return (Criteria) this;
        }

        public Criteria andUndertakeTimeNotIn(List<Date> values) {
            addCriterion("UNDERTAKE_TIME not in", values, "undertakeTime");
            return (Criteria) this;
        }

        public Criteria andUndertakeTimeBetween(Date value1, Date value2) {
            addCriterion("UNDERTAKE_TIME between", value1, value2, "undertakeTime");
            return (Criteria) this;
        }

        public Criteria andUndertakeTimeNotBetween(Date value1, Date value2) {
            addCriterion("UNDERTAKE_TIME not between", value1, value2, "undertakeTime");
            return (Criteria) this;
        }

        public Criteria andAcceptOrgIsNull() {
            addCriterion("ACCEPT_ORG is null");
            return (Criteria) this;
        }

        public Criteria andAcceptOrgIsNotNull() {
            addCriterion("ACCEPT_ORG is not null");
            return (Criteria) this;
        }

        public Criteria andAcceptOrgEqualTo(Integer value) {
            addCriterion("ACCEPT_ORG =", value, "acceptOrg");
            return (Criteria) this;
        }

        public Criteria andAcceptOrgNotEqualTo(Integer value) {
            addCriterion("ACCEPT_ORG <>", value, "acceptOrg");
            return (Criteria) this;
        }

        public Criteria andAcceptOrgGreaterThan(Integer value) {
            addCriterion("ACCEPT_ORG >", value, "acceptOrg");
            return (Criteria) this;
        }

        public Criteria andAcceptOrgGreaterThanOrEqualTo(Integer value) {
            addCriterion("ACCEPT_ORG >=", value, "acceptOrg");
            return (Criteria) this;
        }

        public Criteria andAcceptOrgLessThan(Integer value) {
            addCriterion("ACCEPT_ORG <", value, "acceptOrg");
            return (Criteria) this;
        }

        public Criteria andAcceptOrgLessThanOrEqualTo(Integer value) {
            addCriterion("ACCEPT_ORG <=", value, "acceptOrg");
            return (Criteria) this;
        }

        public Criteria andAcceptOrgIn(List<Integer> values) {
            addCriterion("ACCEPT_ORG in", values, "acceptOrg");
            return (Criteria) this;
        }

        public Criteria andAcceptOrgNotIn(List<Integer> values) {
            addCriterion("ACCEPT_ORG not in", values, "acceptOrg");
            return (Criteria) this;
        }

        public Criteria andAcceptOrgBetween(Integer value1, Integer value2) {
            addCriterion("ACCEPT_ORG between", value1, value2, "acceptOrg");
            return (Criteria) this;
        }

        public Criteria andAcceptOrgNotBetween(Integer value1, Integer value2) {
            addCriterion("ACCEPT_ORG not between", value1, value2, "acceptOrg");
            return (Criteria) this;
        }

        public Criteria andFileIdIsNull() {
            addCriterion("FILE_ID is null");
            return (Criteria) this;
        }

        public Criteria andFileIdIsNotNull() {
            addCriterion("FILE_ID is not null");
            return (Criteria) this;
        }

        public Criteria andFileIdEqualTo(String value) {
            addCriterion("FILE_ID =", value, "fileId");
            return (Criteria) this;
        }

        public Criteria andFileIdNotEqualTo(String value) {
            addCriterion("FILE_ID <>", value, "fileId");
            return (Criteria) this;
        }

        public Criteria andFileIdGreaterThan(String value) {
            addCriterion("FILE_ID >", value, "fileId");
            return (Criteria) this;
        }

        public Criteria andFileIdGreaterThanOrEqualTo(String value) {
            addCriterion("FILE_ID >=", value, "fileId");
            return (Criteria) this;
        }

        public Criteria andFileIdLessThan(String value) {
            addCriterion("FILE_ID <", value, "fileId");
            return (Criteria) this;
        }

        public Criteria andFileIdLessThanOrEqualTo(String value) {
            addCriterion("FILE_ID <=", value, "fileId");
            return (Criteria) this;
        }

        public Criteria andFileIdLike(String value) {
            addCriterion("FILE_ID like", value, "fileId");
            return (Criteria) this;
        }

        public Criteria andFileIdNotLike(String value) {
            addCriterion("FILE_ID not like", value, "fileId");
            return (Criteria) this;
        }

        public Criteria andFileIdIn(List<String> values) {
            addCriterion("FILE_ID in", values, "fileId");
            return (Criteria) this;
        }

        public Criteria andFileIdNotIn(List<String> values) {
            addCriterion("FILE_ID not in", values, "fileId");
            return (Criteria) this;
        }

        public Criteria andFileIdBetween(String value1, String value2) {
            addCriterion("FILE_ID between", value1, value2, "fileId");
            return (Criteria) this;
        }

        public Criteria andFileIdNotBetween(String value1, String value2) {
            addCriterion("FILE_ID not between", value1, value2, "fileId");
            return (Criteria) this;
        }

        public Criteria andNotPenaltyReasonIsNull() {
            addCriterion("NOT_PENALTY_REASON is null");
            return (Criteria) this;
        }

        public Criteria andNotPenaltyReasonIsNotNull() {
            addCriterion("NOT_PENALTY_REASON is not null");
            return (Criteria) this;
        }

        public Criteria andNotPenaltyReasonEqualTo(String value) {
            addCriterion("NOT_PENALTY_REASON =", value, "notPenaltyReason");
            return (Criteria) this;
        }

        public Criteria andNotPenaltyReasonNotEqualTo(String value) {
            addCriterion("NOT_PENALTY_REASON <>", value, "notPenaltyReason");
            return (Criteria) this;
        }

        public Criteria andNotPenaltyReasonGreaterThan(String value) {
            addCriterion("NOT_PENALTY_REASON >", value, "notPenaltyReason");
            return (Criteria) this;
        }

        public Criteria andNotPenaltyReasonGreaterThanOrEqualTo(String value) {
            addCriterion("NOT_PENALTY_REASON >=", value, "notPenaltyReason");
            return (Criteria) this;
        }

        public Criteria andNotPenaltyReasonLessThan(String value) {
            addCriterion("NOT_PENALTY_REASON <", value, "notPenaltyReason");
            return (Criteria) this;
        }

        public Criteria andNotPenaltyReasonLessThanOrEqualTo(String value) {
            addCriterion("NOT_PENALTY_REASON <=", value, "notPenaltyReason");
            return (Criteria) this;
        }

        public Criteria andNotPenaltyReasonLike(String value) {
            addCriterion("NOT_PENALTY_REASON like", value, "notPenaltyReason");
            return (Criteria) this;
        }

        public Criteria andNotPenaltyReasonNotLike(String value) {
            addCriterion("NOT_PENALTY_REASON not like", value, "notPenaltyReason");
            return (Criteria) this;
        }

        public Criteria andNotPenaltyReasonIn(List<String> values) {
            addCriterion("NOT_PENALTY_REASON in", values, "notPenaltyReason");
            return (Criteria) this;
        }

        public Criteria andNotPenaltyReasonNotIn(List<String> values) {
            addCriterion("NOT_PENALTY_REASON not in", values, "notPenaltyReason");
            return (Criteria) this;
        }

        public Criteria andNotPenaltyReasonBetween(String value1, String value2) {
            addCriterion("NOT_PENALTY_REASON between", value1, value2, "notPenaltyReason");
            return (Criteria) this;
        }

        public Criteria andNotPenaltyReasonNotBetween(String value1, String value2) {
            addCriterion("NOT_PENALTY_REASON not between", value1, value2, "notPenaltyReason");
            return (Criteria) this;
        }

        public Criteria andMemoIsNull() {
            addCriterion("MEMO is null");
            return (Criteria) this;
        }

        public Criteria andMemoIsNotNull() {
            addCriterion("MEMO is not null");
            return (Criteria) this;
        }

        public Criteria andMemoEqualTo(String value) {
            addCriterion("MEMO =", value, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoNotEqualTo(String value) {
            addCriterion("MEMO <>", value, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoGreaterThan(String value) {
            addCriterion("MEMO >", value, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoGreaterThanOrEqualTo(String value) {
            addCriterion("MEMO >=", value, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoLessThan(String value) {
            addCriterion("MEMO <", value, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoLessThanOrEqualTo(String value) {
            addCriterion("MEMO <=", value, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoLike(String value) {
            addCriterion("MEMO like", value, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoNotLike(String value) {
            addCriterion("MEMO not like", value, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoIn(List<String> values) {
            addCriterion("MEMO in", values, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoNotIn(List<String> values) {
            addCriterion("MEMO not in", values, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoBetween(String value1, String value2) {
            addCriterion("MEMO between", value1, value2, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoNotBetween(String value1, String value2) {
            addCriterion("MEMO not between", value1, value2, "memo");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table LIANGFA_XINXIANG20170222.XINGZHENG_NOT_PENALTY
     *
     * @mbggenerated do_not_delete_during_merge Wed Jul 26 13:56:36 CST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table LIANGFA_XINXIANG20170222.XINGZHENG_NOT_PENALTY
     *
     * @mbggenerated Wed Jul 26 13:56:36 CST 2017
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}