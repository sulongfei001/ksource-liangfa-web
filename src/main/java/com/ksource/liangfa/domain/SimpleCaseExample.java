package com.ksource.liangfa.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.math.BigDecimal;

public class SimpleCaseExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table SIMPLE_CASE_
	 * @mbggenerated  Wed Jul 18 15:27:05 CST 2012
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table SIMPLE_CASE_
	 * @mbggenerated  Wed Jul 18 15:27:05 CST 2012
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table SIMPLE_CASE_
	 * @mbggenerated  Wed Jul 18 15:27:05 CST 2012
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table SIMPLE_CASE_
	 * @mbggenerated  Wed Jul 18 15:27:05 CST 2012
	 */
	public SimpleCaseExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table SIMPLE_CASE_
	 * @mbggenerated  Wed Jul 18 15:27:05 CST 2012
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table SIMPLE_CASE_
	 * @mbggenerated  Wed Jul 18 15:27:05 CST 2012
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table SIMPLE_CASE_
	 * @mbggenerated  Wed Jul 18 15:27:05 CST 2012
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table SIMPLE_CASE_
	 * @mbggenerated  Wed Jul 18 15:27:05 CST 2012
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table SIMPLE_CASE_
	 * @mbggenerated  Wed Jul 18 15:27:05 CST 2012
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table SIMPLE_CASE_
	 * @mbggenerated  Wed Jul 18 15:27:05 CST 2012
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table SIMPLE_CASE_
	 * @mbggenerated  Wed Jul 18 15:27:05 CST 2012
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table SIMPLE_CASE_
	 * @mbggenerated  Wed Jul 18 15:27:05 CST 2012
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table SIMPLE_CASE_
	 * @mbggenerated  Wed Jul 18 15:27:05 CST 2012
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table SIMPLE_CASE_
	 * @mbggenerated  Wed Jul 18 15:27:05 CST 2012
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table SIMPLE_CASE_
	 * @mbggenerated  Wed Jul 18 15:27:05 CST 2012
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andCaseIdIsNull() {
			addCriterion("CASE_ID is null");
			return (Criteria) this;
		}

		public Criteria andCaseIdIsNotNull() {
			addCriterion("CASE_ID is not null");
			return (Criteria) this;
		}

		public Criteria andCaseIdEqualTo(String value) {
			addCriterion("CASE_ID =", value, "caseId");
			return (Criteria) this;
		}

		public Criteria andCaseIdNotEqualTo(String value) {
			addCriterion("CASE_ID <>", value, "caseId");
			return (Criteria) this;
		}

		public Criteria andCaseIdGreaterThan(String value) {
			addCriterion("CASE_ID >", value, "caseId");
			return (Criteria) this;
		}

		public Criteria andCaseIdGreaterThanOrEqualTo(String value) {
			addCriterion("CASE_ID >=", value, "caseId");
			return (Criteria) this;
		}

		public Criteria andCaseIdLessThan(String value) {
			addCriterion("CASE_ID <", value, "caseId");
			return (Criteria) this;
		}

		public Criteria andCaseIdLessThanOrEqualTo(String value) {
			addCriterion("CASE_ID <=", value, "caseId");
			return (Criteria) this;
		}

		public Criteria andCaseIdLike(String value) {
			addCriterion("CASE_ID like", value, "caseId");
			return (Criteria) this;
		}

		public Criteria andCaseIdNotLike(String value) {
			addCriterion("CASE_ID not like", value, "caseId");
			return (Criteria) this;
		}

		public Criteria andCaseIdIn(List<String> values) {
			addCriterion("CASE_ID in", values, "caseId");
			return (Criteria) this;
		}

		public Criteria andCaseIdNotIn(List<String> values) {
			addCriterion("CASE_ID not in", values, "caseId");
			return (Criteria) this;
		}

		public Criteria andCaseIdBetween(String value1, String value2) {
			addCriterion("CASE_ID between", value1, value2, "caseId");
			return (Criteria) this;
		}

		public Criteria andCaseIdNotBetween(String value1, String value2) {
			addCriterion("CASE_ID not between", value1, value2, "caseId");
			return (Criteria) this;
		}

		public Criteria andInputTimeIsNull() {
			addCriterion("INPUT_TIME is null");
			return (Criteria) this;
		}

		public Criteria andInputTimeIsNotNull() {
			addCriterion("INPUT_TIME is not null");
			return (Criteria) this;
		}

		public Criteria andInputTimeEqualTo(Date value) {
			addCriterion("INPUT_TIME =", value, "inputTime");
			return (Criteria) this;
		}

		public Criteria andInputTimeNotEqualTo(Date value) {
			addCriterion("INPUT_TIME <>", value, "inputTime");
			return (Criteria) this;
		}

		public Criteria andInputTimeGreaterThan(Date value) {
			addCriterion("INPUT_TIME >", value, "inputTime");
			return (Criteria) this;
		}

		public Criteria andInputTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("INPUT_TIME >=", value, "inputTime");
			return (Criteria) this;
		}

		public Criteria andInputTimeLessThan(Date value) {
			addCriterion("INPUT_TIME <", value, "inputTime");
			return (Criteria) this;
		}

		public Criteria andInputTimeLessThanOrEqualTo(Date value) {
			addCriterion("INPUT_TIME <=", value, "inputTime");
			return (Criteria) this;
		}

		public Criteria andInputTimeIn(List<Date> values) {
			addCriterion("INPUT_TIME in", values, "inputTime");
			return (Criteria) this;
		}

		public Criteria andInputTimeNotIn(List<Date> values) {
			addCriterion("INPUT_TIME not in", values, "inputTime");
			return (Criteria) this;
		}

		public Criteria andInputTimeBetween(Date value1, Date value2) {
			addCriterion("INPUT_TIME between", value1, value2, "inputTime");
			return (Criteria) this;
		}

		public Criteria andInputTimeNotBetween(Date value1, Date value2) {
			addCriterion("INPUT_TIME not between", value1, value2, "inputTime");
			return (Criteria) this;
		}

		public Criteria andCaseTimeIsNull() {
			addCriterion("CASE_TIME is null");
			return (Criteria) this;
		}

		public Criteria andCaseTimeIsNotNull() {
			addCriterion("CASE_TIME is not null");
			return (Criteria) this;
		}

		public Criteria andCaseTimeEqualTo(Date value) {
			addCriterion("CASE_TIME =", value, "caseTime");
			return (Criteria) this;
		}

		public Criteria andCaseTimeNotEqualTo(Date value) {
			addCriterion("CASE_TIME <>", value, "caseTime");
			return (Criteria) this;
		}

		public Criteria andCaseTimeGreaterThan(Date value) {
			addCriterion("CASE_TIME >", value, "caseTime");
			return (Criteria) this;
		}

		public Criteria andCaseTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("CASE_TIME >=", value, "caseTime");
			return (Criteria) this;
		}

		public Criteria andCaseTimeLessThan(Date value) {
			addCriterion("CASE_TIME <", value, "caseTime");
			return (Criteria) this;
		}

		public Criteria andCaseTimeLessThanOrEqualTo(Date value) {
			addCriterion("CASE_TIME <=", value, "caseTime");
			return (Criteria) this;
		}

		public Criteria andCaseTimeIn(List<Date> values) {
			addCriterion("CASE_TIME in", values, "caseTime");
			return (Criteria) this;
		}

		public Criteria andCaseTimeNotIn(List<Date> values) {
			addCriterion("CASE_TIME not in", values, "caseTime");
			return (Criteria) this;
		}

		public Criteria andCaseTimeBetween(Date value1, Date value2) {
			addCriterion("CASE_TIME between", value1, value2, "caseTime");
			return (Criteria) this;
		}

		public Criteria andCaseTimeNotBetween(Date value1, Date value2) {
			addCriterion("CASE_TIME not between", value1, value2, "caseTime");
			return (Criteria) this;
		}

		public Criteria andInputerIsNull() {
			addCriterion("INPUTER is null");
			return (Criteria) this;
		}

		public Criteria andInputerIsNotNull() {
			addCriterion("INPUTER is not null");
			return (Criteria) this;
		}

		public Criteria andInputerEqualTo(String value) {
			addCriterion("INPUTER =", value, "inputer");
			return (Criteria) this;
		}

		public Criteria andInputerNotEqualTo(String value) {
			addCriterion("INPUTER <>", value, "inputer");
			return (Criteria) this;
		}

		public Criteria andInputerGreaterThan(String value) {
			addCriterion("INPUTER >", value, "inputer");
			return (Criteria) this;
		}

		public Criteria andInputerGreaterThanOrEqualTo(String value) {
			addCriterion("INPUTER >=", value, "inputer");
			return (Criteria) this;
		}

		public Criteria andInputerLessThan(String value) {
			addCriterion("INPUTER <", value, "inputer");
			return (Criteria) this;
		}

		public Criteria andInputerLessThanOrEqualTo(String value) {
			addCriterion("INPUTER <=", value, "inputer");
			return (Criteria) this;
		}

		public Criteria andInputerLike(String value) {
			addCriterion("INPUTER like", value, "inputer");
			return (Criteria) this;
		}

		public Criteria andInputerNotLike(String value) {
			addCriterion("INPUTER not like", value, "inputer");
			return (Criteria) this;
		}

		public Criteria andInputerIn(List<String> values) {
			addCriterion("INPUTER in", values, "inputer");
			return (Criteria) this;
		}

		public Criteria andInputerNotIn(List<String> values) {
			addCriterion("INPUTER not in", values, "inputer");
			return (Criteria) this;
		}

		public Criteria andInputerBetween(String value1, String value2) {
			addCriterion("INPUTER between", value1, value2, "inputer");
			return (Criteria) this;
		}

		public Criteria andInputerNotBetween(String value1, String value2) {
			addCriterion("INPUTER not between", value1, value2, "inputer");
			return (Criteria) this;
		}

		public Criteria andOrgIdIsNull() {
			addCriterion("ORG_ID is null");
			return (Criteria) this;
		}

		public Criteria andOrgIdIsNotNull() {
			addCriterion("ORG_ID is not null");
			return (Criteria) this;
		}

		public Criteria andOrgIdEqualTo(Integer value) {
			addCriterion("ORG_ID =", value, "orgId");
			return (Criteria) this;
		}

		public Criteria andOrgIdNotEqualTo(Integer value) {
			addCriterion("ORG_ID <>", value, "orgId");
			return (Criteria) this;
		}

		public Criteria andOrgIdGreaterThan(Integer value) {
			addCriterion("ORG_ID >", value, "orgId");
			return (Criteria) this;
		}

		public Criteria andOrgIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("ORG_ID >=", value, "orgId");
			return (Criteria) this;
		}

		public Criteria andOrgIdLessThan(Integer value) {
			addCriterion("ORG_ID <", value, "orgId");
			return (Criteria) this;
		}

		public Criteria andOrgIdLessThanOrEqualTo(Integer value) {
			addCriterion("ORG_ID <=", value, "orgId");
			return (Criteria) this;
		}

		public Criteria andOrgIdIn(List<Integer> values) {
			addCriterion("ORG_ID in", values, "orgId");
			return (Criteria) this;
		}

		public Criteria andOrgIdNotIn(List<Integer> values) {
			addCriterion("ORG_ID not in", values, "orgId");
			return (Criteria) this;
		}

		public Criteria andOrgIdBetween(Integer value1, Integer value2) {
			addCriterion("ORG_ID between", value1, value2, "orgId");
			return (Criteria) this;
		}

		public Criteria andOrgIdNotBetween(Integer value1, Integer value2) {
			addCriterion("ORG_ID not between", value1, value2, "orgId");
			return (Criteria) this;
		}

		public Criteria andCaseNumIsNull() {
			addCriterion("CASE_NUM is null");
			return (Criteria) this;
		}

		public Criteria andCaseNumIsNotNull() {
			addCriterion("CASE_NUM is not null");
			return (Criteria) this;
		}

		public Criteria andCaseNumEqualTo(Integer value) {
			addCriterion("CASE_NUM =", value, "caseNum");
			return (Criteria) this;
		}

		public Criteria andCaseNumNotEqualTo(Integer value) {
			addCriterion("CASE_NUM <>", value, "caseNum");
			return (Criteria) this;
		}

		public Criteria andCaseNumGreaterThan(Integer value) {
			addCriterion("CASE_NUM >", value, "caseNum");
			return (Criteria) this;
		}

		public Criteria andCaseNumGreaterThanOrEqualTo(Integer value) {
			addCriterion("CASE_NUM >=", value, "caseNum");
			return (Criteria) this;
		}

		public Criteria andCaseNumLessThan(Integer value) {
			addCriterion("CASE_NUM <", value, "caseNum");
			return (Criteria) this;
		}

		public Criteria andCaseNumLessThanOrEqualTo(Integer value) {
			addCriterion("CASE_NUM <=", value, "caseNum");
			return (Criteria) this;
		}

		public Criteria andCaseNumIn(List<Integer> values) {
			addCriterion("CASE_NUM in", values, "caseNum");
			return (Criteria) this;
		}

		public Criteria andCaseNumNotIn(List<Integer> values) {
			addCriterion("CASE_NUM not in", values, "caseNum");
			return (Criteria) this;
		}

		public Criteria andCaseNumBetween(Integer value1, Integer value2) {
			addCriterion("CASE_NUM between", value1, value2, "caseNum");
			return (Criteria) this;
		}

		public Criteria andCaseNumNotBetween(Integer value1, Integer value2) {
			addCriterion("CASE_NUM not between", value1, value2, "caseNum");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table SIMPLE_CASE_
	 * @mbggenerated  Wed Jul 18 15:27:05 CST 2012
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table SIMPLE_CASE_
     *
     * @mbggenerated do_not_delete_during_merge Mon Jul 09 10:53:11 CST 2012
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}