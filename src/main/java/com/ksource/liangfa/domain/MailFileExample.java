package com.ksource.liangfa.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class MailFileExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table LF_MAIL_FILE
	 * @mbggenerated  Tue Jan 29 10:43:17 CST 2013
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table LF_MAIL_FILE
	 * @mbggenerated  Tue Jan 29 10:43:17 CST 2013
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table LF_MAIL_FILE
	 * @mbggenerated  Tue Jan 29 10:43:17 CST 2013
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LF_MAIL_FILE
	 * @mbggenerated  Tue Jan 29 10:43:17 CST 2013
	 */
	public MailFileExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LF_MAIL_FILE
	 * @mbggenerated  Tue Jan 29 10:43:17 CST 2013
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LF_MAIL_FILE
	 * @mbggenerated  Tue Jan 29 10:43:17 CST 2013
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LF_MAIL_FILE
	 * @mbggenerated  Tue Jan 29 10:43:17 CST 2013
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LF_MAIL_FILE
	 * @mbggenerated  Tue Jan 29 10:43:17 CST 2013
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LF_MAIL_FILE
	 * @mbggenerated  Tue Jan 29 10:43:17 CST 2013
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LF_MAIL_FILE
	 * @mbggenerated  Tue Jan 29 10:43:17 CST 2013
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LF_MAIL_FILE
	 * @mbggenerated  Tue Jan 29 10:43:17 CST 2013
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LF_MAIL_FILE
	 * @mbggenerated  Tue Jan 29 10:43:17 CST 2013
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LF_MAIL_FILE
	 * @mbggenerated  Tue Jan 29 10:43:17 CST 2013
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LF_MAIL_FILE
	 * @mbggenerated  Tue Jan 29 10:43:17 CST 2013
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table LF_MAIL_FILE
	 * @mbggenerated  Tue Jan 29 10:43:17 CST 2013
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		protected void addCriterionForJDBCDate(String condition, Date value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()),
					property);
		}

		protected void addCriterionForJDBCDate(String condition,
				List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1,
				Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()),
					new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andFileIdIsNull() {
			addCriterion("FILE_ID is null");
			return (Criteria) this;
		}

		public Criteria andFileIdIsNotNull() {
			addCriterion("FILE_ID is not null");
			return (Criteria) this;
		}

		public Criteria andFileIdEqualTo(Integer value) {
			addCriterion("FILE_ID =", value, "fileId");
			return (Criteria) this;
		}

		public Criteria andFileIdNotEqualTo(Integer value) {
			addCriterion("FILE_ID <>", value, "fileId");
			return (Criteria) this;
		}

		public Criteria andFileIdGreaterThan(Integer value) {
			addCriterion("FILE_ID >", value, "fileId");
			return (Criteria) this;
		}

		public Criteria andFileIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("FILE_ID >=", value, "fileId");
			return (Criteria) this;
		}

		public Criteria andFileIdLessThan(Integer value) {
			addCriterion("FILE_ID <", value, "fileId");
			return (Criteria) this;
		}

		public Criteria andFileIdLessThanOrEqualTo(Integer value) {
			addCriterion("FILE_ID <=", value, "fileId");
			return (Criteria) this;
		}

		public Criteria andFileIdIn(List<Integer> values) {
			addCriterion("FILE_ID in", values, "fileId");
			return (Criteria) this;
		}

		public Criteria andFileIdNotIn(List<Integer> values) {
			addCriterion("FILE_ID not in", values, "fileId");
			return (Criteria) this;
		}

		public Criteria andFileIdBetween(Integer value1, Integer value2) {
			addCriterion("FILE_ID between", value1, value2, "fileId");
			return (Criteria) this;
		}

		public Criteria andFileIdNotBetween(Integer value1, Integer value2) {
			addCriterion("FILE_ID not between", value1, value2, "fileId");
			return (Criteria) this;
		}

		public Criteria andEmailIdIsNull() {
			addCriterion("EMAIL_ID is null");
			return (Criteria) this;
		}

		public Criteria andEmailIdIsNotNull() {
			addCriterion("EMAIL_ID is not null");
			return (Criteria) this;
		}

		public Criteria andEmailIdEqualTo(Integer value) {
			addCriterion("EMAIL_ID =", value, "emailId");
			return (Criteria) this;
		}

		public Criteria andEmailIdNotEqualTo(Integer value) {
			addCriterion("EMAIL_ID <>", value, "emailId");
			return (Criteria) this;
		}

		public Criteria andEmailIdGreaterThan(Integer value) {
			addCriterion("EMAIL_ID >", value, "emailId");
			return (Criteria) this;
		}

		public Criteria andEmailIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("EMAIL_ID >=", value, "emailId");
			return (Criteria) this;
		}

		public Criteria andEmailIdLessThan(Integer value) {
			addCriterion("EMAIL_ID <", value, "emailId");
			return (Criteria) this;
		}

		public Criteria andEmailIdLessThanOrEqualTo(Integer value) {
			addCriterion("EMAIL_ID <=", value, "emailId");
			return (Criteria) this;
		}

		public Criteria andEmailIdIn(List<Integer> values) {
			addCriterion("EMAIL_ID in", values, "emailId");
			return (Criteria) this;
		}

		public Criteria andEmailIdNotIn(List<Integer> values) {
			addCriterion("EMAIL_ID not in", values, "emailId");
			return (Criteria) this;
		}

		public Criteria andEmailIdBetween(Integer value1, Integer value2) {
			addCriterion("EMAIL_ID between", value1, value2, "emailId");
			return (Criteria) this;
		}

		public Criteria andEmailIdNotBetween(Integer value1, Integer value2) {
			addCriterion("EMAIL_ID not between", value1, value2, "emailId");
			return (Criteria) this;
		}

		public Criteria andFileNameIsNull() {
			addCriterion("FILE_NAME is null");
			return (Criteria) this;
		}

		public Criteria andFileNameIsNotNull() {
			addCriterion("FILE_NAME is not null");
			return (Criteria) this;
		}

		public Criteria andFileNameEqualTo(String value) {
			addCriterion("FILE_NAME =", value, "fileName");
			return (Criteria) this;
		}

		public Criteria andFileNameNotEqualTo(String value) {
			addCriterion("FILE_NAME <>", value, "fileName");
			return (Criteria) this;
		}

		public Criteria andFileNameGreaterThan(String value) {
			addCriterion("FILE_NAME >", value, "fileName");
			return (Criteria) this;
		}

		public Criteria andFileNameGreaterThanOrEqualTo(String value) {
			addCriterion("FILE_NAME >=", value, "fileName");
			return (Criteria) this;
		}

		public Criteria andFileNameLessThan(String value) {
			addCriterion("FILE_NAME <", value, "fileName");
			return (Criteria) this;
		}

		public Criteria andFileNameLessThanOrEqualTo(String value) {
			addCriterion("FILE_NAME <=", value, "fileName");
			return (Criteria) this;
		}

		public Criteria andFileNameLike(String value) {
			addCriterion("FILE_NAME like", value, "fileName");
			return (Criteria) this;
		}

		public Criteria andFileNameNotLike(String value) {
			addCriterion("FILE_NAME not like", value, "fileName");
			return (Criteria) this;
		}

		public Criteria andFileNameIn(List<String> values) {
			addCriterion("FILE_NAME in", values, "fileName");
			return (Criteria) this;
		}

		public Criteria andFileNameNotIn(List<String> values) {
			addCriterion("FILE_NAME not in", values, "fileName");
			return (Criteria) this;
		}

		public Criteria andFileNameBetween(String value1, String value2) {
			addCriterion("FILE_NAME between", value1, value2, "fileName");
			return (Criteria) this;
		}

		public Criteria andFileNameNotBetween(String value1, String value2) {
			addCriterion("FILE_NAME not between", value1, value2, "fileName");
			return (Criteria) this;
		}

		public Criteria andFilePathIsNull() {
			addCriterion("FILE_PATH is null");
			return (Criteria) this;
		}

		public Criteria andFilePathIsNotNull() {
			addCriterion("FILE_PATH is not null");
			return (Criteria) this;
		}

		public Criteria andFilePathEqualTo(String value) {
			addCriterion("FILE_PATH =", value, "filePath");
			return (Criteria) this;
		}

		public Criteria andFilePathNotEqualTo(String value) {
			addCriterion("FILE_PATH <>", value, "filePath");
			return (Criteria) this;
		}

		public Criteria andFilePathGreaterThan(String value) {
			addCriterion("FILE_PATH >", value, "filePath");
			return (Criteria) this;
		}

		public Criteria andFilePathGreaterThanOrEqualTo(String value) {
			addCriterion("FILE_PATH >=", value, "filePath");
			return (Criteria) this;
		}

		public Criteria andFilePathLessThan(String value) {
			addCriterion("FILE_PATH <", value, "filePath");
			return (Criteria) this;
		}

		public Criteria andFilePathLessThanOrEqualTo(String value) {
			addCriterion("FILE_PATH <=", value, "filePath");
			return (Criteria) this;
		}

		public Criteria andFilePathLike(String value) {
			addCriterion("FILE_PATH like", value, "filePath");
			return (Criteria) this;
		}

		public Criteria andFilePathNotLike(String value) {
			addCriterion("FILE_PATH not like", value, "filePath");
			return (Criteria) this;
		}

		public Criteria andFilePathIn(List<String> values) {
			addCriterion("FILE_PATH in", values, "filePath");
			return (Criteria) this;
		}

		public Criteria andFilePathNotIn(List<String> values) {
			addCriterion("FILE_PATH not in", values, "filePath");
			return (Criteria) this;
		}

		public Criteria andFilePathBetween(String value1, String value2) {
			addCriterion("FILE_PATH between", value1, value2, "filePath");
			return (Criteria) this;
		}

		public Criteria andFilePathNotBetween(String value1, String value2) {
			addCriterion("FILE_PATH not between", value1, value2, "filePath");
			return (Criteria) this;
		}

		public Criteria andUploadTimeIsNull() {
			addCriterion("UPLOAD_TIME is null");
			return (Criteria) this;
		}

		public Criteria andUploadTimeIsNotNull() {
			addCriterion("UPLOAD_TIME is not null");
			return (Criteria) this;
		}

		public Criteria andUploadTimeEqualTo(Date value) {
			addCriterionForJDBCDate("UPLOAD_TIME =", value, "uploadTime");
			return (Criteria) this;
		}

		public Criteria andUploadTimeNotEqualTo(Date value) {
			addCriterionForJDBCDate("UPLOAD_TIME <>", value, "uploadTime");
			return (Criteria) this;
		}

		public Criteria andUploadTimeGreaterThan(Date value) {
			addCriterionForJDBCDate("UPLOAD_TIME >", value, "uploadTime");
			return (Criteria) this;
		}

		public Criteria andUploadTimeGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("UPLOAD_TIME >=", value, "uploadTime");
			return (Criteria) this;
		}

		public Criteria andUploadTimeLessThan(Date value) {
			addCriterionForJDBCDate("UPLOAD_TIME <", value, "uploadTime");
			return (Criteria) this;
		}

		public Criteria andUploadTimeLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("UPLOAD_TIME <=", value, "uploadTime");
			return (Criteria) this;
		}

		public Criteria andUploadTimeIn(List<Date> values) {
			addCriterionForJDBCDate("UPLOAD_TIME in", values, "uploadTime");
			return (Criteria) this;
		}

		public Criteria andUploadTimeNotIn(List<Date> values) {
			addCriterionForJDBCDate("UPLOAD_TIME not in", values, "uploadTime");
			return (Criteria) this;
		}

		public Criteria andUploadTimeBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("UPLOAD_TIME between", value1, value2,
					"uploadTime");
			return (Criteria) this;
		}

		public Criteria andUploadTimeNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("UPLOAD_TIME not between", value1, value2,
					"uploadTime");
			return (Criteria) this;
		}

		public Criteria andUploadUserIsNull() {
			addCriterion("UPLOAD_USER is null");
			return (Criteria) this;
		}

		public Criteria andUploadUserIsNotNull() {
			addCriterion("UPLOAD_USER is not null");
			return (Criteria) this;
		}

		public Criteria andUploadUserEqualTo(String value) {
			addCriterion("UPLOAD_USER =", value, "uploadUser");
			return (Criteria) this;
		}

		public Criteria andUploadUserNotEqualTo(String value) {
			addCriterion("UPLOAD_USER <>", value, "uploadUser");
			return (Criteria) this;
		}

		public Criteria andUploadUserGreaterThan(String value) {
			addCriterion("UPLOAD_USER >", value, "uploadUser");
			return (Criteria) this;
		}

		public Criteria andUploadUserGreaterThanOrEqualTo(String value) {
			addCriterion("UPLOAD_USER >=", value, "uploadUser");
			return (Criteria) this;
		}

		public Criteria andUploadUserLessThan(String value) {
			addCriterion("UPLOAD_USER <", value, "uploadUser");
			return (Criteria) this;
		}

		public Criteria andUploadUserLessThanOrEqualTo(String value) {
			addCriterion("UPLOAD_USER <=", value, "uploadUser");
			return (Criteria) this;
		}

		public Criteria andUploadUserLike(String value) {
			addCriterion("UPLOAD_USER like", value, "uploadUser");
			return (Criteria) this;
		}

		public Criteria andUploadUserNotLike(String value) {
			addCriterion("UPLOAD_USER not like", value, "uploadUser");
			return (Criteria) this;
		}

		public Criteria andUploadUserIn(List<String> values) {
			addCriterion("UPLOAD_USER in", values, "uploadUser");
			return (Criteria) this;
		}

		public Criteria andUploadUserNotIn(List<String> values) {
			addCriterion("UPLOAD_USER not in", values, "uploadUser");
			return (Criteria) this;
		}

		public Criteria andUploadUserBetween(String value1, String value2) {
			addCriterion("UPLOAD_USER between", value1, value2, "uploadUser");
			return (Criteria) this;
		}

		public Criteria andUploadUserNotBetween(String value1, String value2) {
			addCriterion("UPLOAD_USER not between", value1, value2,
					"uploadUser");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table LF_MAIL_FILE
	 * @mbggenerated  Tue Jan 29 10:43:17 CST 2013
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table LF_MAIL_FILE
     *
     * @mbggenerated do_not_delete_during_merge Fri Jan 25 11:16:15 CST 2013
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}