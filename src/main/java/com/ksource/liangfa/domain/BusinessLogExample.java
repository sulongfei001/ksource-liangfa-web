package com.ksource.liangfa.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class BusinessLogExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table LIANGFA_DEMO.BUSINESS_LOG
	 * @mbggenerated  Tue Apr 24 16:01:55 CST 2012
	 */
	protected String orderByClause;
	
	
	
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table LIANGFA_DEMO.BUSINESS_LOG
	 * @mbggenerated  Tue Apr 24 16:01:55 CST 2012
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table LIANGFA_DEMO.BUSINESS_LOG
	 * @mbggenerated  Tue Apr 24 16:01:55 CST 2012
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LIANGFA_DEMO.BUSINESS_LOG
	 * @mbggenerated  Tue Apr 24 16:01:55 CST 2012
	 */
	public BusinessLogExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LIANGFA_DEMO.BUSINESS_LOG
	 * @mbggenerated  Tue Apr 24 16:01:55 CST 2012
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LIANGFA_DEMO.BUSINESS_LOG
	 * @mbggenerated  Tue Apr 24 16:01:55 CST 2012
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LIANGFA_DEMO.BUSINESS_LOG
	 * @mbggenerated  Tue Apr 24 16:01:55 CST 2012
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LIANGFA_DEMO.BUSINESS_LOG
	 * @mbggenerated  Tue Apr 24 16:01:55 CST 2012
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LIANGFA_DEMO.BUSINESS_LOG
	 * @mbggenerated  Tue Apr 24 16:01:55 CST 2012
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LIANGFA_DEMO.BUSINESS_LOG
	 * @mbggenerated  Tue Apr 24 16:01:55 CST 2012
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LIANGFA_DEMO.BUSINESS_LOG
	 * @mbggenerated  Tue Apr 24 16:01:55 CST 2012
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LIANGFA_DEMO.BUSINESS_LOG
	 * @mbggenerated  Tue Apr 24 16:01:55 CST 2012
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LIANGFA_DEMO.BUSINESS_LOG
	 * @mbggenerated  Tue Apr 24 16:01:55 CST 2012
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LIANGFA_DEMO.BUSINESS_LOG
	 * @mbggenerated  Tue Apr 24 16:01:55 CST 2012
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table LIANGFA_DEMO.BUSINESS_LOG
	 * @mbggenerated  Tue Apr 24 16:01:55 CST 2012
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("ID is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("ID is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("ID =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("ID <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("ID >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("ID >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("ID <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("ID <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("ID in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("ID not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("ID between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("ID not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andOperationIsNull() {
			addCriterion("OPERATION is null");
			return (Criteria) this;
		}

		public Criteria andOperationIsNotNull() {
			addCriterion("OPERATION is not null");
			return (Criteria) this;
		}

		public Criteria andOperationEqualTo(String value) {
			addCriterion("OPERATION =", value, "operation");
			return (Criteria) this;
		}

		public Criteria andOperationNotEqualTo(String value) {
			addCriterion("OPERATION <>", value, "operation");
			return (Criteria) this;
		}

		public Criteria andOperationGreaterThan(String value) {
			addCriterion("OPERATION >", value, "operation");
			return (Criteria) this;
		}

		public Criteria andOperationGreaterThanOrEqualTo(String value) {
			addCriterion("OPERATION >=", value, "operation");
			return (Criteria) this;
		}

		public Criteria andOperationLessThan(String value) {
			addCriterion("OPERATION <", value, "operation");
			return (Criteria) this;
		}

		public Criteria andOperationLessThanOrEqualTo(String value) {
			addCriterion("OPERATION <=", value, "operation");
			return (Criteria) this;
		}

		public Criteria andOperationLike(String value) {
			addCriterion("OPERATION like", value, "operation");
			return (Criteria) this;
		}

		public Criteria andOperationNotLike(String value) {
			addCriterion("OPERATION not like", value, "operation");
			return (Criteria) this;
		}

		public Criteria andOperationIn(List<String> values) {
			addCriterion("OPERATION in", values, "operation");
			return (Criteria) this;
		}

		public Criteria andOperationNotIn(List<String> values) {
			addCriterion("OPERATION not in", values, "operation");
			return (Criteria) this;
		}

		public Criteria andOperationBetween(String value1, String value2) {
			addCriterion("OPERATION between", value1, value2, "operation");
			return (Criteria) this;
		}

		public Criteria andOperationNotBetween(String value1, String value2) {
			addCriterion("OPERATION not between", value1, value2, "operation");
			return (Criteria) this;
		}

		public Criteria andBusinessOptTypeIsNull() {
			addCriterion("BUSINESS_OPT_TYPE is null");
			return (Criteria) this;
		}

		public Criteria andBusinessOptTypeIsNotNull() {
			addCriterion("BUSINESS_OPT_TYPE is not null");
			return (Criteria) this;
		}

		public Criteria andBusinessOptTypeEqualTo(Integer value) {
			addCriterion("BUSINESS_OPT_TYPE =", value, "businessOptType");
			return (Criteria) this;
		}

		public Criteria andBusinessOptTypeNotEqualTo(Integer value) {
			addCriterion("BUSINESS_OPT_TYPE <>", value, "businessOptType");
			return (Criteria) this;
		}

		public Criteria andBusinessOptTypeGreaterThan(Integer value) {
			addCriterion("BUSINESS_OPT_TYPE >", value, "businessOptType");
			return (Criteria) this;
		}

		public Criteria andBusinessOptTypeGreaterThanOrEqualTo(Integer value) {
			addCriterion("BUSINESS_OPT_TYPE >=", value, "businessOptType");
			return (Criteria) this;
		}

		public Criteria andBusinessOptTypeLessThan(Integer value) {
			addCriterion("BUSINESS_OPT_TYPE <", value, "businessOptType");
			return (Criteria) this;
		}

		public Criteria andBusinessOptTypeLessThanOrEqualTo(Integer value) {
			addCriterion("BUSINESS_OPT_TYPE <=", value, "businessOptType");
			return (Criteria) this;
		}

		public Criteria andBusinessOptTypeIn(List<Integer> values) {
			addCriterion("BUSINESS_OPT_TYPE in", values, "businessOptType");
			return (Criteria) this;
		}

		public Criteria andBusinessOptTypeNotIn(List<Integer> values) {
			addCriterion("BUSINESS_OPT_TYPE not in", values, "businessOptType");
			return (Criteria) this;
		}

		public Criteria andBusinessOptTypeBetween(Integer value1, Integer value2) {
			addCriterion("BUSINESS_OPT_TYPE between", value1, value2,
					"businessOptType");
			return (Criteria) this;
		}

		public Criteria andBusinessOptTypeNotBetween(Integer value1,
				Integer value2) {
			addCriterion("BUSINESS_OPT_TYPE not between", value1, value2,
					"businessOptType");
			return (Criteria) this;
		}

		public Criteria andDbOptTypeIsNull() {
			addCriterion("DB_OPT_TYPE is null");
			return (Criteria) this;
		}

		public Criteria andDbOptTypeIsNotNull() {
			addCriterion("DB_OPT_TYPE is not null");
			return (Criteria) this;
		}

		public Criteria andDbOptTypeEqualTo(Integer value) {
			addCriterion("DB_OPT_TYPE =", value, "dbOptType");
			return (Criteria) this;
		}

		public Criteria andDbOptTypeNotEqualTo(Integer value) {
			addCriterion("DB_OPT_TYPE <>", value, "dbOptType");
			return (Criteria) this;
		}

		public Criteria andDbOptTypeGreaterThan(Integer value) {
			addCriterion("DB_OPT_TYPE >", value, "dbOptType");
			return (Criteria) this;
		}

		public Criteria andDbOptTypeGreaterThanOrEqualTo(Integer value) {
			addCriterion("DB_OPT_TYPE >=", value, "dbOptType");
			return (Criteria) this;
		}

		public Criteria andDbOptTypeLessThan(Integer value) {
			addCriterion("DB_OPT_TYPE <", value, "dbOptType");
			return (Criteria) this;
		}

		public Criteria andDbOptTypeLessThanOrEqualTo(Integer value) {
			addCriterion("DB_OPT_TYPE <=", value, "dbOptType");
			return (Criteria) this;
		}

		public Criteria andDbOptTypeIn(List<Integer> values) {
			addCriterion("DB_OPT_TYPE in", values, "dbOptType");
			return (Criteria) this;
		}

		public Criteria andDbOptTypeNotIn(List<Integer> values) {
			addCriterion("DB_OPT_TYPE not in", values, "dbOptType");
			return (Criteria) this;
		}

		public Criteria andDbOptTypeBetween(Integer value1, Integer value2) {
			addCriterion("DB_OPT_TYPE between", value1, value2, "dbOptType");
			return (Criteria) this;
		}

		public Criteria andDbOptTypeNotBetween(Integer value1, Integer value2) {
			addCriterion("DB_OPT_TYPE not between", value1, value2, "dbOptType");
			return (Criteria) this;
		}

		public Criteria andOptTimeIsNull() {
			addCriterion("OPT_TIME is null");
			return (Criteria) this;
		}

		public Criteria andOptTimeIsNotNull() {
			addCriterion("OPT_TIME is not null");
			return (Criteria) this;
		}

		public Criteria andOptTimeEqualTo(Date value) {
			addCriterion("OPT_TIME =", value, "optTime");
			return (Criteria) this;
		}

		public Criteria andOptTimeNotEqualTo(Date value) {
			addCriterion("OPT_TIME <>", value, "optTime");
			return (Criteria) this;
		}

		public Criteria andOptTimeGreaterThan(Date value) {
			addCriterion("OPT_TIME >", value, "optTime");
			return (Criteria) this;
		}

		public Criteria andOptTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("OPT_TIME >=", value, "optTime");
			return (Criteria) this;
		}

		public Criteria andOptTimeLessThan(Date value) {
			addCriterion("OPT_TIME <", value, "optTime");
			return (Criteria) this;
		}

		public Criteria andOptTimeLessThanOrEqualTo(Date value) {
			addCriterion("OPT_TIME <=", value, "optTime");
			return (Criteria) this;
		}

		public Criteria andOptTimeIn(List<Date> values) {
			addCriterion("OPT_TIME in", values, "optTime");
			return (Criteria) this;
		}

		public Criteria andOptTimeNotIn(List<Date> values) {
			addCriterion("OPT_TIME not in", values, "optTime");
			return (Criteria) this;
		}

		public Criteria andOptTimeBetween(Date value1, Date value2) {
			addCriterion("OPT_TIME between", value1, value2, "optTime");
			return (Criteria) this;
		}

		public Criteria andOptTimeNotBetween(Date value1, Date value2) {
			addCriterion("OPT_TIME not between", value1, value2, "optTime");
			return (Criteria) this;
		}

		public Criteria andDomainCodeIsNull() {
			addCriterion("DOMAIN_CODE is null");
			return (Criteria) this;
		}

		public Criteria andDomainCodeIsNotNull() {
			addCriterion("DOMAIN_CODE is not null");
			return (Criteria) this;
		}

		public Criteria andDomainCodeEqualTo(String value) {
			addCriterion("DOMAIN_CODE =", value, "domainCode");
			return (Criteria) this;
		}

		public Criteria andDomainCodeNotEqualTo(String value) {
			addCriterion("DOMAIN_CODE <>", value, "domainCode");
			return (Criteria) this;
		}

		public Criteria andDomainCodeGreaterThan(String value) {
			addCriterion("DOMAIN_CODE >", value, "domainCode");
			return (Criteria) this;
		}

		public Criteria andDomainCodeGreaterThanOrEqualTo(String value) {
			addCriterion("DOMAIN_CODE >=", value, "domainCode");
			return (Criteria) this;
		}

		public Criteria andDomainCodeLessThan(String value) {
			addCriterion("DOMAIN_CODE <", value, "domainCode");
			return (Criteria) this;
		}

		public Criteria andDomainCodeLessThanOrEqualTo(String value) {
			addCriterion("DOMAIN_CODE <=", value, "domainCode");
			return (Criteria) this;
		}

		public Criteria andDomainCodeLike(String value) {
			addCriterion("DOMAIN_CODE like", value, "domainCode");
			return (Criteria) this;
		}

		public Criteria andDomainCodeNotLike(String value) {
			addCriterion("DOMAIN_CODE not like", value, "domainCode");
			return (Criteria) this;
		}

		public Criteria andDomainCodeIn(List<String> values) {
			addCriterion("DOMAIN_CODE in", values, "domainCode");
			return (Criteria) this;
		}

		public Criteria andDomainCodeNotIn(List<String> values) {
			addCriterion("DOMAIN_CODE not in", values, "domainCode");
			return (Criteria) this;
		}

		public Criteria andDomainCodeBetween(String value1, String value2) {
			addCriterion("DOMAIN_CODE between", value1, value2, "domainCode");
			return (Criteria) this;
		}

		public Criteria andDomainCodeNotBetween(String value1, String value2) {
			addCriterion("DOMAIN_CODE not between", value1, value2,
					"domainCode");
			return (Criteria) this;
		}

		public Criteria andDomainNameIsNull() {
			addCriterion("DOMAIN_NAME is null");
			return (Criteria) this;
		}

		public Criteria andDomainNameIsNotNull() {
			addCriterion("DOMAIN_NAME is not null");
			return (Criteria) this;
		}

		public Criteria andDomainNameEqualTo(String value) {
			addCriterion("DOMAIN_NAME =", value, "domainName");
			return (Criteria) this;
		}

		public Criteria andDomainNameNotEqualTo(String value) {
			addCriterion("DOMAIN_NAME <>", value, "domainName");
			return (Criteria) this;
		}

		public Criteria andDomainNameGreaterThan(String value) {
			addCriterion("DOMAIN_NAME >", value, "domainName");
			return (Criteria) this;
		}

		public Criteria andDomainNameGreaterThanOrEqualTo(String value) {
			addCriterion("DOMAIN_NAME >=", value, "domainName");
			return (Criteria) this;
		}

		public Criteria andDomainNameLessThan(String value) {
			addCriterion("DOMAIN_NAME <", value, "domainName");
			return (Criteria) this;
		}

		public Criteria andDomainNameLessThanOrEqualTo(String value) {
			addCriterion("DOMAIN_NAME <=", value, "domainName");
			return (Criteria) this;
		}

		public Criteria andDomainNameLike(String value) {
			addCriterion("DOMAIN_NAME like", value, "domainName");
			return (Criteria) this;
		}

		public Criteria andDomainNameNotLike(String value) {
			addCriterion("DOMAIN_NAME not like", value, "domainName");
			return (Criteria) this;
		}

		public Criteria andDomainNameIn(List<String> values) {
			addCriterion("DOMAIN_NAME in", values, "domainName");
			return (Criteria) this;
		}

		public Criteria andDomainNameNotIn(List<String> values) {
			addCriterion("DOMAIN_NAME not in", values, "domainName");
			return (Criteria) this;
		}

		public Criteria andDomainNameBetween(String value1, String value2) {
			addCriterion("DOMAIN_NAME between", value1, value2, "domainName");
			return (Criteria) this;
		}

		public Criteria andDomainNameNotBetween(String value1, String value2) {
			addCriterion("DOMAIN_NAME not between", value1, value2,
					"domainName");
			return (Criteria) this;
		}

		public Criteria andDomainClassIsNull() {
			addCriterion("DOMAIN_CLASS is null");
			return (Criteria) this;
		}

		public Criteria andDomainClassIsNotNull() {
			addCriterion("DOMAIN_CLASS is not null");
			return (Criteria) this;
		}

		public Criteria andDomainClassEqualTo(String value) {
			addCriterion("DOMAIN_CLASS =", value, "domainClass");
			return (Criteria) this;
		}

		public Criteria andDomainClassNotEqualTo(String value) {
			addCriterion("DOMAIN_CLASS <>", value, "domainClass");
			return (Criteria) this;
		}

		public Criteria andDomainClassGreaterThan(String value) {
			addCriterion("DOMAIN_CLASS >", value, "domainClass");
			return (Criteria) this;
		}

		public Criteria andDomainClassGreaterThanOrEqualTo(String value) {
			addCriterion("DOMAIN_CLASS >=", value, "domainClass");
			return (Criteria) this;
		}

		public Criteria andDomainClassLessThan(String value) {
			addCriterion("DOMAIN_CLASS <", value, "domainClass");
			return (Criteria) this;
		}

		public Criteria andDomainClassLessThanOrEqualTo(String value) {
			addCriterion("DOMAIN_CLASS <=", value, "domainClass");
			return (Criteria) this;
		}

		public Criteria andDomainClassLike(String value) {
			addCriterion("DOMAIN_CLASS like", value, "domainClass");
			return (Criteria) this;
		}

		public Criteria andDomainClassNotLike(String value) {
			addCriterion("DOMAIN_CLASS not like", value, "domainClass");
			return (Criteria) this;
		}

		public Criteria andDomainClassIn(List<String> values) {
			addCriterion("DOMAIN_CLASS in", values, "domainClass");
			return (Criteria) this;
		}

		public Criteria andDomainClassNotIn(List<String> values) {
			addCriterion("DOMAIN_CLASS not in", values, "domainClass");
			return (Criteria) this;
		}

		public Criteria andDomainClassBetween(String value1, String value2) {
			addCriterion("DOMAIN_CLASS between", value1, value2, "domainClass");
			return (Criteria) this;
		}

		public Criteria andDomainClassNotBetween(String value1, String value2) {
			addCriterion("DOMAIN_CLASS not between", value1, value2,
					"domainClass");
			return (Criteria) this;
		}

		public Criteria andSucceedIsNull() {
			addCriterion("SUCCEED is null");
			return (Criteria) this;
		}

		public Criteria andSucceedIsNotNull() {
			addCriterion("SUCCEED is not null");
			return (Criteria) this;
		}

		public Criteria andSucceedEqualTo(Integer value) {
			addCriterion("SUCCEED =", value, "succeed");
			return (Criteria) this;
		}

		public Criteria andSucceedNotEqualTo(Integer value) {
			addCriterion("SUCCEED <>", value, "succeed");
			return (Criteria) this;
		}

		public Criteria andSucceedGreaterThan(Integer value) {
			addCriterion("SUCCEED >", value, "succeed");
			return (Criteria) this;
		}

		public Criteria andSucceedGreaterThanOrEqualTo(Integer value) {
			addCriterion("SUCCEED >=", value, "succeed");
			return (Criteria) this;
		}

		public Criteria andSucceedLessThan(Integer value) {
			addCriterion("SUCCEED <", value, "succeed");
			return (Criteria) this;
		}

		public Criteria andSucceedLessThanOrEqualTo(Integer value) {
			addCriterion("SUCCEED <=", value, "succeed");
			return (Criteria) this;
		}

		public Criteria andSucceedIn(List<Integer> values) {
			addCriterion("SUCCEED in", values, "succeed");
			return (Criteria) this;
		}

		public Criteria andSucceedNotIn(List<Integer> values) {
			addCriterion("SUCCEED not in", values, "succeed");
			return (Criteria) this;
		}

		public Criteria andSucceedBetween(Integer value1, Integer value2) {
			addCriterion("SUCCEED between", value1, value2, "succeed");
			return (Criteria) this;
		}

		public Criteria andSucceedNotBetween(Integer value1, Integer value2) {
			addCriterion("SUCCEED not between", value1, value2, "succeed");
			return (Criteria) this;
		}

		public Criteria andUserIdIsNull() {
			addCriterion("USER_ID is null");
			return (Criteria) this;
		}

		public Criteria andUserIdIsNotNull() {
			addCriterion("USER_ID is not null");
			return (Criteria) this;
		}

		public Criteria andUserIdEqualTo(String value) {
			addCriterion("USER_ID =", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdNotEqualTo(String value) {
			addCriterion("USER_ID <>", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdGreaterThan(String value) {
			addCriterion("USER_ID >", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdGreaterThanOrEqualTo(String value) {
			addCriterion("USER_ID >=", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdLessThan(String value) {
			addCriterion("USER_ID <", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdLessThanOrEqualTo(String value) {
			addCriterion("USER_ID <=", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdLike(String value) {
			addCriterion("USER_ID like", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdNotLike(String value) {
			addCriterion("USER_ID not like", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdIn(List<String> values) {
			addCriterion("USER_ID in", values, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdNotIn(List<String> values) {
			addCriterion("USER_ID not in", values, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdBetween(String value1, String value2) {
			addCriterion("USER_ID between", value1, value2, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdNotBetween(String value1, String value2) {
			addCriterion("USER_ID not between", value1, value2, "userId");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table LIANGFA_DEMO.BUSINESS_LOG
	 * @mbggenerated  Tue Apr 24 16:01:55 CST 2012
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table BUSINESS_LOG
     *
     * @mbggenerated do_not_delete_during_merge Tue Apr 17 09:41:17 CST 2012
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}