package com.ksource.liangfa.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class AdmdivLicenseReplyExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table ADMDIV_LICENSE_REPLY
	 * @mbggenerated  Wed Jan 09 20:28:00 CST 2013
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table ADMDIV_LICENSE_REPLY
	 * @mbggenerated  Wed Jan 09 20:28:00 CST 2013
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table ADMDIV_LICENSE_REPLY
	 * @mbggenerated  Wed Jan 09 20:28:00 CST 2013
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ADMDIV_LICENSE_REPLY
	 * @mbggenerated  Wed Jan 09 20:28:00 CST 2013
	 */
	public AdmdivLicenseReplyExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ADMDIV_LICENSE_REPLY
	 * @mbggenerated  Wed Jan 09 20:28:00 CST 2013
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ADMDIV_LICENSE_REPLY
	 * @mbggenerated  Wed Jan 09 20:28:00 CST 2013
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ADMDIV_LICENSE_REPLY
	 * @mbggenerated  Wed Jan 09 20:28:00 CST 2013
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ADMDIV_LICENSE_REPLY
	 * @mbggenerated  Wed Jan 09 20:28:00 CST 2013
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ADMDIV_LICENSE_REPLY
	 * @mbggenerated  Wed Jan 09 20:28:00 CST 2013
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ADMDIV_LICENSE_REPLY
	 * @mbggenerated  Wed Jan 09 20:28:00 CST 2013
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ADMDIV_LICENSE_REPLY
	 * @mbggenerated  Wed Jan 09 20:28:00 CST 2013
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ADMDIV_LICENSE_REPLY
	 * @mbggenerated  Wed Jan 09 20:28:00 CST 2013
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ADMDIV_LICENSE_REPLY
	 * @mbggenerated  Wed Jan 09 20:28:00 CST 2013
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ADMDIV_LICENSE_REPLY
	 * @mbggenerated  Wed Jan 09 20:28:00 CST 2013
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table ADMDIV_LICENSE_REPLY
	 * @mbggenerated  Wed Jan 09 20:28:00 CST 2013
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		protected void addCriterionForJDBCDate(String condition, Date value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()),
					property);
		}

		protected void addCriterionForJDBCDate(String condition,
				List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1,
				Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()),
					new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andReplyIdIsNull() {
			addCriterion("REPLY_ID is null");
			return (Criteria) this;
		}

		public Criteria andReplyIdIsNotNull() {
			addCriterion("REPLY_ID is not null");
			return (Criteria) this;
		}

		public Criteria andReplyIdEqualTo(Integer value) {
			addCriterion("REPLY_ID =", value, "replyId");
			return (Criteria) this;
		}

		public Criteria andReplyIdNotEqualTo(Integer value) {
			addCriterion("REPLY_ID <>", value, "replyId");
			return (Criteria) this;
		}

		public Criteria andReplyIdGreaterThan(Integer value) {
			addCriterion("REPLY_ID >", value, "replyId");
			return (Criteria) this;
		}

		public Criteria andReplyIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("REPLY_ID >=", value, "replyId");
			return (Criteria) this;
		}

		public Criteria andReplyIdLessThan(Integer value) {
			addCriterion("REPLY_ID <", value, "replyId");
			return (Criteria) this;
		}

		public Criteria andReplyIdLessThanOrEqualTo(Integer value) {
			addCriterion("REPLY_ID <=", value, "replyId");
			return (Criteria) this;
		}

		public Criteria andReplyIdIn(List<Integer> values) {
			addCriterion("REPLY_ID in", values, "replyId");
			return (Criteria) this;
		}

		public Criteria andReplyIdNotIn(List<Integer> values) {
			addCriterion("REPLY_ID not in", values, "replyId");
			return (Criteria) this;
		}

		public Criteria andReplyIdBetween(Integer value1, Integer value2) {
			addCriterion("REPLY_ID between", value1, value2, "replyId");
			return (Criteria) this;
		}

		public Criteria andReplyIdNotBetween(Integer value1, Integer value2) {
			addCriterion("REPLY_ID not between", value1, value2, "replyId");
			return (Criteria) this;
		}

		public Criteria andLicenseIdIsNull() {
			addCriterion("LICENSE_ID is null");
			return (Criteria) this;
		}

		public Criteria andLicenseIdIsNotNull() {
			addCriterion("LICENSE_ID is not null");
			return (Criteria) this;
		}

		public Criteria andLicenseIdEqualTo(Integer value) {
			addCriterion("LICENSE_ID =", value, "licenseId");
			return (Criteria) this;
		}

		public Criteria andLicenseIdNotEqualTo(Integer value) {
			addCriterion("LICENSE_ID <>", value, "licenseId");
			return (Criteria) this;
		}

		public Criteria andLicenseIdGreaterThan(Integer value) {
			addCriterion("LICENSE_ID >", value, "licenseId");
			return (Criteria) this;
		}

		public Criteria andLicenseIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("LICENSE_ID >=", value, "licenseId");
			return (Criteria) this;
		}

		public Criteria andLicenseIdLessThan(Integer value) {
			addCriterion("LICENSE_ID <", value, "licenseId");
			return (Criteria) this;
		}

		public Criteria andLicenseIdLessThanOrEqualTo(Integer value) {
			addCriterion("LICENSE_ID <=", value, "licenseId");
			return (Criteria) this;
		}

		public Criteria andLicenseIdIn(List<Integer> values) {
			addCriterion("LICENSE_ID in", values, "licenseId");
			return (Criteria) this;
		}

		public Criteria andLicenseIdNotIn(List<Integer> values) {
			addCriterion("LICENSE_ID not in", values, "licenseId");
			return (Criteria) this;
		}

		public Criteria andLicenseIdBetween(Integer value1, Integer value2) {
			addCriterion("LICENSE_ID between", value1, value2, "licenseId");
			return (Criteria) this;
		}

		public Criteria andLicenseIdNotBetween(Integer value1, Integer value2) {
			addCriterion("LICENSE_ID not between", value1, value2, "licenseId");
			return (Criteria) this;
		}

		public Criteria andReplyUserIsNull() {
			addCriterion("REPLY_USER is null");
			return (Criteria) this;
		}

		public Criteria andReplyUserIsNotNull() {
			addCriterion("REPLY_USER is not null");
			return (Criteria) this;
		}

		public Criteria andReplyUserEqualTo(String value) {
			addCriterion("REPLY_USER =", value, "replyUser");
			return (Criteria) this;
		}

		public Criteria andReplyUserNotEqualTo(String value) {
			addCriterion("REPLY_USER <>", value, "replyUser");
			return (Criteria) this;
		}

		public Criteria andReplyUserGreaterThan(String value) {
			addCriterion("REPLY_USER >", value, "replyUser");
			return (Criteria) this;
		}

		public Criteria andReplyUserGreaterThanOrEqualTo(String value) {
			addCriterion("REPLY_USER >=", value, "replyUser");
			return (Criteria) this;
		}

		public Criteria andReplyUserLessThan(String value) {
			addCriterion("REPLY_USER <", value, "replyUser");
			return (Criteria) this;
		}

		public Criteria andReplyUserLessThanOrEqualTo(String value) {
			addCriterion("REPLY_USER <=", value, "replyUser");
			return (Criteria) this;
		}

		public Criteria andReplyUserLike(String value) {
			addCriterion("REPLY_USER like", value, "replyUser");
			return (Criteria) this;
		}

		public Criteria andReplyUserNotLike(String value) {
			addCriterion("REPLY_USER not like", value, "replyUser");
			return (Criteria) this;
		}

		public Criteria andReplyUserIn(List<String> values) {
			addCriterion("REPLY_USER in", values, "replyUser");
			return (Criteria) this;
		}

		public Criteria andReplyUserNotIn(List<String> values) {
			addCriterion("REPLY_USER not in", values, "replyUser");
			return (Criteria) this;
		}

		public Criteria andReplyUserBetween(String value1, String value2) {
			addCriterion("REPLY_USER between", value1, value2, "replyUser");
			return (Criteria) this;
		}

		public Criteria andReplyUserNotBetween(String value1, String value2) {
			addCriterion("REPLY_USER not between", value1, value2, "replyUser");
			return (Criteria) this;
		}

		public Criteria andReplyTimeIsNull() {
			addCriterion("REPLY_TIME is null");
			return (Criteria) this;
		}

		public Criteria andReplyTimeIsNotNull() {
			addCriterion("REPLY_TIME is not null");
			return (Criteria) this;
		}

		public Criteria andReplyTimeEqualTo(Date value) {
			addCriterionForJDBCDate("REPLY_TIME =", value, "replyTime");
			return (Criteria) this;
		}

		public Criteria andReplyTimeNotEqualTo(Date value) {
			addCriterionForJDBCDate("REPLY_TIME <>", value, "replyTime");
			return (Criteria) this;
		}

		public Criteria andReplyTimeGreaterThan(Date value) {
			addCriterionForJDBCDate("REPLY_TIME >", value, "replyTime");
			return (Criteria) this;
		}

		public Criteria andReplyTimeGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("REPLY_TIME >=", value, "replyTime");
			return (Criteria) this;
		}

		public Criteria andReplyTimeLessThan(Date value) {
			addCriterionForJDBCDate("REPLY_TIME <", value, "replyTime");
			return (Criteria) this;
		}

		public Criteria andReplyTimeLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("REPLY_TIME <=", value, "replyTime");
			return (Criteria) this;
		}

		public Criteria andReplyTimeIn(List<Date> values) {
			addCriterionForJDBCDate("REPLY_TIME in", values, "replyTime");
			return (Criteria) this;
		}

		public Criteria andReplyTimeNotIn(List<Date> values) {
			addCriterionForJDBCDate("REPLY_TIME not in", values, "replyTime");
			return (Criteria) this;
		}

		public Criteria andReplyTimeBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("REPLY_TIME between", value1, value2,
					"replyTime");
			return (Criteria) this;
		}

		public Criteria andReplyTimeNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("REPLY_TIME not between", value1, value2,
					"replyTime");
			return (Criteria) this;
		}

		public Criteria andReplyContentIsNull() {
			addCriterion("REPLY_CONTENT is null");
			return (Criteria) this;
		}

		public Criteria andReplyContentIsNotNull() {
			addCriterion("REPLY_CONTENT is not null");
			return (Criteria) this;
		}

		public Criteria andReplyContentEqualTo(String value) {
			addCriterion("REPLY_CONTENT =", value, "replyContent");
			return (Criteria) this;
		}

		public Criteria andReplyContentNotEqualTo(String value) {
			addCriterion("REPLY_CONTENT <>", value, "replyContent");
			return (Criteria) this;
		}

		public Criteria andReplyContentGreaterThan(String value) {
			addCriterion("REPLY_CONTENT >", value, "replyContent");
			return (Criteria) this;
		}

		public Criteria andReplyContentGreaterThanOrEqualTo(String value) {
			addCriterion("REPLY_CONTENT >=", value, "replyContent");
			return (Criteria) this;
		}

		public Criteria andReplyContentLessThan(String value) {
			addCriterion("REPLY_CONTENT <", value, "replyContent");
			return (Criteria) this;
		}

		public Criteria andReplyContentLessThanOrEqualTo(String value) {
			addCriterion("REPLY_CONTENT <=", value, "replyContent");
			return (Criteria) this;
		}

		public Criteria andReplyContentLike(String value) {
			addCriterion("REPLY_CONTENT like", value, "replyContent");
			return (Criteria) this;
		}

		public Criteria andReplyContentNotLike(String value) {
			addCriterion("REPLY_CONTENT not like", value, "replyContent");
			return (Criteria) this;
		}

		public Criteria andReplyContentIn(List<String> values) {
			addCriterion("REPLY_CONTENT in", values, "replyContent");
			return (Criteria) this;
		}

		public Criteria andReplyContentNotIn(List<String> values) {
			addCriterion("REPLY_CONTENT not in", values, "replyContent");
			return (Criteria) this;
		}

		public Criteria andReplyContentBetween(String value1, String value2) {
			addCriterion("REPLY_CONTENT between", value1, value2,
					"replyContent");
			return (Criteria) this;
		}

		public Criteria andReplyContentNotBetween(String value1, String value2) {
			addCriterion("REPLY_CONTENT not between", value1, value2,
					"replyContent");
			return (Criteria) this;
		}

		public Criteria andReplyTypeIsNull() {
			addCriterion("REPLY_TYPE is null");
			return (Criteria) this;
		}

		public Criteria andReplyTypeIsNotNull() {
			addCriterion("REPLY_TYPE is not null");
			return (Criteria) this;
		}

		public Criteria andReplyTypeEqualTo(Integer value) {
			addCriterion("REPLY_TYPE =", value, "replyType");
			return (Criteria) this;
		}

		public Criteria andReplyTypeNotEqualTo(Integer value) {
			addCriterion("REPLY_TYPE <>", value, "replyType");
			return (Criteria) this;
		}

		public Criteria andReplyTypeGreaterThan(Integer value) {
			addCriterion("REPLY_TYPE >", value, "replyType");
			return (Criteria) this;
		}

		public Criteria andReplyTypeGreaterThanOrEqualTo(Integer value) {
			addCriterion("REPLY_TYPE >=", value, "replyType");
			return (Criteria) this;
		}

		public Criteria andReplyTypeLessThan(Integer value) {
			addCriterion("REPLY_TYPE <", value, "replyType");
			return (Criteria) this;
		}

		public Criteria andReplyTypeLessThanOrEqualTo(Integer value) {
			addCriterion("REPLY_TYPE <=", value, "replyType");
			return (Criteria) this;
		}

		public Criteria andReplyTypeLike(Integer value) {
			addCriterion("REPLY_TYPE like", value, "replyType");
			return (Criteria) this;
		}

		public Criteria andReplyTypeNotLike(Integer value) {
			addCriterion("REPLY_TYPE not like", value, "replyType");
			return (Criteria) this;
		}

		public Criteria andReplyTypeIn(List<Integer> values) {
			addCriterion("REPLY_TYPE in", values, "replyType");
			return (Criteria) this;
		}

		public Criteria andReplyTypeNotIn(List<Integer> values) {
			addCriterion("REPLY_TYPE not in", values, "replyType");
			return (Criteria) this;
		}

		public Criteria andReplyTypeBetween(Integer value1, Integer value2) {
			addCriterion("REPLY_TYPE between", value1, value2, "replyType");
			return (Criteria) this;
		}

		public Criteria andReplyTypeNotBetween(Integer value1, Integer value2) {
			addCriterion("REPLY_TYPE not between", value1, value2, "replyType");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table ADMDIV_LICENSE_REPLY
	 * @mbggenerated  Wed Jan 09 20:28:00 CST 2013
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ADMDIV_LICENSE_REPLY
     *
     * @mbggenerated do_not_delete_during_merge Wed Jan 09 20:26:39 CST 2013
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}