package com.ksource.liangfa.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class CaseModifiedImpLogExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table CASE_MODIFIED_IMP_LOG
	 * @mbggenerated  Fri Sep 26 09:10:19 CST 2014
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table CASE_MODIFIED_IMP_LOG
	 * @mbggenerated  Fri Sep 26 09:10:19 CST 2014
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table CASE_MODIFIED_IMP_LOG
	 * @mbggenerated  Fri Sep 26 09:10:19 CST 2014
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table CASE_MODIFIED_IMP_LOG
	 * @mbggenerated  Fri Sep 26 09:10:19 CST 2014
	 */
	public CaseModifiedImpLogExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table CASE_MODIFIED_IMP_LOG
	 * @mbggenerated  Fri Sep 26 09:10:19 CST 2014
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table CASE_MODIFIED_IMP_LOG
	 * @mbggenerated  Fri Sep 26 09:10:19 CST 2014
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table CASE_MODIFIED_IMP_LOG
	 * @mbggenerated  Fri Sep 26 09:10:19 CST 2014
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table CASE_MODIFIED_IMP_LOG
	 * @mbggenerated  Fri Sep 26 09:10:19 CST 2014
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table CASE_MODIFIED_IMP_LOG
	 * @mbggenerated  Fri Sep 26 09:10:19 CST 2014
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table CASE_MODIFIED_IMP_LOG
	 * @mbggenerated  Fri Sep 26 09:10:19 CST 2014
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table CASE_MODIFIED_IMP_LOG
	 * @mbggenerated  Fri Sep 26 09:10:19 CST 2014
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table CASE_MODIFIED_IMP_LOG
	 * @mbggenerated  Fri Sep 26 09:10:19 CST 2014
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table CASE_MODIFIED_IMP_LOG
	 * @mbggenerated  Fri Sep 26 09:10:19 CST 2014
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table CASE_MODIFIED_IMP_LOG
	 * @mbggenerated  Fri Sep 26 09:10:19 CST 2014
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table CASE_MODIFIED_IMP_LOG
	 * @mbggenerated  Fri Sep 26 09:10:19 CST 2014
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("ID is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("ID is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("ID =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("ID <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("ID >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("ID >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("ID <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("ID <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("ID in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("ID not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("ID between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("ID not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andOperatorIsNull() {
			addCriterion("OPERATOR is null");
			return (Criteria) this;
		}

		public Criteria andOperatorIsNotNull() {
			addCriterion("OPERATOR is not null");
			return (Criteria) this;
		}

		public Criteria andOperatorEqualTo(String value) {
			addCriterion("OPERATOR =", value, "operator");
			return (Criteria) this;
		}

		public Criteria andOperatorNotEqualTo(String value) {
			addCriterion("OPERATOR <>", value, "operator");
			return (Criteria) this;
		}

		public Criteria andOperatorGreaterThan(String value) {
			addCriterion("OPERATOR >", value, "operator");
			return (Criteria) this;
		}

		public Criteria andOperatorGreaterThanOrEqualTo(String value) {
			addCriterion("OPERATOR >=", value, "operator");
			return (Criteria) this;
		}

		public Criteria andOperatorLessThan(String value) {
			addCriterion("OPERATOR <", value, "operator");
			return (Criteria) this;
		}

		public Criteria andOperatorLessThanOrEqualTo(String value) {
			addCriterion("OPERATOR <=", value, "operator");
			return (Criteria) this;
		}

		public Criteria andOperatorLike(String value) {
			addCriterion("OPERATOR like", value, "operator");
			return (Criteria) this;
		}

		public Criteria andOperatorNotLike(String value) {
			addCriterion("OPERATOR not like", value, "operator");
			return (Criteria) this;
		}

		public Criteria andOperatorIn(List<String> values) {
			addCriterion("OPERATOR in", values, "operator");
			return (Criteria) this;
		}

		public Criteria andOperatorNotIn(List<String> values) {
			addCriterion("OPERATOR not in", values, "operator");
			return (Criteria) this;
		}

		public Criteria andOperatorBetween(String value1, String value2) {
			addCriterion("OPERATOR between", value1, value2, "operator");
			return (Criteria) this;
		}

		public Criteria andOperatorNotBetween(String value1, String value2) {
			addCriterion("OPERATOR not between", value1, value2, "operator");
			return (Criteria) this;
		}

		public Criteria andImpTimeIsNull() {
			addCriterion("IMP_TIME is null");
			return (Criteria) this;
		}

		public Criteria andImpTimeIsNotNull() {
			addCriterion("IMP_TIME is not null");
			return (Criteria) this;
		}

		public Criteria andImpTimeEqualTo(Date value) {
			addCriterion("IMP_TIME =", value, "impTime");
			return (Criteria) this;
		}

		public Criteria andImpTimeNotEqualTo(Date value) {
			addCriterion("IMP_TIME <>", value, "impTime");
			return (Criteria) this;
		}

		public Criteria andImpTimeGreaterThan(Date value) {
			addCriterion("IMP_TIME >", value, "impTime");
			return (Criteria) this;
		}

		public Criteria andImpTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("IMP_TIME >=", value, "impTime");
			return (Criteria) this;
		}

		public Criteria andImpTimeLessThan(Date value) {
			addCriterion("IMP_TIME <", value, "impTime");
			return (Criteria) this;
		}

		public Criteria andImpTimeLessThanOrEqualTo(Date value) {
			addCriterion("IMP_TIME <=", value, "impTime");
			return (Criteria) this;
		}

		public Criteria andImpTimeIn(List<Date> values) {
			addCriterion("IMP_TIME in", values, "impTime");
			return (Criteria) this;
		}

		public Criteria andImpTimeNotIn(List<Date> values) {
			addCriterion("IMP_TIME not in", values, "impTime");
			return (Criteria) this;
		}

		public Criteria andImpTimeBetween(Date value1, Date value2) {
			addCriterion("IMP_TIME between", value1, value2, "impTime");
			return (Criteria) this;
		}

		public Criteria andImpTimeNotBetween(Date value1, Date value2) {
			addCriterion("IMP_TIME not between", value1, value2, "impTime");
			return (Criteria) this;
		}

		public Criteria andInsertCountIsNull() {
			addCriterion("INSERT_COUNT is null");
			return (Criteria) this;
		}

		public Criteria andInsertCountIsNotNull() {
			addCriterion("INSERT_COUNT is not null");
			return (Criteria) this;
		}

		public Criteria andInsertCountEqualTo(Integer value) {
			addCriterion("INSERT_COUNT =", value, "insertCount");
			return (Criteria) this;
		}

		public Criteria andInsertCountNotEqualTo(Integer value) {
			addCriterion("INSERT_COUNT <>", value, "insertCount");
			return (Criteria) this;
		}

		public Criteria andInsertCountGreaterThan(Integer value) {
			addCriterion("INSERT_COUNT >", value, "insertCount");
			return (Criteria) this;
		}

		public Criteria andInsertCountGreaterThanOrEqualTo(Integer value) {
			addCriterion("INSERT_COUNT >=", value, "insertCount");
			return (Criteria) this;
		}

		public Criteria andInsertCountLessThan(Integer value) {
			addCriterion("INSERT_COUNT <", value, "insertCount");
			return (Criteria) this;
		}

		public Criteria andInsertCountLessThanOrEqualTo(Integer value) {
			addCriterion("INSERT_COUNT <=", value, "insertCount");
			return (Criteria) this;
		}

		public Criteria andInsertCountIn(List<Integer> values) {
			addCriterion("INSERT_COUNT in", values, "insertCount");
			return (Criteria) this;
		}

		public Criteria andInsertCountNotIn(List<Integer> values) {
			addCriterion("INSERT_COUNT not in", values, "insertCount");
			return (Criteria) this;
		}

		public Criteria andInsertCountBetween(Integer value1, Integer value2) {
			addCriterion("INSERT_COUNT between", value1, value2, "insertCount");
			return (Criteria) this;
		}

		public Criteria andInsertCountNotBetween(Integer value1, Integer value2) {
			addCriterion("INSERT_COUNT not between", value1, value2,
					"insertCount");
			return (Criteria) this;
		}

		public Criteria andUpdateCountIsNull() {
			addCriterion("UPDATE_COUNT is null");
			return (Criteria) this;
		}

		public Criteria andUpdateCountIsNotNull() {
			addCriterion("UPDATE_COUNT is not null");
			return (Criteria) this;
		}

		public Criteria andUpdateCountEqualTo(Integer value) {
			addCriterion("UPDATE_COUNT =", value, "updateCount");
			return (Criteria) this;
		}

		public Criteria andUpdateCountNotEqualTo(Integer value) {
			addCriterion("UPDATE_COUNT <>", value, "updateCount");
			return (Criteria) this;
		}

		public Criteria andUpdateCountGreaterThan(Integer value) {
			addCriterion("UPDATE_COUNT >", value, "updateCount");
			return (Criteria) this;
		}

		public Criteria andUpdateCountGreaterThanOrEqualTo(Integer value) {
			addCriterion("UPDATE_COUNT >=", value, "updateCount");
			return (Criteria) this;
		}

		public Criteria andUpdateCountLessThan(Integer value) {
			addCriterion("UPDATE_COUNT <", value, "updateCount");
			return (Criteria) this;
		}

		public Criteria andUpdateCountLessThanOrEqualTo(Integer value) {
			addCriterion("UPDATE_COUNT <=", value, "updateCount");
			return (Criteria) this;
		}

		public Criteria andUpdateCountIn(List<Integer> values) {
			addCriterion("UPDATE_COUNT in", values, "updateCount");
			return (Criteria) this;
		}

		public Criteria andUpdateCountNotIn(List<Integer> values) {
			addCriterion("UPDATE_COUNT not in", values, "updateCount");
			return (Criteria) this;
		}

		public Criteria andUpdateCountBetween(Integer value1, Integer value2) {
			addCriterion("UPDATE_COUNT between", value1, value2, "updateCount");
			return (Criteria) this;
		}

		public Criteria andUpdateCountNotBetween(Integer value1, Integer value2) {
			addCriterion("UPDATE_COUNT not between", value1, value2,
					"updateCount");
			return (Criteria) this;
		}

		public Criteria andDeleteCountIsNull() {
			addCriterion("DELETE_COUNT is null");
			return (Criteria) this;
		}

		public Criteria andDeleteCountIsNotNull() {
			addCriterion("DELETE_COUNT is not null");
			return (Criteria) this;
		}

		public Criteria andDeleteCountEqualTo(Integer value) {
			addCriterion("DELETE_COUNT =", value, "deleteCount");
			return (Criteria) this;
		}

		public Criteria andDeleteCountNotEqualTo(Integer value) {
			addCriterion("DELETE_COUNT <>", value, "deleteCount");
			return (Criteria) this;
		}

		public Criteria andDeleteCountGreaterThan(Integer value) {
			addCriterion("DELETE_COUNT >", value, "deleteCount");
			return (Criteria) this;
		}

		public Criteria andDeleteCountGreaterThanOrEqualTo(Integer value) {
			addCriterion("DELETE_COUNT >=", value, "deleteCount");
			return (Criteria) this;
		}

		public Criteria andDeleteCountLessThan(Integer value) {
			addCriterion("DELETE_COUNT <", value, "deleteCount");
			return (Criteria) this;
		}

		public Criteria andDeleteCountLessThanOrEqualTo(Integer value) {
			addCriterion("DELETE_COUNT <=", value, "deleteCount");
			return (Criteria) this;
		}

		public Criteria andDeleteCountIn(List<Integer> values) {
			addCriterion("DELETE_COUNT in", values, "deleteCount");
			return (Criteria) this;
		}

		public Criteria andDeleteCountNotIn(List<Integer> values) {
			addCriterion("DELETE_COUNT not in", values, "deleteCount");
			return (Criteria) this;
		}

		public Criteria andDeleteCountBetween(Integer value1, Integer value2) {
			addCriterion("DELETE_COUNT between", value1, value2, "deleteCount");
			return (Criteria) this;
		}

		public Criteria andDeleteCountNotBetween(Integer value1, Integer value2) {
			addCriterion("DELETE_COUNT not between", value1, value2,
					"deleteCount");
			return (Criteria) this;
		}

		public Criteria andImpFileIsNull() {
			addCriterion("IMP_FILE is null");
			return (Criteria) this;
		}

		public Criteria andImpFileIsNotNull() {
			addCriterion("IMP_FILE is not null");
			return (Criteria) this;
		}

		public Criteria andImpFileEqualTo(String value) {
			addCriterion("IMP_FILE =", value, "impFile");
			return (Criteria) this;
		}

		public Criteria andImpFileNotEqualTo(String value) {
			addCriterion("IMP_FILE <>", value, "impFile");
			return (Criteria) this;
		}

		public Criteria andImpFileGreaterThan(String value) {
			addCriterion("IMP_FILE >", value, "impFile");
			return (Criteria) this;
		}

		public Criteria andImpFileGreaterThanOrEqualTo(String value) {
			addCriterion("IMP_FILE >=", value, "impFile");
			return (Criteria) this;
		}

		public Criteria andImpFileLessThan(String value) {
			addCriterion("IMP_FILE <", value, "impFile");
			return (Criteria) this;
		}

		public Criteria andImpFileLessThanOrEqualTo(String value) {
			addCriterion("IMP_FILE <=", value, "impFile");
			return (Criteria) this;
		}

		public Criteria andImpFileLike(String value) {
			addCriterion("IMP_FILE like", value, "impFile");
			return (Criteria) this;
		}

		public Criteria andImpFileNotLike(String value) {
			addCriterion("IMP_FILE not like", value, "impFile");
			return (Criteria) this;
		}

		public Criteria andImpFileIn(List<String> values) {
			addCriterion("IMP_FILE in", values, "impFile");
			return (Criteria) this;
		}

		public Criteria andImpFileNotIn(List<String> values) {
			addCriterion("IMP_FILE not in", values, "impFile");
			return (Criteria) this;
		}

		public Criteria andImpFileBetween(String value1, String value2) {
			addCriterion("IMP_FILE between", value1, value2, "impFile");
			return (Criteria) this;
		}

		public Criteria andImpFileNotBetween(String value1, String value2) {
			addCriterion("IMP_FILE not between", value1, value2, "impFile");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table CASE_MODIFIED_IMP_LOG
	 * @mbggenerated  Fri Sep 26 09:10:19 CST 2014
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table CASE_MODIFIED_IMP_LOG
     *
     * @mbggenerated do_not_delete_during_merge Tue Sep 23 14:57:59 CST 2014
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}