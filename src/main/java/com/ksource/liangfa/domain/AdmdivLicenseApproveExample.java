package com.ksource.liangfa.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class AdmdivLicenseApproveExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table ADMDIV_LICENSE_APPROVE
	 * @mbggenerated  Tue Jan 08 15:09:51 CST 2013
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table ADMDIV_LICENSE_APPROVE
	 * @mbggenerated  Tue Jan 08 15:09:51 CST 2013
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table ADMDIV_LICENSE_APPROVE
	 * @mbggenerated  Tue Jan 08 15:09:51 CST 2013
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ADMDIV_LICENSE_APPROVE
	 * @mbggenerated  Tue Jan 08 15:09:51 CST 2013
	 */
	public AdmdivLicenseApproveExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ADMDIV_LICENSE_APPROVE
	 * @mbggenerated  Tue Jan 08 15:09:51 CST 2013
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ADMDIV_LICENSE_APPROVE
	 * @mbggenerated  Tue Jan 08 15:09:51 CST 2013
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ADMDIV_LICENSE_APPROVE
	 * @mbggenerated  Tue Jan 08 15:09:51 CST 2013
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ADMDIV_LICENSE_APPROVE
	 * @mbggenerated  Tue Jan 08 15:09:51 CST 2013
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ADMDIV_LICENSE_APPROVE
	 * @mbggenerated  Tue Jan 08 15:09:51 CST 2013
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ADMDIV_LICENSE_APPROVE
	 * @mbggenerated  Tue Jan 08 15:09:51 CST 2013
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ADMDIV_LICENSE_APPROVE
	 * @mbggenerated  Tue Jan 08 15:09:51 CST 2013
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ADMDIV_LICENSE_APPROVE
	 * @mbggenerated  Tue Jan 08 15:09:51 CST 2013
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ADMDIV_LICENSE_APPROVE
	 * @mbggenerated  Tue Jan 08 15:09:51 CST 2013
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ADMDIV_LICENSE_APPROVE
	 * @mbggenerated  Tue Jan 08 15:09:51 CST 2013
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table ADMDIV_LICENSE_APPROVE
	 * @mbggenerated  Tue Jan 08 15:09:51 CST 2013
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		protected void addCriterionForJDBCDate(String condition, Date value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()),
					property);
		}

		protected void addCriterionForJDBCDate(String condition,
				List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1,
				Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()),
					new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andLicenseIdIsNull() {
			addCriterion("LICENSE_ID is null");
			return (Criteria) this;
		}

		public Criteria andLicenseIdIsNotNull() {
			addCriterion("LICENSE_ID is not null");
			return (Criteria) this;
		}

		public Criteria andLicenseIdEqualTo(Integer value) {
			addCriterion("LICENSE_ID =", value, "licenseId");
			return (Criteria) this;
		}

		public Criteria andLicenseIdNotEqualTo(Integer value) {
			addCriterion("LICENSE_ID <>", value, "licenseId");
			return (Criteria) this;
		}

		public Criteria andLicenseIdGreaterThan(Integer value) {
			addCriterion("LICENSE_ID >", value, "licenseId");
			return (Criteria) this;
		}

		public Criteria andLicenseIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("LICENSE_ID >=", value, "licenseId");
			return (Criteria) this;
		}

		public Criteria andLicenseIdLessThan(Integer value) {
			addCriterion("LICENSE_ID <", value, "licenseId");
			return (Criteria) this;
		}

		public Criteria andLicenseIdLessThanOrEqualTo(Integer value) {
			addCriterion("LICENSE_ID <=", value, "licenseId");
			return (Criteria) this;
		}

		public Criteria andLicenseIdIn(List<Integer> values) {
			addCriterion("LICENSE_ID in", values, "licenseId");
			return (Criteria) this;
		}

		public Criteria andLicenseIdNotIn(List<Integer> values) {
			addCriterion("LICENSE_ID not in", values, "licenseId");
			return (Criteria) this;
		}

		public Criteria andLicenseIdBetween(Integer value1, Integer value2) {
			addCriterion("LICENSE_ID between", value1, value2, "licenseId");
			return (Criteria) this;
		}

		public Criteria andLicenseIdNotBetween(Integer value1, Integer value2) {
			addCriterion("LICENSE_ID not between", value1, value2, "licenseId");
			return (Criteria) this;
		}

		public Criteria andBusinessIdIsNull() {
			addCriterion("BUSINESS_ID is null");
			return (Criteria) this;
		}

		public Criteria andBusinessIdIsNotNull() {
			addCriterion("BUSINESS_ID is not null");
			return (Criteria) this;
		}

		public Criteria andBusinessIdEqualTo(String value) {
			addCriterion("BUSINESS_ID =", value, "businessId");
			return (Criteria) this;
		}

		public Criteria andBusinessIdNotEqualTo(String value) {
			addCriterion("BUSINESS_ID <>", value, "businessId");
			return (Criteria) this;
		}

		public Criteria andBusinessIdGreaterThan(String value) {
			addCriterion("BUSINESS_ID >", value, "businessId");
			return (Criteria) this;
		}

		public Criteria andBusinessIdGreaterThanOrEqualTo(String value) {
			addCriterion("BUSINESS_ID >=", value, "businessId");
			return (Criteria) this;
		}

		public Criteria andBusinessIdLessThan(String value) {
			addCriterion("BUSINESS_ID <", value, "businessId");
			return (Criteria) this;
		}

		public Criteria andBusinessIdLessThanOrEqualTo(String value) {
			addCriterion("BUSINESS_ID <=", value, "businessId");
			return (Criteria) this;
		}

		public Criteria andBusinessIdLike(String value) {
			addCriterion("BUSINESS_ID like", value, "businessId");
			return (Criteria) this;
		}

		public Criteria andBusinessIdNotLike(String value) {
			addCriterion("BUSINESS_ID not like", value, "businessId");
			return (Criteria) this;
		}

		public Criteria andBusinessIdIn(List<String> values) {
			addCriterion("BUSINESS_ID in", values, "businessId");
			return (Criteria) this;
		}

		public Criteria andBusinessIdNotIn(List<String> values) {
			addCriterion("BUSINESS_ID not in", values, "businessId");
			return (Criteria) this;
		}

		public Criteria andBusinessIdBetween(String value1, String value2) {
			addCriterion("BUSINESS_ID between", value1, value2, "businessId");
			return (Criteria) this;
		}

		public Criteria andBusinessIdNotBetween(String value1, String value2) {
			addCriterion("BUSINESS_ID not between", value1, value2,
					"businessId");
			return (Criteria) this;
		}

		public Criteria andHandleUserIsNull() {
			addCriterion("HANDLE_USER is null");
			return (Criteria) this;
		}

		public Criteria andHandleUserIsNotNull() {
			addCriterion("HANDLE_USER is not null");
			return (Criteria) this;
		}

		public Criteria andHandleUserEqualTo(String value) {
			addCriterion("HANDLE_USER =", value, "handleUser");
			return (Criteria) this;
		}

		public Criteria andHandleUserNotEqualTo(String value) {
			addCriterion("HANDLE_USER <>", value, "handleUser");
			return (Criteria) this;
		}

		public Criteria andHandleUserGreaterThan(String value) {
			addCriterion("HANDLE_USER >", value, "handleUser");
			return (Criteria) this;
		}

		public Criteria andHandleUserGreaterThanOrEqualTo(String value) {
			addCriterion("HANDLE_USER >=", value, "handleUser");
			return (Criteria) this;
		}

		public Criteria andHandleUserLessThan(String value) {
			addCriterion("HANDLE_USER <", value, "handleUser");
			return (Criteria) this;
		}

		public Criteria andHandleUserLessThanOrEqualTo(String value) {
			addCriterion("HANDLE_USER <=", value, "handleUser");
			return (Criteria) this;
		}

		public Criteria andHandleUserLike(String value) {
			addCriterion("HANDLE_USER like", value, "handleUser");
			return (Criteria) this;
		}

		public Criteria andHandleUserNotLike(String value) {
			addCriterion("HANDLE_USER not like", value, "handleUser");
			return (Criteria) this;
		}

		public Criteria andHandleUserIn(List<String> values) {
			addCriterion("HANDLE_USER in", values, "handleUser");
			return (Criteria) this;
		}

		public Criteria andHandleUserNotIn(List<String> values) {
			addCriterion("HANDLE_USER not in", values, "handleUser");
			return (Criteria) this;
		}

		public Criteria andHandleUserBetween(String value1, String value2) {
			addCriterion("HANDLE_USER between", value1, value2, "handleUser");
			return (Criteria) this;
		}

		public Criteria andHandleUserNotBetween(String value1, String value2) {
			addCriterion("HANDLE_USER not between", value1, value2,
					"handleUser");
			return (Criteria) this;
		}

		public Criteria andHandleTimeIsNull() {
			addCriterion("HANDLE_TIME is null");
			return (Criteria) this;
		}

		public Criteria andHandleTimeIsNotNull() {
			addCriterion("HANDLE_TIME is not null");
			return (Criteria) this;
		}

		public Criteria andHandleTimeEqualTo(Date value) {
			addCriterionForJDBCDate("HANDLE_TIME =", value, "handleTime");
			return (Criteria) this;
		}

		public Criteria andHandleTimeNotEqualTo(Date value) {
			addCriterionForJDBCDate("HANDLE_TIME <>", value, "handleTime");
			return (Criteria) this;
		}

		public Criteria andHandleTimeGreaterThan(Date value) {
			addCriterionForJDBCDate("HANDLE_TIME >", value, "handleTime");
			return (Criteria) this;
		}

		public Criteria andHandleTimeGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("HANDLE_TIME >=", value, "handleTime");
			return (Criteria) this;
		}

		public Criteria andHandleTimeLessThan(Date value) {
			addCriterionForJDBCDate("HANDLE_TIME <", value, "handleTime");
			return (Criteria) this;
		}

		public Criteria andHandleTimeLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("HANDLE_TIME <=", value, "handleTime");
			return (Criteria) this;
		}

		public Criteria andHandleTimeIn(List<Date> values) {
			addCriterionForJDBCDate("HANDLE_TIME in", values, "handleTime");
			return (Criteria) this;
		}

		public Criteria andHandleTimeNotIn(List<Date> values) {
			addCriterionForJDBCDate("HANDLE_TIME not in", values, "handleTime");
			return (Criteria) this;
		}

		public Criteria andHandleTimeBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("HANDLE_TIME between", value1, value2,
					"handleTime");
			return (Criteria) this;
		}

		public Criteria andHandleTimeNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("HANDLE_TIME not between", value1, value2,
					"handleTime");
			return (Criteria) this;
		}

		public Criteria andContentIsNull() {
			addCriterion("CONTENT is null");
			return (Criteria) this;
		}

		public Criteria andContentIsNotNull() {
			addCriterion("CONTENT is not null");
			return (Criteria) this;
		}

		public Criteria andContentEqualTo(String value) {
			addCriterion("CONTENT =", value, "content");
			return (Criteria) this;
		}

		public Criteria andContentNotEqualTo(String value) {
			addCriterion("CONTENT <>", value, "content");
			return (Criteria) this;
		}

		public Criteria andContentGreaterThan(String value) {
			addCriterion("CONTENT >", value, "content");
			return (Criteria) this;
		}

		public Criteria andContentGreaterThanOrEqualTo(String value) {
			addCriterion("CONTENT >=", value, "content");
			return (Criteria) this;
		}

		public Criteria andContentLessThan(String value) {
			addCriterion("CONTENT <", value, "content");
			return (Criteria) this;
		}

		public Criteria andContentLessThanOrEqualTo(String value) {
			addCriterion("CONTENT <=", value, "content");
			return (Criteria) this;
		}

		public Criteria andContentLike(String value) {
			addCriterion("CONTENT like", value, "content");
			return (Criteria) this;
		}

		public Criteria andContentNotLike(String value) {
			addCriterion("CONTENT not like", value, "content");
			return (Criteria) this;
		}

		public Criteria andContentIn(List<String> values) {
			addCriterion("CONTENT in", values, "content");
			return (Criteria) this;
		}

		public Criteria andContentNotIn(List<String> values) {
			addCriterion("CONTENT not in", values, "content");
			return (Criteria) this;
		}

		public Criteria andContentBetween(String value1, String value2) {
			addCriterion("CONTENT between", value1, value2, "content");
			return (Criteria) this;
		}

		public Criteria andContentNotBetween(String value1, String value2) {
			addCriterion("CONTENT not between", value1, value2, "content");
			return (Criteria) this;
		}

		public Criteria andStepIsNull() {
			addCriterion("STEP is null");
			return (Criteria) this;
		}

		public Criteria andStepIsNotNull() {
			addCriterion("STEP is not null");
			return (Criteria) this;
		}

		public Criteria andStepEqualTo(String value) {
			addCriterion("STEP =", value, "step");
			return (Criteria) this;
		}

		public Criteria andStepNotEqualTo(String value) {
			addCriterion("STEP <>", value, "step");
			return (Criteria) this;
		}

		public Criteria andStepGreaterThan(String value) {
			addCriterion("STEP >", value, "step");
			return (Criteria) this;
		}

		public Criteria andStepGreaterThanOrEqualTo(String value) {
			addCriterion("STEP >=", value, "step");
			return (Criteria) this;
		}

		public Criteria andStepLessThan(String value) {
			addCriterion("STEP <", value, "step");
			return (Criteria) this;
		}

		public Criteria andStepLessThanOrEqualTo(String value) {
			addCriterion("STEP <=", value, "step");
			return (Criteria) this;
		}

		public Criteria andStepLike(String value) {
			addCriterion("STEP like", value, "step");
			return (Criteria) this;
		}

		public Criteria andStepNotLike(String value) {
			addCriterion("STEP not like", value, "step");
			return (Criteria) this;
		}

		public Criteria andStepIn(List<String> values) {
			addCriterion("STEP in", values, "step");
			return (Criteria) this;
		}

		public Criteria andStepNotIn(List<String> values) {
			addCriterion("STEP not in", values, "step");
			return (Criteria) this;
		}

		public Criteria andStepBetween(String value1, String value2) {
			addCriterion("STEP between", value1, value2, "step");
			return (Criteria) this;
		}

		public Criteria andStepNotBetween(String value1, String value2) {
			addCriterion("STEP not between", value1, value2, "step");
			return (Criteria) this;
		}

		public Criteria andInputerIsNull() {
			addCriterion("INPUTER is null");
			return (Criteria) this;
		}

		public Criteria andInputerIsNotNull() {
			addCriterion("INPUTER is not null");
			return (Criteria) this;
		}

		public Criteria andInputerEqualTo(String value) {
			addCriterion("INPUTER =", value, "inputer");
			return (Criteria) this;
		}

		public Criteria andInputerNotEqualTo(String value) {
			addCriterion("INPUTER <>", value, "inputer");
			return (Criteria) this;
		}

		public Criteria andInputerGreaterThan(String value) {
			addCriterion("INPUTER >", value, "inputer");
			return (Criteria) this;
		}

		public Criteria andInputerGreaterThanOrEqualTo(String value) {
			addCriterion("INPUTER >=", value, "inputer");
			return (Criteria) this;
		}

		public Criteria andInputerLessThan(String value) {
			addCriterion("INPUTER <", value, "inputer");
			return (Criteria) this;
		}

		public Criteria andInputerLessThanOrEqualTo(String value) {
			addCriterion("INPUTER <=", value, "inputer");
			return (Criteria) this;
		}

		public Criteria andInputerLike(String value) {
			addCriterion("INPUTER like", value, "inputer");
			return (Criteria) this;
		}

		public Criteria andInputerNotLike(String value) {
			addCriterion("INPUTER not like", value, "inputer");
			return (Criteria) this;
		}

		public Criteria andInputerIn(List<String> values) {
			addCriterion("INPUTER in", values, "inputer");
			return (Criteria) this;
		}

		public Criteria andInputerNotIn(List<String> values) {
			addCriterion("INPUTER not in", values, "inputer");
			return (Criteria) this;
		}

		public Criteria andInputerBetween(String value1, String value2) {
			addCriterion("INPUTER between", value1, value2, "inputer");
			return (Criteria) this;
		}

		public Criteria andInputerNotBetween(String value1, String value2) {
			addCriterion("INPUTER not between", value1, value2, "inputer");
			return (Criteria) this;
		}

		public Criteria andInputTimeIsNull() {
			addCriterion("INPUT_TIME is null");
			return (Criteria) this;
		}

		public Criteria andInputTimeIsNotNull() {
			addCriterion("INPUT_TIME is not null");
			return (Criteria) this;
		}

		public Criteria andInputTimeEqualTo(Date value) {
			addCriterionForJDBCDate("INPUT_TIME =", value, "inputTime");
			return (Criteria) this;
		}

		public Criteria andInputTimeNotEqualTo(Date value) {
			addCriterionForJDBCDate("INPUT_TIME <>", value, "inputTime");
			return (Criteria) this;
		}

		public Criteria andInputTimeGreaterThan(Date value) {
			addCriterionForJDBCDate("INPUT_TIME >", value, "inputTime");
			return (Criteria) this;
		}

		public Criteria andInputTimeGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("INPUT_TIME >=", value, "inputTime");
			return (Criteria) this;
		}

		public Criteria andInputTimeLessThan(Date value) {
			addCriterionForJDBCDate("INPUT_TIME <", value, "inputTime");
			return (Criteria) this;
		}

		public Criteria andInputTimeLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("INPUT_TIME <=", value, "inputTime");
			return (Criteria) this;
		}

		public Criteria andInputTimeIn(List<Date> values) {
			addCriterionForJDBCDate("INPUT_TIME in", values, "inputTime");
			return (Criteria) this;
		}

		public Criteria andInputTimeNotIn(List<Date> values) {
			addCriterionForJDBCDate("INPUT_TIME not in", values, "inputTime");
			return (Criteria) this;
		}

		public Criteria andInputTimeBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("INPUT_TIME between", value1, value2,
					"inputTime");
			return (Criteria) this;
		}

		public Criteria andInputTimeNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("INPUT_TIME not between", value1, value2,
					"inputTime");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table ADMDIV_LICENSE_APPROVE
	 * @mbggenerated  Tue Jan 08 15:09:51 CST 2013
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ADMDIV_LICENSE_APPROVE
     *
     * @mbggenerated do_not_delete_during_merge Mon Jan 07 17:43:23 CST 2013
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}