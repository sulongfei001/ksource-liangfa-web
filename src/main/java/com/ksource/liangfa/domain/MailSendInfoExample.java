package com.ksource.liangfa.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class MailSendInfoExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table LF_MAIL_SEND_INFO
	 * @mbggenerated  Tue Jan 29 10:43:17 CST 2013
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table LF_MAIL_SEND_INFO
	 * @mbggenerated  Tue Jan 29 10:43:17 CST 2013
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table LF_MAIL_SEND_INFO
	 * @mbggenerated  Tue Jan 29 10:43:17 CST 2013
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LF_MAIL_SEND_INFO
	 * @mbggenerated  Tue Jan 29 10:43:17 CST 2013
	 */
	public MailSendInfoExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LF_MAIL_SEND_INFO
	 * @mbggenerated  Tue Jan 29 10:43:17 CST 2013
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LF_MAIL_SEND_INFO
	 * @mbggenerated  Tue Jan 29 10:43:17 CST 2013
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LF_MAIL_SEND_INFO
	 * @mbggenerated  Tue Jan 29 10:43:17 CST 2013
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LF_MAIL_SEND_INFO
	 * @mbggenerated  Tue Jan 29 10:43:17 CST 2013
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LF_MAIL_SEND_INFO
	 * @mbggenerated  Tue Jan 29 10:43:17 CST 2013
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LF_MAIL_SEND_INFO
	 * @mbggenerated  Tue Jan 29 10:43:17 CST 2013
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LF_MAIL_SEND_INFO
	 * @mbggenerated  Tue Jan 29 10:43:17 CST 2013
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LF_MAIL_SEND_INFO
	 * @mbggenerated  Tue Jan 29 10:43:17 CST 2013
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LF_MAIL_SEND_INFO
	 * @mbggenerated  Tue Jan 29 10:43:17 CST 2013
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LF_MAIL_SEND_INFO
	 * @mbggenerated  Tue Jan 29 10:43:17 CST 2013
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table LF_MAIL_SEND_INFO
	 * @mbggenerated  Tue Jan 29 10:43:17 CST 2013
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		protected void addCriterionForJDBCDate(String condition, Date value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()),
					property);
		}

		protected void addCriterionForJDBCDate(String condition,
				List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1,
				Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()),
					new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andEmailIdIsNull() {
			addCriterion("EMAIL_ID is null");
			return (Criteria) this;
		}

		public Criteria andEmailIdIsNotNull() {
			addCriterion("EMAIL_ID is not null");
			return (Criteria) this;
		}

		public Criteria andEmailIdEqualTo(Integer value) {
			addCriterion("EMAIL_ID =", value, "emailId");
			return (Criteria) this;
		}

		public Criteria andEmailIdNotEqualTo(Integer value) {
			addCriterion("EMAIL_ID <>", value, "emailId");
			return (Criteria) this;
		}

		public Criteria andEmailIdGreaterThan(Integer value) {
			addCriterion("EMAIL_ID >", value, "emailId");
			return (Criteria) this;
		}

		public Criteria andEmailIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("EMAIL_ID >=", value, "emailId");
			return (Criteria) this;
		}

		public Criteria andEmailIdLessThan(Integer value) {
			addCriterion("EMAIL_ID <", value, "emailId");
			return (Criteria) this;
		}

		public Criteria andEmailIdLessThanOrEqualTo(Integer value) {
			addCriterion("EMAIL_ID <=", value, "emailId");
			return (Criteria) this;
		}

		public Criteria andEmailIdIn(List<Integer> values) {
			addCriterion("EMAIL_ID in", values, "emailId");
			return (Criteria) this;
		}

		public Criteria andEmailIdNotIn(List<Integer> values) {
			addCriterion("EMAIL_ID not in", values, "emailId");
			return (Criteria) this;
		}

		public Criteria andEmailIdBetween(Integer value1, Integer value2) {
			addCriterion("EMAIL_ID between", value1, value2, "emailId");
			return (Criteria) this;
		}

		public Criteria andEmailIdNotBetween(Integer value1, Integer value2) {
			addCriterion("EMAIL_ID not between", value1, value2, "emailId");
			return (Criteria) this;
		}

		public Criteria andSubjectIsNull() {
			addCriterion("SUBJECT is null");
			return (Criteria) this;
		}

		public Criteria andSubjectIsNotNull() {
			addCriterion("SUBJECT is not null");
			return (Criteria) this;
		}

		public Criteria andSubjectEqualTo(String value) {
			addCriterion("SUBJECT =", value, "subject");
			return (Criteria) this;
		}

		public Criteria andSubjectNotEqualTo(String value) {
			addCriterion("SUBJECT <>", value, "subject");
			return (Criteria) this;
		}

		public Criteria andSubjectGreaterThan(String value) {
			addCriterion("SUBJECT >", value, "subject");
			return (Criteria) this;
		}

		public Criteria andSubjectGreaterThanOrEqualTo(String value) {
			addCriterion("SUBJECT >=", value, "subject");
			return (Criteria) this;
		}

		public Criteria andSubjectLessThan(String value) {
			addCriterion("SUBJECT <", value, "subject");
			return (Criteria) this;
		}

		public Criteria andSubjectLessThanOrEqualTo(String value) {
			addCriterion("SUBJECT <=", value, "subject");
			return (Criteria) this;
		}

		public Criteria andSubjectLike(String value) {
			addCriterion("SUBJECT like", value, "subject");
			return (Criteria) this;
		}

		public Criteria andSubjectNotLike(String value) {
			addCriterion("SUBJECT not like", value, "subject");
			return (Criteria) this;
		}

		public Criteria andSubjectIn(List<String> values) {
			addCriterion("SUBJECT in", values, "subject");
			return (Criteria) this;
		}

		public Criteria andSubjectNotIn(List<String> values) {
			addCriterion("SUBJECT not in", values, "subject");
			return (Criteria) this;
		}

		public Criteria andSubjectBetween(String value1, String value2) {
			addCriterion("SUBJECT between", value1, value2, "subject");
			return (Criteria) this;
		}

		public Criteria andSubjectNotBetween(String value1, String value2) {
			addCriterion("SUBJECT not between", value1, value2, "subject");
			return (Criteria) this;
		}

		public Criteria andSendUserIsNull() {
			addCriterion("SEND_USER is null");
			return (Criteria) this;
		}

		public Criteria andSendUserIsNotNull() {
			addCriterion("SEND_USER is not null");
			return (Criteria) this;
		}

		public Criteria andSendUserEqualTo(String value) {
			addCriterion("SEND_USER =", value, "sendUser");
			return (Criteria) this;
		}

		public Criteria andSendUserNotEqualTo(String value) {
			addCriterion("SEND_USER <>", value, "sendUser");
			return (Criteria) this;
		}

		public Criteria andSendUserGreaterThan(String value) {
			addCriterion("SEND_USER >", value, "sendUser");
			return (Criteria) this;
		}

		public Criteria andSendUserGreaterThanOrEqualTo(String value) {
			addCriterion("SEND_USER >=", value, "sendUser");
			return (Criteria) this;
		}

		public Criteria andSendUserLessThan(String value) {
			addCriterion("SEND_USER <", value, "sendUser");
			return (Criteria) this;
		}

		public Criteria andSendUserLessThanOrEqualTo(String value) {
			addCriterion("SEND_USER <=", value, "sendUser");
			return (Criteria) this;
		}

		public Criteria andSendUserLike(String value) {
			addCriterion("SEND_USER like", value, "sendUser");
			return (Criteria) this;
		}

		public Criteria andSendUserNotLike(String value) {
			addCriterion("SEND_USER not like", value, "sendUser");
			return (Criteria) this;
		}

		public Criteria andSendUserIn(List<String> values) {
			addCriterion("SEND_USER in", values, "sendUser");
			return (Criteria) this;
		}

		public Criteria andSendUserNotIn(List<String> values) {
			addCriterion("SEND_USER not in", values, "sendUser");
			return (Criteria) this;
		}

		public Criteria andSendUserBetween(String value1, String value2) {
			addCriterion("SEND_USER between", value1, value2, "sendUser");
			return (Criteria) this;
		}

		public Criteria andSendUserNotBetween(String value1, String value2) {
			addCriterion("SEND_USER not between", value1, value2, "sendUser");
			return (Criteria) this;
		}

		public Criteria andSendTimeIsNull() {
			addCriterion("SEND_TIME is null");
			return (Criteria) this;
		}

		public Criteria andSendTimeIsNotNull() {
			addCriterion("SEND_TIME is not null");
			return (Criteria) this;
		}

		public Criteria andSendTimeEqualTo(Date value) {
			addCriterionForJDBCDate("SEND_TIME =", value, "sendTime");
			return (Criteria) this;
		}

		public Criteria andSendTimeNotEqualTo(Date value) {
			addCriterionForJDBCDate("SEND_TIME <>", value, "sendTime");
			return (Criteria) this;
		}

		public Criteria andSendTimeGreaterThan(Date value) {
			addCriterionForJDBCDate("SEND_TIME >", value, "sendTime");
			return (Criteria) this;
		}

		public Criteria andSendTimeGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("SEND_TIME >=", value, "sendTime");
			return (Criteria) this;
		}

		public Criteria andSendTimeLessThan(Date value) {
			addCriterionForJDBCDate("SEND_TIME <", value, "sendTime");
			return (Criteria) this;
		}

		public Criteria andSendTimeLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("SEND_TIME <=", value, "sendTime");
			return (Criteria) this;
		}

		public Criteria andSendTimeIn(List<Date> values) {
			addCriterionForJDBCDate("SEND_TIME in", values, "sendTime");
			return (Criteria) this;
		}

		public Criteria andSendTimeNotIn(List<Date> values) {
			addCriterionForJDBCDate("SEND_TIME not in", values, "sendTime");
			return (Criteria) this;
		}

		public Criteria andSendTimeBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("SEND_TIME between", value1, value2,
					"sendTime");
			return (Criteria) this;
		}

		public Criteria andSendTimeNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("SEND_TIME not between", value1, value2,
					"sendTime");
			return (Criteria) this;
		}

		public Criteria andFlagIsNull() {
			addCriterion("FLAG is null");
			return (Criteria) this;
		}

		public Criteria andFlagIsNotNull() {
			addCriterion("FLAG is not null");
			return (Criteria) this;
		}

		public Criteria andFlagEqualTo(Integer value) {
			addCriterion("FLAG =", value, "flag");
			return (Criteria) this;
		}

		public Criteria andFlagNotEqualTo(Integer value) {
			addCriterion("FLAG <>", value, "flag");
			return (Criteria) this;
		}

		public Criteria andFlagGreaterThan(Integer value) {
			addCriterion("FLAG >", value, "flag");
			return (Criteria) this;
		}

		public Criteria andFlagGreaterThanOrEqualTo(Integer value) {
			addCriterion("FLAG >=", value, "flag");
			return (Criteria) this;
		}

		public Criteria andFlagLessThan(Integer value) {
			addCriterion("FLAG <", value, "flag");
			return (Criteria) this;
		}

		public Criteria andFlagLessThanOrEqualTo(Integer value) {
			addCriterion("FLAG <=", value, "flag");
			return (Criteria) this;
		}

		public Criteria andFlagIn(List<Integer> values) {
			addCriterion("FLAG in", values, "flag");
			return (Criteria) this;
		}

		public Criteria andFlagNotIn(List<Integer> values) {
			addCriterion("FLAG not in", values, "flag");
			return (Criteria) this;
		}

		public Criteria andFlagBetween(Integer value1, Integer value2) {
			addCriterion("FLAG between", value1, value2, "flag");
			return (Criteria) this;
		}

		public Criteria andFlagNotBetween(Integer value1, Integer value2) {
			addCriterion("FLAG not between", value1, value2, "flag");
			return (Criteria) this;
		}

		public Criteria andTypeIsNull() {
			addCriterion("TYPE is null");
			return (Criteria) this;
		}

		public Criteria andTypeIsNotNull() {
			addCriterion("TYPE is not null");
			return (Criteria) this;
		}

		public Criteria andTypeEqualTo(Integer value) {
			addCriterion("TYPE =", value, "type");
			return (Criteria) this;
		}

		public Criteria andTypeNotEqualTo(Integer value) {
			addCriterion("TYPE <>", value, "type");
			return (Criteria) this;
		}

		public Criteria andTypeGreaterThan(Integer value) {
			addCriterion("TYPE >", value, "type");
			return (Criteria) this;
		}

		public Criteria andTypeGreaterThanOrEqualTo(Integer value) {
			addCriterion("TYPE >=", value, "type");
			return (Criteria) this;
		}

		public Criteria andTypeLessThan(Integer value) {
			addCriterion("TYPE <", value, "type");
			return (Criteria) this;
		}

		public Criteria andTypeLessThanOrEqualTo(Integer value) {
			addCriterion("TYPE <=", value, "type");
			return (Criteria) this;
		}

		public Criteria andTypeIn(List<Integer> values) {
			addCriterion("TYPE in", values, "type");
			return (Criteria) this;
		}

		public Criteria andTypeNotIn(List<Integer> values) {
			addCriterion("TYPE not in", values, "type");
			return (Criteria) this;
		}

		public Criteria andTypeBetween(Integer value1, Integer value2) {
			addCriterion("TYPE between", value1, value2, "type");
			return (Criteria) this;
		}

		public Criteria andTypeNotBetween(Integer value1, Integer value2) {
			addCriterion("TYPE not between", value1, value2, "type");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table LF_MAIL_SEND_INFO
	 * @mbggenerated  Tue Jan 29 10:43:17 CST 2013
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table LF_MAIL_SEND_INFO
     *
     * @mbggenerated do_not_delete_during_merge Fri Jan 25 11:16:15 CST 2013
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}