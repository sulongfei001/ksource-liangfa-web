package com.ksource.liangfa.domain;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

public class FormFieldExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table FORM_FIELD
	 * @mbggenerated  Mon May 09 18:15:35 CST 2011
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table FORM_FIELD
	 * @mbggenerated  Mon May 09 18:15:35 CST 2011
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table FORM_FIELD
	 * @mbggenerated  Mon May 09 18:15:35 CST 2011
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table FORM_FIELD
	 * @mbggenerated  Mon May 09 18:15:35 CST 2011
	 */
	public FormFieldExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table FORM_FIELD
	 * @mbggenerated  Mon May 09 18:15:35 CST 2011
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table FORM_FIELD
	 * @mbggenerated  Mon May 09 18:15:35 CST 2011
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table FORM_FIELD
	 * @mbggenerated  Mon May 09 18:15:35 CST 2011
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table FORM_FIELD
	 * @mbggenerated  Mon May 09 18:15:35 CST 2011
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table FORM_FIELD
	 * @mbggenerated  Mon May 09 18:15:35 CST 2011
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table FORM_FIELD
	 * @mbggenerated  Mon May 09 18:15:35 CST 2011
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table FORM_FIELD
	 * @mbggenerated  Mon May 09 18:15:35 CST 2011
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table FORM_FIELD
	 * @mbggenerated  Mon May 09 18:15:35 CST 2011
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table FORM_FIELD
	 * @mbggenerated  Mon May 09 18:15:35 CST 2011
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table FORM_FIELD
	 * @mbggenerated  Mon May 09 18:15:35 CST 2011
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table FORM_FIELD
	 * @mbggenerated  Mon May 09 18:15:35 CST 2011
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andFieldIdIsNull() {
			addCriterion("FIELD_ID is null");
			return (Criteria) this;
		}

		public Criteria andFieldIdIsNotNull() {
			addCriterion("FIELD_ID is not null");
			return (Criteria) this;
		}

		public Criteria andFieldIdEqualTo(Integer value) {
			addCriterion("FIELD_ID =", value, "fieldId");
			return (Criteria) this;
		}

		public Criteria andFieldIdNotEqualTo(Integer value) {
			addCriterion("FIELD_ID <>", value, "fieldId");
			return (Criteria) this;
		}

		public Criteria andFieldIdGreaterThan(Integer value) {
			addCriterion("FIELD_ID >", value, "fieldId");
			return (Criteria) this;
		}

		public Criteria andFieldIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("FIELD_ID >=", value, "fieldId");
			return (Criteria) this;
		}

		public Criteria andFieldIdLessThan(Integer value) {
			addCriterion("FIELD_ID <", value, "fieldId");
			return (Criteria) this;
		}

		public Criteria andFieldIdLessThanOrEqualTo(Integer value) {
			addCriterion("FIELD_ID <=", value, "fieldId");
			return (Criteria) this;
		}

		public Criteria andFieldIdIn(List<Integer> values) {
			addCriterion("FIELD_ID in", values, "fieldId");
			return (Criteria) this;
		}

		public Criteria andFieldIdNotIn(List<Integer> values) {
			addCriterion("FIELD_ID not in", values, "fieldId");
			return (Criteria) this;
		}

		public Criteria andFieldIdBetween(Integer value1, Integer value2) {
			addCriterion("FIELD_ID between", value1, value2, "fieldId");
			return (Criteria) this;
		}

		public Criteria andFieldIdNotBetween(Integer value1, Integer value2) {
			addCriterion("FIELD_ID not between", value1, value2, "fieldId");
			return (Criteria) this;
		}

		public Criteria andFormDefIdIsNull() {
			addCriterion("FORM_DEF_ID is null");
			return (Criteria) this;
		}

		public Criteria andFormDefIdIsNotNull() {
			addCriterion("FORM_DEF_ID is not null");
			return (Criteria) this;
		}

		public Criteria andFormDefIdEqualTo(Integer value) {
			addCriterion("FORM_DEF_ID =", value, "formDefId");
			return (Criteria) this;
		}

		public Criteria andFormDefIdNotEqualTo(Integer value) {
			addCriterion("FORM_DEF_ID <>", value, "formDefId");
			return (Criteria) this;
		}

		public Criteria andFormDefIdGreaterThan(Integer value) {
			addCriterion("FORM_DEF_ID >", value, "formDefId");
			return (Criteria) this;
		}

		public Criteria andFormDefIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("FORM_DEF_ID >=", value, "formDefId");
			return (Criteria) this;
		}

		public Criteria andFormDefIdLessThan(Integer value) {
			addCriterion("FORM_DEF_ID <", value, "formDefId");
			return (Criteria) this;
		}

		public Criteria andFormDefIdLessThanOrEqualTo(Integer value) {
			addCriterion("FORM_DEF_ID <=", value, "formDefId");
			return (Criteria) this;
		}

		public Criteria andFormDefIdIn(List<Integer> values) {
			addCriterion("FORM_DEF_ID in", values, "formDefId");
			return (Criteria) this;
		}

		public Criteria andFormDefIdNotIn(List<Integer> values) {
			addCriterion("FORM_DEF_ID not in", values, "formDefId");
			return (Criteria) this;
		}

		public Criteria andFormDefIdBetween(Integer value1, Integer value2) {
			addCriterion("FORM_DEF_ID between", value1, value2, "formDefId");
			return (Criteria) this;
		}

		public Criteria andFormDefIdNotBetween(Integer value1, Integer value2) {
			addCriterion("FORM_DEF_ID not between", value1, value2, "formDefId");
			return (Criteria) this;
		}

		public Criteria andLabelIsNull() {
			addCriterion("LABEL is null");
			return (Criteria) this;
		}

		public Criteria andLabelIsNotNull() {
			addCriterion("LABEL is not null");
			return (Criteria) this;
		}

		public Criteria andLabelEqualTo(String value) {
			addCriterion("LABEL =", value, "label");
			return (Criteria) this;
		}

		public Criteria andLabelNotEqualTo(String value) {
			addCriterion("LABEL <>", value, "label");
			return (Criteria) this;
		}

		public Criteria andLabelGreaterThan(String value) {
			addCriterion("LABEL >", value, "label");
			return (Criteria) this;
		}

		public Criteria andLabelGreaterThanOrEqualTo(String value) {
			addCriterion("LABEL >=", value, "label");
			return (Criteria) this;
		}

		public Criteria andLabelLessThan(String value) {
			addCriterion("LABEL <", value, "label");
			return (Criteria) this;
		}

		public Criteria andLabelLessThanOrEqualTo(String value) {
			addCriterion("LABEL <=", value, "label");
			return (Criteria) this;
		}

		public Criteria andLabelLike(String value) {
			addCriterion("LABEL like", value, "label");
			return (Criteria) this;
		}

		public Criteria andLabelNotLike(String value) {
			addCriterion("LABEL not like", value, "label");
			return (Criteria) this;
		}

		public Criteria andLabelIn(List<String> values) {
			addCriterion("LABEL in", values, "label");
			return (Criteria) this;
		}

		public Criteria andLabelNotIn(List<String> values) {
			addCriterion("LABEL not in", values, "label");
			return (Criteria) this;
		}

		public Criteria andLabelBetween(String value1, String value2) {
			addCriterion("LABEL between", value1, value2, "label");
			return (Criteria) this;
		}

		public Criteria andLabelNotBetween(String value1, String value2) {
			addCriterion("LABEL not between", value1, value2, "label");
			return (Criteria) this;
		}

		public Criteria andInputTypeIsNull() {
			addCriterion("INPUT_TYPE is null");
			return (Criteria) this;
		}

		public Criteria andInputTypeIsNotNull() {
			addCriterion("INPUT_TYPE is not null");
			return (Criteria) this;
		}

		public Criteria andInputTypeEqualTo(Integer value) {
			addCriterion("INPUT_TYPE =", value, "inputType");
			return (Criteria) this;
		}

		public Criteria andInputTypeNotEqualTo(Integer value) {
			addCriterion("INPUT_TYPE <>", value, "inputType");
			return (Criteria) this;
		}

		public Criteria andInputTypeGreaterThan(Integer value) {
			addCriterion("INPUT_TYPE >", value, "inputType");
			return (Criteria) this;
		}

		public Criteria andInputTypeGreaterThanOrEqualTo(Integer value) {
			addCriterion("INPUT_TYPE >=", value, "inputType");
			return (Criteria) this;
		}

		public Criteria andInputTypeLessThan(Integer value) {
			addCriterion("INPUT_TYPE <", value, "inputType");
			return (Criteria) this;
		}

		public Criteria andInputTypeLessThanOrEqualTo(Integer value) {
			addCriterion("INPUT_TYPE <=", value, "inputType");
			return (Criteria) this;
		}

		public Criteria andInputTypeIn(List<Integer> values) {
			addCriterion("INPUT_TYPE in", values, "inputType");
			return (Criteria) this;
		}

		public Criteria andInputTypeNotIn(List<Integer> values) {
			addCriterion("INPUT_TYPE not in", values, "inputType");
			return (Criteria) this;
		}

		public Criteria andInputTypeBetween(Integer value1, Integer value2) {
			addCriterion("INPUT_TYPE between", value1, value2, "inputType");
			return (Criteria) this;
		}

		public Criteria andInputTypeNotBetween(Integer value1, Integer value2) {
			addCriterion("INPUT_TYPE not between", value1, value2, "inputType");
			return (Criteria) this;
		}

		public Criteria andDataTypeIsNull() {
			addCriterion("DATA_TYPE is null");
			return (Criteria) this;
		}

		public Criteria andDataTypeIsNotNull() {
			addCriterion("DATA_TYPE is not null");
			return (Criteria) this;
		}

		public Criteria andDataTypeEqualTo(Integer value) {
			addCriterion("DATA_TYPE =", value, "dataType");
			return (Criteria) this;
		}

		public Criteria andDataTypeNotEqualTo(Integer value) {
			addCriterion("DATA_TYPE <>", value, "dataType");
			return (Criteria) this;
		}

		public Criteria andDataTypeGreaterThan(Integer value) {
			addCriterion("DATA_TYPE >", value, "dataType");
			return (Criteria) this;
		}

		public Criteria andDataTypeGreaterThanOrEqualTo(Integer value) {
			addCriterion("DATA_TYPE >=", value, "dataType");
			return (Criteria) this;
		}

		public Criteria andDataTypeLessThan(Integer value) {
			addCriterion("DATA_TYPE <", value, "dataType");
			return (Criteria) this;
		}

		public Criteria andDataTypeLessThanOrEqualTo(Integer value) {
			addCriterion("DATA_TYPE <=", value, "dataType");
			return (Criteria) this;
		}

		public Criteria andDataTypeIn(List<Integer> values) {
			addCriterion("DATA_TYPE in", values, "dataType");
			return (Criteria) this;
		}

		public Criteria andDataTypeNotIn(List<Integer> values) {
			addCriterion("DATA_TYPE not in", values, "dataType");
			return (Criteria) this;
		}

		public Criteria andDataTypeBetween(Integer value1, Integer value2) {
			addCriterion("DATA_TYPE between", value1, value2, "dataType");
			return (Criteria) this;
		}

		public Criteria andDataTypeNotBetween(Integer value1, Integer value2) {
			addCriterion("DATA_TYPE not between", value1, value2, "dataType");
			return (Criteria) this;
		}

		public Criteria andFormatIsNull() {
			addCriterion("FORMAT is null");
			return (Criteria) this;
		}

		public Criteria andFormatIsNotNull() {
			addCriterion("FORMAT is not null");
			return (Criteria) this;
		}

		public Criteria andFormatEqualTo(String value) {
			addCriterion("FORMAT =", value, "format");
			return (Criteria) this;
		}

		public Criteria andFormatNotEqualTo(String value) {
			addCriterion("FORMAT <>", value, "format");
			return (Criteria) this;
		}

		public Criteria andFormatGreaterThan(String value) {
			addCriterion("FORMAT >", value, "format");
			return (Criteria) this;
		}

		public Criteria andFormatGreaterThanOrEqualTo(String value) {
			addCriterion("FORMAT >=", value, "format");
			return (Criteria) this;
		}

		public Criteria andFormatLessThan(String value) {
			addCriterion("FORMAT <", value, "format");
			return (Criteria) this;
		}

		public Criteria andFormatLessThanOrEqualTo(String value) {
			addCriterion("FORMAT <=", value, "format");
			return (Criteria) this;
		}

		public Criteria andFormatLike(String value) {
			addCriterion("FORMAT like", value, "format");
			return (Criteria) this;
		}

		public Criteria andFormatNotLike(String value) {
			addCriterion("FORMAT not like", value, "format");
			return (Criteria) this;
		}

		public Criteria andFormatIn(List<String> values) {
			addCriterion("FORMAT in", values, "format");
			return (Criteria) this;
		}

		public Criteria andFormatNotIn(List<String> values) {
			addCriterion("FORMAT not in", values, "format");
			return (Criteria) this;
		}

		public Criteria andFormatBetween(String value1, String value2) {
			addCriterion("FORMAT between", value1, value2, "format");
			return (Criteria) this;
		}

		public Criteria andFormatNotBetween(String value1, String value2) {
			addCriterion("FORMAT not between", value1, value2, "format");
			return (Criteria) this;
		}

		public Criteria andProcVarNameIsNull() {
			addCriterion("PROC_VAR_NAME is null");
			return (Criteria) this;
		}

		public Criteria andProcVarNameIsNotNull() {
			addCriterion("PROC_VAR_NAME is not null");
			return (Criteria) this;
		}

		public Criteria andProcVarNameEqualTo(String value) {
			addCriterion("PROC_VAR_NAME =", value, "procVarName");
			return (Criteria) this;
		}

		public Criteria andProcVarNameNotEqualTo(String value) {
			addCriterion("PROC_VAR_NAME <>", value, "procVarName");
			return (Criteria) this;
		}

		public Criteria andProcVarNameGreaterThan(String value) {
			addCriterion("PROC_VAR_NAME >", value, "procVarName");
			return (Criteria) this;
		}

		public Criteria andProcVarNameGreaterThanOrEqualTo(String value) {
			addCriterion("PROC_VAR_NAME >=", value, "procVarName");
			return (Criteria) this;
		}

		public Criteria andProcVarNameLessThan(String value) {
			addCriterion("PROC_VAR_NAME <", value, "procVarName");
			return (Criteria) this;
		}

		public Criteria andProcVarNameLessThanOrEqualTo(String value) {
			addCriterion("PROC_VAR_NAME <=", value, "procVarName");
			return (Criteria) this;
		}

		public Criteria andProcVarNameLike(String value) {
			addCriterion("PROC_VAR_NAME like", value, "procVarName");
			return (Criteria) this;
		}

		public Criteria andProcVarNameNotLike(String value) {
			addCriterion("PROC_VAR_NAME not like", value, "procVarName");
			return (Criteria) this;
		}

		public Criteria andProcVarNameIn(List<String> values) {
			addCriterion("PROC_VAR_NAME in", values, "procVarName");
			return (Criteria) this;
		}

		public Criteria andProcVarNameNotIn(List<String> values) {
			addCriterion("PROC_VAR_NAME not in", values, "procVarName");
			return (Criteria) this;
		}

		public Criteria andProcVarNameBetween(String value1, String value2) {
			addCriterion("PROC_VAR_NAME between", value1, value2, "procVarName");
			return (Criteria) this;
		}

		public Criteria andProcVarNameNotBetween(String value1, String value2) {
			addCriterion("PROC_VAR_NAME not between", value1, value2,
					"procVarName");
			return (Criteria) this;
		}

		public Criteria andRequiredIsNull() {
			addCriterion("REQUIRED is null");
			return (Criteria) this;
		}

		public Criteria andRequiredIsNotNull() {
			addCriterion("REQUIRED is not null");
			return (Criteria) this;
		}

		public Criteria andRequiredEqualTo(Integer value) {
			addCriterion("REQUIRED =", value, "required");
			return (Criteria) this;
		}

		public Criteria andRequiredNotEqualTo(Integer value) {
			addCriterion("REQUIRED <>", value, "required");
			return (Criteria) this;
		}

		public Criteria andRequiredGreaterThan(Integer value) {
			addCriterion("REQUIRED >", value, "required");
			return (Criteria) this;
		}

		public Criteria andRequiredGreaterThanOrEqualTo(Integer value) {
			addCriterion("REQUIRED >=", value, "required");
			return (Criteria) this;
		}

		public Criteria andRequiredLessThan(Integer value) {
			addCriterion("REQUIRED <", value, "required");
			return (Criteria) this;
		}

		public Criteria andRequiredLessThanOrEqualTo(Integer value) {
			addCriterion("REQUIRED <=", value, "required");
			return (Criteria) this;
		}

		public Criteria andRequiredIn(List<Integer> values) {
			addCriterion("REQUIRED in", values, "required");
			return (Criteria) this;
		}

		public Criteria andRequiredNotIn(List<Integer> values) {
			addCriterion("REQUIRED not in", values, "required");
			return (Criteria) this;
		}

		public Criteria andRequiredBetween(Integer value1, Integer value2) {
			addCriterion("REQUIRED between", value1, value2, "required");
			return (Criteria) this;
		}

		public Criteria andRequiredNotBetween(Integer value1, Integer value2) {
			addCriterion("REQUIRED not between", value1, value2, "required");
			return (Criteria) this;
		}

		public Criteria andMaxIsNull() {
			addCriterion("MAX is null");
			return (Criteria) this;
		}

		public Criteria andMaxIsNotNull() {
			addCriterion("MAX is not null");
			return (Criteria) this;
		}

		public Criteria andMaxEqualTo(BigDecimal value) {
			addCriterion("MAX =", value, "max");
			return (Criteria) this;
		}

		public Criteria andMaxNotEqualTo(BigDecimal value) {
			addCriterion("MAX <>", value, "max");
			return (Criteria) this;
		}

		public Criteria andMaxGreaterThan(BigDecimal value) {
			addCriterion("MAX >", value, "max");
			return (Criteria) this;
		}

		public Criteria andMaxGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("MAX >=", value, "max");
			return (Criteria) this;
		}

		public Criteria andMaxLessThan(BigDecimal value) {
			addCriterion("MAX <", value, "max");
			return (Criteria) this;
		}

		public Criteria andMaxLessThanOrEqualTo(BigDecimal value) {
			addCriterion("MAX <=", value, "max");
			return (Criteria) this;
		}

		public Criteria andMaxIn(List<BigDecimal> values) {
			addCriterion("MAX in", values, "max");
			return (Criteria) this;
		}

		public Criteria andMaxNotIn(List<BigDecimal> values) {
			addCriterion("MAX not in", values, "max");
			return (Criteria) this;
		}

		public Criteria andMaxBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("MAX between", value1, value2, "max");
			return (Criteria) this;
		}

		public Criteria andMaxNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("MAX not between", value1, value2, "max");
			return (Criteria) this;
		}

		public Criteria andMinIsNull() {
			addCriterion("MIN is null");
			return (Criteria) this;
		}

		public Criteria andMinIsNotNull() {
			addCriterion("MIN is not null");
			return (Criteria) this;
		}

		public Criteria andMinEqualTo(BigDecimal value) {
			addCriterion("MIN =", value, "min");
			return (Criteria) this;
		}

		public Criteria andMinNotEqualTo(BigDecimal value) {
			addCriterion("MIN <>", value, "min");
			return (Criteria) this;
		}

		public Criteria andMinGreaterThan(BigDecimal value) {
			addCriterion("MIN >", value, "min");
			return (Criteria) this;
		}

		public Criteria andMinGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("MIN >=", value, "min");
			return (Criteria) this;
		}

		public Criteria andMinLessThan(BigDecimal value) {
			addCriterion("MIN <", value, "min");
			return (Criteria) this;
		}

		public Criteria andMinLessThanOrEqualTo(BigDecimal value) {
			addCriterion("MIN <=", value, "min");
			return (Criteria) this;
		}

		public Criteria andMinIn(List<BigDecimal> values) {
			addCriterion("MIN in", values, "min");
			return (Criteria) this;
		}

		public Criteria andMinNotIn(List<BigDecimal> values) {
			addCriterion("MIN not in", values, "min");
			return (Criteria) this;
		}

		public Criteria andMinBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("MIN between", value1, value2, "min");
			return (Criteria) this;
		}

		public Criteria andMinNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("MIN not between", value1, value2, "min");
			return (Criteria) this;
		}

		public Criteria andPositionIndexIsNull() {
			addCriterion("POSITION_INDEX is null");
			return (Criteria) this;
		}

		public Criteria andPositionIndexIsNotNull() {
			addCriterion("POSITION_INDEX is not null");
			return (Criteria) this;
		}

		public Criteria andPositionIndexEqualTo(Integer value) {
			addCriterion("POSITION_INDEX =", value, "positionIndex");
			return (Criteria) this;
		}

		public Criteria andPositionIndexNotEqualTo(Integer value) {
			addCriterion("POSITION_INDEX <>", value, "positionIndex");
			return (Criteria) this;
		}

		public Criteria andPositionIndexGreaterThan(Integer value) {
			addCriterion("POSITION_INDEX >", value, "positionIndex");
			return (Criteria) this;
		}

		public Criteria andPositionIndexGreaterThanOrEqualTo(Integer value) {
			addCriterion("POSITION_INDEX >=", value, "positionIndex");
			return (Criteria) this;
		}

		public Criteria andPositionIndexLessThan(Integer value) {
			addCriterion("POSITION_INDEX <", value, "positionIndex");
			return (Criteria) this;
		}

		public Criteria andPositionIndexLessThanOrEqualTo(Integer value) {
			addCriterion("POSITION_INDEX <=", value, "positionIndex");
			return (Criteria) this;
		}

		public Criteria andPositionIndexIn(List<Integer> values) {
			addCriterion("POSITION_INDEX in", values, "positionIndex");
			return (Criteria) this;
		}

		public Criteria andPositionIndexNotIn(List<Integer> values) {
			addCriterion("POSITION_INDEX not in", values, "positionIndex");
			return (Criteria) this;
		}

		public Criteria andPositionIndexBetween(Integer value1, Integer value2) {
			addCriterion("POSITION_INDEX between", value1, value2,
					"positionIndex");
			return (Criteria) this;
		}

		public Criteria andPositionIndexNotBetween(Integer value1,
				Integer value2) {
			addCriterion("POSITION_INDEX not between", value1, value2,
					"positionIndex");
			return (Criteria) this;
		}

		public Criteria andPositionXIsNull() {
			addCriterion("POSITION_X is null");
			return (Criteria) this;
		}

		public Criteria andPositionXIsNotNull() {
			addCriterion("POSITION_X is not null");
			return (Criteria) this;
		}

		public Criteria andPositionXEqualTo(BigDecimal value) {
			addCriterion("POSITION_X =", value, "positionX");
			return (Criteria) this;
		}

		public Criteria andPositionXNotEqualTo(BigDecimal value) {
			addCriterion("POSITION_X <>", value, "positionX");
			return (Criteria) this;
		}

		public Criteria andPositionXGreaterThan(BigDecimal value) {
			addCriterion("POSITION_X >", value, "positionX");
			return (Criteria) this;
		}

		public Criteria andPositionXGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("POSITION_X >=", value, "positionX");
			return (Criteria) this;
		}

		public Criteria andPositionXLessThan(BigDecimal value) {
			addCriterion("POSITION_X <", value, "positionX");
			return (Criteria) this;
		}

		public Criteria andPositionXLessThanOrEqualTo(BigDecimal value) {
			addCriterion("POSITION_X <=", value, "positionX");
			return (Criteria) this;
		}

		public Criteria andPositionXIn(List<BigDecimal> values) {
			addCriterion("POSITION_X in", values, "positionX");
			return (Criteria) this;
		}

		public Criteria andPositionXNotIn(List<BigDecimal> values) {
			addCriterion("POSITION_X not in", values, "positionX");
			return (Criteria) this;
		}

		public Criteria andPositionXBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("POSITION_X between", value1, value2, "positionX");
			return (Criteria) this;
		}

		public Criteria andPositionXNotBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("POSITION_X not between", value1, value2, "positionX");
			return (Criteria) this;
		}

		public Criteria andPositionYIsNull() {
			addCriterion("POSITION_Y is null");
			return (Criteria) this;
		}

		public Criteria andPositionYIsNotNull() {
			addCriterion("POSITION_Y is not null");
			return (Criteria) this;
		}

		public Criteria andPositionYEqualTo(BigDecimal value) {
			addCriterion("POSITION_Y =", value, "positionY");
			return (Criteria) this;
		}

		public Criteria andPositionYNotEqualTo(BigDecimal value) {
			addCriterion("POSITION_Y <>", value, "positionY");
			return (Criteria) this;
		}

		public Criteria andPositionYGreaterThan(BigDecimal value) {
			addCriterion("POSITION_Y >", value, "positionY");
			return (Criteria) this;
		}

		public Criteria andPositionYGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("POSITION_Y >=", value, "positionY");
			return (Criteria) this;
		}

		public Criteria andPositionYLessThan(BigDecimal value) {
			addCriterion("POSITION_Y <", value, "positionY");
			return (Criteria) this;
		}

		public Criteria andPositionYLessThanOrEqualTo(BigDecimal value) {
			addCriterion("POSITION_Y <=", value, "positionY");
			return (Criteria) this;
		}

		public Criteria andPositionYIn(List<BigDecimal> values) {
			addCriterion("POSITION_Y in", values, "positionY");
			return (Criteria) this;
		}

		public Criteria andPositionYNotIn(List<BigDecimal> values) {
			addCriterion("POSITION_Y not in", values, "positionY");
			return (Criteria) this;
		}

		public Criteria andPositionYBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("POSITION_Y between", value1, value2, "positionY");
			return (Criteria) this;
		}

		public Criteria andPositionYNotBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("POSITION_Y not between", value1, value2, "positionY");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table FORM_FIELD
	 * @mbggenerated  Mon May 09 18:15:35 CST 2011
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table FORM_FIELD
     *
     * @mbggenerated do_not_delete_during_merge Fri May 06 19:54:43 CST 2011
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}