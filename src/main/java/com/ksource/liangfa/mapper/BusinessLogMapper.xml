<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ksource.liangfa.mapper.BusinessLogMapper">
  <resultMap id="BaseResultMap" type="com.ksource.liangfa.domain.BusinessLog">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 24 16:01:55 CST 2012.
    -->
    <id column="ID" jdbcType="DECIMAL" property="id" />
    <result column="OPERATION" jdbcType="VARCHAR" property="operation" />
    <result column="BUSINESS_OPT_TYPE" jdbcType="DECIMAL" property="businessOptType" />
    <result column="DB_OPT_TYPE" jdbcType="DECIMAL" property="dbOptType" />
    <result column="OPT_TIME" jdbcType="TIMESTAMP" property="optTime" />
    <result column="DOMAIN_CODE" jdbcType="VARCHAR" property="domainCode" />
    <result column="DOMAIN_NAME" jdbcType="VARCHAR" property="domainName" />
    <result column="DOMAIN_CLASS" jdbcType="VARCHAR" property="domainClass" />
    <result column="SUCCEED" jdbcType="DECIMAL" property="succeed" />
    <result column="USER_ID" jdbcType="VARCHAR" property="userId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.ksource.liangfa.domain.BusinessLogWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 24 16:01:55 CST 2012.
    -->
    <result column="DOMAIN1" jdbcType="CLOB" property="domain1" />
    <result column="DOMAIN2" jdbcType="CLOB" property="domain2" />
    <result column="RESULT_DESC" jdbcType="CLOB" property="resultDesc" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 24 16:01:55 CST 2012.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 24 16:01:55 CST 2012.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 24 16:01:55 CST 2012.
    -->
    ID, OPERATION, BUSINESS_OPT_TYPE, DB_OPT_TYPE, OPT_TIME, DOMAIN_CODE, DOMAIN_NAME, 
    DOMAIN_CLASS, SUCCEED, USER_ID
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 24 16:01:55 CST 2012.
    -->
    DOMAIN1, DOMAIN2, RESULT_DESC
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.ksource.liangfa.domain.BusinessLogExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 24 16:01:55 CST 2012.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from BUSINESS_LOG
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.ksource.liangfa.domain.BusinessLogExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 24 16:01:55 CST 2012.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from BUSINESS_LOG
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="Integer" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 24 16:01:55 CST 2012.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from BUSINESS_LOG
    where ID = #{id,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 24 16:01:55 CST 2012.
    -->
    delete from BUSINESS_LOG
    where ID = #{id,jdbcType=DECIMAL}
  </delete>
  <delete id="deleteByExample" parameterType="com.ksource.liangfa.domain.BusinessLogExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 24 16:01:55 CST 2012.
    -->
    delete from BUSINESS_LOG
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ksource.liangfa.domain.BusinessLogWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 24 16:01:55 CST 2012.
    -->
    insert into BUSINESS_LOG (ID, OPERATION, BUSINESS_OPT_TYPE, 
      DB_OPT_TYPE, OPT_TIME, DOMAIN_CODE, 
      DOMAIN_NAME, DOMAIN_CLASS, SUCCEED, 
      USER_ID, DOMAIN1, DOMAIN2, 
      RESULT_DESC)
    values (#{id,jdbcType=DECIMAL}, #{operation,jdbcType=VARCHAR}, #{businessOptType,jdbcType=DECIMAL}, 
      #{dbOptType,jdbcType=DECIMAL}, #{optTime,jdbcType=TIMESTAMP}, #{domainCode,jdbcType=VARCHAR}, 
      #{domainName,jdbcType=VARCHAR}, #{domainClass,jdbcType=VARCHAR}, #{succeed,jdbcType=DECIMAL}, 
      #{userId,jdbcType=VARCHAR}, #{domain1,jdbcType=CLOB}, #{domain2,jdbcType=CLOB}, 
      #{resultDesc,jdbcType=CLOB})
  </insert>
  <insert id="insertSelective" parameterType="com.ksource.liangfa.domain.BusinessLogWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 24 16:01:55 CST 2012.
    -->
    insert into BUSINESS_LOG
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="operation != null">
        OPERATION,
      </if>
      <if test="businessOptType != null">
        BUSINESS_OPT_TYPE,
      </if>
      <if test="dbOptType != null">
        DB_OPT_TYPE,
      </if>
      <if test="optTime != null">
        OPT_TIME,
      </if>
      <if test="domainCode != null">
        DOMAIN_CODE,
      </if>
      <if test="domainName != null">
        DOMAIN_NAME,
      </if>
      <if test="domainClass != null">
        DOMAIN_CLASS,
      </if>
      <if test="succeed != null">
        SUCCEED,
      </if>
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="domain1 != null">
        DOMAIN1,
      </if>
      <if test="domain2 != null">
        DOMAIN2,
      </if>
      <if test="resultDesc != null">
        RESULT_DESC,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=DECIMAL},
      </if>
      <if test="operation != null">
        #{operation,jdbcType=VARCHAR},
      </if>
      <if test="businessOptType != null">
        #{businessOptType,jdbcType=DECIMAL},
      </if>
      <if test="dbOptType != null">
        #{dbOptType,jdbcType=DECIMAL},
      </if>
      <if test="optTime != null">
        #{optTime,jdbcType=TIMESTAMP},
      </if>
      <if test="domainCode != null">
        #{domainCode,jdbcType=VARCHAR},
      </if>
      <if test="domainName != null">
        #{domainName,jdbcType=VARCHAR},
      </if>
      <if test="domainClass != null">
        #{domainClass,jdbcType=VARCHAR},
      </if>
      <if test="succeed != null">
        #{succeed,jdbcType=DECIMAL},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="domain1 != null">
        #{domain1,jdbcType=CLOB},
      </if>
      <if test="domain2 != null">
        #{domain2,jdbcType=CLOB},
      </if>
      <if test="resultDesc != null">
        #{resultDesc,jdbcType=CLOB},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ksource.liangfa.domain.BusinessLogExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 24 16:01:55 CST 2012.
    -->
    select count(*) from BUSINESS_LOG
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 24 16:01:55 CST 2012.
    -->
    update BUSINESS_LOG
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=DECIMAL},
      </if>
      <if test="record.operation != null">
        OPERATION = #{record.operation,jdbcType=VARCHAR},
      </if>
      <if test="record.businessOptType != null">
        BUSINESS_OPT_TYPE = #{record.businessOptType,jdbcType=DECIMAL},
      </if>
      <if test="record.dbOptType != null">
        DB_OPT_TYPE = #{record.dbOptType,jdbcType=DECIMAL},
      </if>
      <if test="record.optTime != null">
        OPT_TIME = #{record.optTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.domainCode != null">
        DOMAIN_CODE = #{record.domainCode,jdbcType=VARCHAR},
      </if>
      <if test="record.domainName != null">
        DOMAIN_NAME = #{record.domainName,jdbcType=VARCHAR},
      </if>
      <if test="record.domainClass != null">
        DOMAIN_CLASS = #{record.domainClass,jdbcType=VARCHAR},
      </if>
      <if test="record.succeed != null">
        SUCCEED = #{record.succeed,jdbcType=DECIMAL},
      </if>
      <if test="record.userId != null">
        USER_ID = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.domain1 != null">
        DOMAIN1 = #{record.domain1,jdbcType=CLOB},
      </if>
      <if test="record.domain2 != null">
        DOMAIN2 = #{record.domain2,jdbcType=CLOB},
      </if>
      <if test="record.resultDesc != null">
        RESULT_DESC = #{record.resultDesc,jdbcType=CLOB},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 24 16:01:55 CST 2012.
    -->
    update BUSINESS_LOG
    set ID = #{record.id,jdbcType=DECIMAL},
      OPERATION = #{record.operation,jdbcType=VARCHAR},
      BUSINESS_OPT_TYPE = #{record.businessOptType,jdbcType=DECIMAL},
      DB_OPT_TYPE = #{record.dbOptType,jdbcType=DECIMAL},
      OPT_TIME = #{record.optTime,jdbcType=TIMESTAMP},
      DOMAIN_CODE = #{record.domainCode,jdbcType=VARCHAR},
      DOMAIN_NAME = #{record.domainName,jdbcType=VARCHAR},
      DOMAIN_CLASS = #{record.domainClass,jdbcType=VARCHAR},
      SUCCEED = #{record.succeed,jdbcType=DECIMAL},
      USER_ID = #{record.userId,jdbcType=VARCHAR},
      DOMAIN1 = #{record.domain1,jdbcType=CLOB},
      DOMAIN2 = #{record.domain2,jdbcType=CLOB},
      RESULT_DESC = #{record.resultDesc,jdbcType=CLOB}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 24 16:01:55 CST 2012.
    -->
    update BUSINESS_LOG
    set ID = #{record.id,jdbcType=DECIMAL},
      OPERATION = #{record.operation,jdbcType=VARCHAR},
      BUSINESS_OPT_TYPE = #{record.businessOptType,jdbcType=DECIMAL},
      DB_OPT_TYPE = #{record.dbOptType,jdbcType=DECIMAL},
      OPT_TIME = #{record.optTime,jdbcType=TIMESTAMP},
      DOMAIN_CODE = #{record.domainCode,jdbcType=VARCHAR},
      DOMAIN_NAME = #{record.domainName,jdbcType=VARCHAR},
      DOMAIN_CLASS = #{record.domainClass,jdbcType=VARCHAR},
      SUCCEED = #{record.succeed,jdbcType=DECIMAL},
      USER_ID = #{record.userId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ksource.liangfa.domain.BusinessLogWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 24 16:01:55 CST 2012.
    -->
    update BUSINESS_LOG
    <set>
      <if test="operation != null">
        OPERATION = #{operation,jdbcType=VARCHAR},
      </if>
      <if test="businessOptType != null">
        BUSINESS_OPT_TYPE = #{businessOptType,jdbcType=DECIMAL},
      </if>
      <if test="dbOptType != null">
        DB_OPT_TYPE = #{dbOptType,jdbcType=DECIMAL},
      </if>
      <if test="optTime != null">
        OPT_TIME = #{optTime,jdbcType=TIMESTAMP},
      </if>
      <if test="domainCode != null">
        DOMAIN_CODE = #{domainCode,jdbcType=VARCHAR},
      </if>
      <if test="domainName != null">
        DOMAIN_NAME = #{domainName,jdbcType=VARCHAR},
      </if>
      <if test="domainClass != null">
        DOMAIN_CLASS = #{domainClass,jdbcType=VARCHAR},
      </if>
      <if test="succeed != null">
        SUCCEED = #{succeed,jdbcType=DECIMAL},
      </if>
      <if test="userId != null">
        USER_ID = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="domain1 != null">
        DOMAIN1 = #{domain1,jdbcType=CLOB},
      </if>
      <if test="domain2 != null">
        DOMAIN2 = #{domain2,jdbcType=CLOB},
      </if>
      <if test="resultDesc != null">
        RESULT_DESC = #{resultDesc,jdbcType=CLOB},
      </if>
    </set>
    where ID = #{id,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.ksource.liangfa.domain.BusinessLogWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 24 16:01:55 CST 2012.
    -->
    update BUSINESS_LOG
    set OPERATION = #{operation,jdbcType=VARCHAR},
      BUSINESS_OPT_TYPE = #{businessOptType,jdbcType=DECIMAL},
      DB_OPT_TYPE = #{dbOptType,jdbcType=DECIMAL},
      OPT_TIME = #{optTime,jdbcType=TIMESTAMP},
      DOMAIN_CODE = #{domainCode,jdbcType=VARCHAR},
      DOMAIN_NAME = #{domainName,jdbcType=VARCHAR},
      DOMAIN_CLASS = #{domainClass,jdbcType=VARCHAR},
      SUCCEED = #{succeed,jdbcType=DECIMAL},
      USER_ID = #{userId,jdbcType=VARCHAR},
      DOMAIN1 = #{domain1,jdbcType=CLOB},
      DOMAIN2 = #{domain2,jdbcType=CLOB},
      RESULT_DESC = #{resultDesc,jdbcType=CLOB}
    where ID = #{id,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ksource.liangfa.domain.BusinessLog">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 24 16:01:55 CST 2012.
    -->
    update BUSINESS_LOG
    set OPERATION = #{operation,jdbcType=VARCHAR},
      BUSINESS_OPT_TYPE = #{businessOptType,jdbcType=DECIMAL},
      DB_OPT_TYPE = #{dbOptType,jdbcType=DECIMAL},
      OPT_TIME = #{optTime,jdbcType=TIMESTAMP},
      DOMAIN_CODE = #{domainCode,jdbcType=VARCHAR},
      DOMAIN_NAME = #{domainName,jdbcType=VARCHAR},
      DOMAIN_CLASS = #{domainClass,jdbcType=VARCHAR},
      SUCCEED = #{succeed,jdbcType=DECIMAL},
      USER_ID = #{userId,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=DECIMAL}
  </update>
  
  <!-- ====================================================== -->
  <select id="getOperationType" resultType="string">
  	select OPERATION from BUSINESS_LOG WHERE BUSINESS_OPT_TYPE NOT IN(0,1) group by OPERATION ORDER BY OPERATION
  </select>
  
  <resultMap extends="ResultMapWithBLOBs" id="ResultMapWithBLOBsAndUserName" type="com.ksource.liangfa.domain.BusinessLogWithBLOBs">
  	    <result column="USER_NAME" jdbcType="VARCHAR" property="optUserName" />
  	    <result column="orgName" jdbcType="VARCHAR" property="orgName" />
  </resultMap>
  <sql id="paginationParam">
  <where>
  	1=1
  	<if test="operation!=null">and operation=#{operation}</if>
  	<if test="businessOptType!=null">and BUSINESS_OPT_TYPE =#{businessOptType}</if>
  	<if test="dbOptType!=null">and DB_OPT_TYPE=#{dbOptType}</if>
  	<if test="optTime!=null">
  		and OPT_TIME &gt;=#{optTime}
  		and OPT_TIME &lt;(#{optTime} +   interval   '1'  day)
  	</if>
  	<if test="optStartTime != null">
		<![CDATA[
		 and  OPT_TIME >= #{optStartTime,jdbcType=TIMESTAMP}
		]]>
	</if>
	<if test="optEndTime != null">
		<![CDATA[
			 and OPT_TIME  < (#{optEndTime,jdbcType=TIMESTAMP} +   interval   '1'  day)
		]]>
	</if>
	<if test="orgCode!=null">and U.ORG_ID=#{orgCode}</if>
  </where>
  </sql>
  <select id="getPaginationCount" parameterType="map" resultType="int">
  	select count(*) from BUSINESS_LOG b left join USER_ u on b.user_id=u.user_id
  	<include refid="paginationParam" />
  </select>
  <select id="getPaginationList" parameterType="map" resultMap="ResultMapWithBLOBsAndUserName">
  	select b.*,u.user_name,(SELECT O.ORG_NAME FROM ORGANISE O WHERE O.ORG_CODE = U.ORG_ID) AS orgName
  	 from BUSINESS_LOG b left join USER_ u on b.user_id=u.user_id
  	<include refid="paginationParam" />
  	order by opt_time desc
  </select>
    <delete id="delLog" >
        delete from business_log where opt_time  &lt;add_months(sysdate,-3)
  </delete>
  
  
  <select id="getAuditLogCount" parameterType="map" resultType="int">
	SELECT COUNT(1) FROM BUSINESS_LOG
	 WHERE BUSINESS_OPT_TYPE = 2 AND USER_ID IN
	    (SELECT USER_ID FROM USER_ WHERE USER_ID IN
	            (SELECT USER_ID FROM USERS_ROLES
	              WHERE ROLE_ID IN (SELECT ROLE_ID FROM ROLE_ WHERE ROLE_TYPE IN (1, 2))
	          OR POST_ID IN
	             (SELECT POST_ID FROM POST_ROLE 
	              WHERE ROLE_ID IN (SELECT ROLE_ID FROM ROLE_ WHERE ROLE_TYPE IN (1, 2))))
	       <if test="optUserName!=null">and user_name like concat(concat('%',#{optUserName}),'%')</if>
	       <if test="orgCode!=null">and ORG_ID=#{orgCode}</if>
	       )
	<if test="operation!=null">and operation=#{operation}</if>
  	<if test="businessOptType!=null">and BUSINESS_OPT_TYPE =#{businessOptType}</if>
  	<if test="dbOptType!=null">and DB_OPT_TYPE=#{dbOptType}</if>
  	<if test="optTime!=null">
  		and OPT_TIME &gt;=#{optTime}
  		and OPT_TIME &lt;(#{optTime} +   interval   '1'  day)
  	</if>
  	<if test="optStartTime != null">
		<![CDATA[
		 and  OPT_TIME >= #{optStartTime,jdbcType=TIMESTAMP}
		]]>
	</if>
	<if test="optEndTime != null">
		<![CDATA[
			 and OPT_TIME  < (#{optEndTime,jdbcType=TIMESTAMP} +   interval   '1'  day)
		]]>
	</if>
  </select>
   <select id="getAuditLogList" parameterType="map" resultMap="ResultMapWithBLOBsAndUserName">
  	SELECT ID, OPERATION, BUSINESS_OPT_TYPE, DB_OPT_TYPE, OPT_TIME,DOMAIN_CODE, 
  		   DOMAIN_NAME, DOMAIN_CLASS, SUCCEED, L.USER_ID,DOMAIN1, DOMAIN2, RESULT_DESC,
	       U.USER_NAME,(SELECT O.ORG_NAME FROM ORGANISE O WHERE O.ORG_CODE = U.ORG_ID) AS ORGNAME 
	 FROM (SELECT ID, OPERATION, BUSINESS_OPT_TYPE, DB_OPT_TYPE, OPT_TIME,DOMAIN_CODE, 
	 			  DOMAIN_NAME,DOMAIN_CLASS, SUCCEED, USER_ID,DOMAIN1, DOMAIN2, RESULT_DESC
	 FROM BUSINESS_LOG  WHERE BUSINESS_OPT_TYPE = 2 AND
	  USER_ID IN
	    (SELECT USER_ID FROM USER_ U WHERE U.USER_ID IN
	            (SELECT USER_ID FROM USERS_ROLES
	              WHERE ROLE_ID IN (SELECT ROLE_ID FROM ROLE_ WHERE ROLE_TYPE IN (1, 2))
	          OR U.POST_ID IN
	             (SELECT POST_ID FROM POST_ROLE 
	              WHERE ROLE_ID IN (SELECT ROLE_ID FROM ROLE_ WHERE ROLE_TYPE IN (1, 2))))
	              <if test="optUserName!=null">and u.user_name like concat(concat('%',#{optUserName}),'%')</if>
	              <if test="orgCode!=null">and u.ORG_ID=#{orgCode}</if>
	              )
              	<if test="operation!=null">and operation=#{operation}</if>
			  	<if test="businessOptType!=null">and BUSINESS_OPT_TYPE =#{businessOptType}</if>
			  	<if test="dbOptType!=null">and DB_OPT_TYPE=#{dbOptType}</if>
			  	<if test="optTime!=null">
			  		and OPT_TIME &gt;=#{optTime}
			  		and OPT_TIME &lt;(#{optTime} +   interval   '1'  day)
			  	</if>
			  	<if test="optStartTime != null">
					<![CDATA[
					 and  OPT_TIME >= #{optStartTime,jdbcType=TIMESTAMP}
					]]>
				</if>
				<if test="optEndTime != null">
					<![CDATA[
					 and OPT_TIME  < (#{optEndTime,jdbcType=TIMESTAMP} +   interval   '1'  day)
					]]>
				</if>) L
	 LEFT JOIN USER_ U 
	 ON L.USER_ID = U.USER_ID
  	order by opt_time desc
  </select>
    <select id="getAccessLogCount" parameterType="map" resultType="int">
  	select count(1) from BUSINESS_LOG b left join USER_ u on b.DOMAIN_CODE=u.user_id
  	where BUSINESS_OPT_TYPE != 2
  	<if test="businessOptType!=null">and BUSINESS_OPT_TYPE =#{businessOptType}</if>
  	<if test="optTime!=null">
  		and OPT_TIME &gt;=#{optTime}
  		and OPT_TIME &lt;(#{optTime} +   interval   '1'  day)
  	</if> 
  	<if test="optStartTime != null">
		<![CDATA[
		 and  OPT_TIME >= #{optStartTime,jdbcType=TIMESTAMP}
		]]>
	</if>
	<if test="optEndTime != null">
		<![CDATA[
			 and OPT_TIME  < (#{optEndTime,jdbcType=TIMESTAMP} +   interval   '1'  day)
		]]>
	</if>	
	<if test="orgCode!=null">and U.ORG_ID=#{orgCode}</if>
  </select>
  <select id="getAccessLogList" parameterType="map" resultMap="ResultMapWithBLOBsAndUserName">
  	select b.*,u.user_name,(SELECT O.ORG_NAME FROM ORGANISE O WHERE O.ORG_CODE = U.ORG_ID) AS orgName
  	 from BUSINESS_LOG b left join USER_ u on b.DOMAIN_CODE=u.user_id
  	where BUSINESS_OPT_TYPE != 2
  	<if test="businessOptType!=null">and BUSINESS_OPT_TYPE =#{businessOptType}</if>
  	<if test="optTime!=null">
  		and OPT_TIME &gt;=#{optTime}
  		and OPT_TIME &lt;(#{optTime} +   interval   '1'  day)
  	</if> 
  	<if test="optStartTime != null">
		<![CDATA[
		 and  OPT_TIME >= #{optStartTime,jdbcType=TIMESTAMP}
		]]>
	</if>
	<if test="optEndTime != null">
		<![CDATA[
			 and OPT_TIME  < (#{optEndTime,jdbcType=TIMESTAMP} +   interval   '1'  day)
		]]>
	</if>
	<if test="orgCode!=null">and u.ORG_ID=#{orgCode}</if>
  	order by opt_time desc
  </select>
  
  <select id="getTodayLoginCount" parameterType="map" resultType="int">
	SELECT COUNT(ID) FROM BUSINESS_LOG 
	WHERE BUSINESS_OPT_TYPE=0
	<if test="optTime!=null">
		AND TO_CHAR(OPT_TIME,'yyyy-MM-dd') =#{optTime}
	</if> 
  </select>
</mapper>