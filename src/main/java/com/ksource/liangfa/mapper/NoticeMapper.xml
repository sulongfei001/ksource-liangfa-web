<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ksource.liangfa.mapper.NoticeMapper">
  <resultMap id="BaseResultMap" type="com.ksource.liangfa.domain.Notice">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Aug 05 14:45:35 CST 2017.
    -->
    <id column="NOTICE_ID" jdbcType="DECIMAL" property="noticeId" />
    <result column="NOTICE_LEVEL" jdbcType="DECIMAL" property="noticeLevel" />
    <result column="NOTICE_TITLE" jdbcType="VARCHAR" property="noticeTitle" />
    <result column="NOTICE_CREATER" jdbcType="VARCHAR" property="noticeCreater" />
    <result column="NOTICE_TIME" jdbcType="TIMESTAMP" property="noticeTime" />
    <result column="IS_PUBLIC" jdbcType="DECIMAL" property="isPublic" />
    <result column="IS_PUBLISHED" jdbcType="DECIMAL" property="isPublished" />
    <result column="TYPE_ID" jdbcType="DECIMAL" property="typeId" />
    <result column="VALID_BEGIN_TIME" jdbcType="TIMESTAMP" property="validBeginTime" />
    <result column="VALID_END_TIME" jdbcType="TIMESTAMP" property="validEndTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.ksource.liangfa.domain.Notice">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Aug 05 14:45:35 CST 2017.
    -->
    <result column="NOTICE_CONTENT" jdbcType="CLOB" property="noticeContent" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Aug 05 14:45:35 CST 2017.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Aug 05 14:45:35 CST 2017.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Aug 05 14:45:35 CST 2017.
    -->
    NOTICE_ID, NOTICE_LEVEL, NOTICE_TITLE, NOTICE_CREATER, NOTICE_TIME, IS_PUBLIC, IS_PUBLISHED, 
    TYPE_ID, VALID_BEGIN_TIME, VALID_END_TIME
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Aug 05 14:45:35 CST 2017.
    -->
    NOTICE_CONTENT
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.ksource.liangfa.domain.NoticeExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Aug 05 14:45:35 CST 2017.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from NOTICE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.ksource.liangfa.domain.NoticeExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Aug 05 14:45:35 CST 2017.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from NOTICE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="Integer" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Aug 05 14:45:35 CST 2017.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from NOTICE
    where NOTICE_ID = #{noticeId,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Aug 05 14:45:35 CST 2017.
    -->
    delete from NOTICE
    where NOTICE_ID = #{noticeId,jdbcType=DECIMAL}
  </delete>
  <delete id="deleteByExample" parameterType="com.ksource.liangfa.domain.NoticeExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Aug 05 14:45:35 CST 2017.
    -->
    delete from NOTICE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ksource.liangfa.domain.Notice">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Aug 05 14:45:35 CST 2017.
    -->
    insert into NOTICE (NOTICE_ID, NOTICE_LEVEL, NOTICE_TITLE, 
      NOTICE_CREATER, NOTICE_TIME, IS_PUBLIC, 
      IS_PUBLISHED, TYPE_ID, VALID_BEGIN_TIME, 
      VALID_END_TIME, NOTICE_CONTENT)
    values (#{noticeId,jdbcType=DECIMAL}, #{noticeLevel,jdbcType=DECIMAL}, #{noticeTitle,jdbcType=VARCHAR}, 
      #{noticeCreater,jdbcType=VARCHAR}, #{noticeTime,jdbcType=TIMESTAMP}, #{isPublic,jdbcType=DECIMAL}, 
      #{isPublished,jdbcType=DECIMAL}, #{typeId,jdbcType=DECIMAL}, #{validBeginTime,jdbcType=TIMESTAMP}, 
      #{validEndTime,jdbcType=TIMESTAMP}, #{noticeContent,jdbcType=CLOB})
  </insert>
  <insert id="insertSelective" parameterType="com.ksource.liangfa.domain.Notice">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Aug 05 14:45:35 CST 2017.
    -->
    insert into NOTICE
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="noticeId != null">
        NOTICE_ID,
      </if>
      <if test="noticeLevel != null">
        NOTICE_LEVEL,
      </if>
      <if test="noticeTitle != null">
        NOTICE_TITLE,
      </if>
      <if test="noticeCreater != null">
        NOTICE_CREATER,
      </if>
      <if test="noticeTime != null">
        NOTICE_TIME,
      </if>
      <if test="isPublic != null">
        IS_PUBLIC,
      </if>
      <if test="isPublished != null">
        IS_PUBLISHED,
      </if>
      <if test="typeId != null">
        TYPE_ID,
      </if>
      <if test="validBeginTime != null">
        VALID_BEGIN_TIME,
      </if>
      <if test="validEndTime != null">
        VALID_END_TIME,
      </if>
      <if test="noticeContent != null">
        NOTICE_CONTENT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="noticeId != null">
        #{noticeId,jdbcType=DECIMAL},
      </if>
      <if test="noticeLevel != null">
        #{noticeLevel,jdbcType=DECIMAL},
      </if>
      <if test="noticeTitle != null">
        #{noticeTitle,jdbcType=VARCHAR},
      </if>
      <if test="noticeCreater != null">
        #{noticeCreater,jdbcType=VARCHAR},
      </if>
      <if test="noticeTime != null">
        #{noticeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isPublic != null">
        #{isPublic,jdbcType=DECIMAL},
      </if>
      <if test="isPublished != null">
        #{isPublished,jdbcType=DECIMAL},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=DECIMAL},
      </if>
      <if test="validBeginTime != null">
        #{validBeginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="validEndTime != null">
        #{validEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="noticeContent != null">
        #{noticeContent,jdbcType=CLOB},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ksource.liangfa.domain.NoticeExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Aug 05 14:45:35 CST 2017.
    -->
    select count(*) from NOTICE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Aug 05 14:45:35 CST 2017.
    -->
    update NOTICE
    <set>
      <if test="record.noticeId != null">
        NOTICE_ID = #{record.noticeId,jdbcType=DECIMAL},
      </if>
      <if test="record.noticeLevel != null">
        NOTICE_LEVEL = #{record.noticeLevel,jdbcType=DECIMAL},
      </if>
      <if test="record.noticeTitle != null">
        NOTICE_TITLE = #{record.noticeTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.noticeCreater != null">
        NOTICE_CREATER = #{record.noticeCreater,jdbcType=VARCHAR},
      </if>
      <if test="record.noticeTime != null">
        NOTICE_TIME = #{record.noticeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isPublic != null">
        IS_PUBLIC = #{record.isPublic,jdbcType=DECIMAL},
      </if>
      <if test="record.isPublished != null">
        IS_PUBLISHED = #{record.isPublished,jdbcType=DECIMAL},
      </if>
      <if test="record.typeId != null">
        TYPE_ID = #{record.typeId,jdbcType=DECIMAL},
      </if>
      <if test="record.validBeginTime != null">
        VALID_BEGIN_TIME = #{record.validBeginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.validEndTime != null">
        VALID_END_TIME = #{record.validEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.noticeContent != null">
        NOTICE_CONTENT = #{record.noticeContent,jdbcType=CLOB},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Aug 05 14:45:35 CST 2017.
    -->
    update NOTICE
    set NOTICE_ID = #{record.noticeId,jdbcType=DECIMAL},
      NOTICE_LEVEL = #{record.noticeLevel,jdbcType=DECIMAL},
      NOTICE_TITLE = #{record.noticeTitle,jdbcType=VARCHAR},
      NOTICE_CREATER = #{record.noticeCreater,jdbcType=VARCHAR},
      NOTICE_TIME = #{record.noticeTime,jdbcType=TIMESTAMP},
      IS_PUBLIC = #{record.isPublic,jdbcType=DECIMAL},
      IS_PUBLISHED = #{record.isPublished,jdbcType=DECIMAL},
      TYPE_ID = #{record.typeId,jdbcType=DECIMAL},
      VALID_BEGIN_TIME = #{record.validBeginTime,jdbcType=TIMESTAMP},
      VALID_END_TIME = #{record.validEndTime,jdbcType=TIMESTAMP},
      NOTICE_CONTENT = #{record.noticeContent,jdbcType=CLOB}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Aug 05 14:45:35 CST 2017.
    -->
    update NOTICE
    set NOTICE_ID = #{record.noticeId,jdbcType=DECIMAL},
      NOTICE_LEVEL = #{record.noticeLevel,jdbcType=DECIMAL},
      NOTICE_TITLE = #{record.noticeTitle,jdbcType=VARCHAR},
      NOTICE_CREATER = #{record.noticeCreater,jdbcType=VARCHAR},
      NOTICE_TIME = #{record.noticeTime,jdbcType=TIMESTAMP},
      IS_PUBLIC = #{record.isPublic,jdbcType=DECIMAL},
      IS_PUBLISHED = #{record.isPublished,jdbcType=DECIMAL},
      TYPE_ID = #{record.typeId,jdbcType=DECIMAL},
      VALID_BEGIN_TIME = #{record.validBeginTime,jdbcType=TIMESTAMP},
      VALID_END_TIME = #{record.validEndTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ksource.liangfa.domain.Notice">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Aug 05 14:45:35 CST 2017.
    -->
    update NOTICE
    <set>
      <if test="noticeLevel != null">
        NOTICE_LEVEL = #{noticeLevel,jdbcType=DECIMAL},
      </if>
      <if test="noticeTitle != null">
        NOTICE_TITLE = #{noticeTitle,jdbcType=VARCHAR},
      </if>
      <if test="noticeCreater != null">
        NOTICE_CREATER = #{noticeCreater,jdbcType=VARCHAR},
      </if>
      <if test="noticeTime != null">
        NOTICE_TIME = #{noticeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isPublic != null">
        IS_PUBLIC = #{isPublic,jdbcType=DECIMAL},
      </if>
      <if test="isPublished != null">
        IS_PUBLISHED = #{isPublished,jdbcType=DECIMAL},
      </if>
      <if test="typeId != null">
        TYPE_ID = #{typeId,jdbcType=DECIMAL},
      </if>
      <if test="validBeginTime != null">
        VALID_BEGIN_TIME = #{validBeginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="validEndTime != null">
        VALID_END_TIME = #{validEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="noticeContent != null">
        NOTICE_CONTENT = #{noticeContent,jdbcType=CLOB},
      </if>
    </set>
    where NOTICE_ID = #{noticeId,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.ksource.liangfa.domain.Notice">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Aug 05 14:45:35 CST 2017.
    -->
    update NOTICE
    set NOTICE_LEVEL = #{noticeLevel,jdbcType=DECIMAL},
      NOTICE_TITLE = #{noticeTitle,jdbcType=VARCHAR},
      NOTICE_CREATER = #{noticeCreater,jdbcType=VARCHAR},
      NOTICE_TIME = #{noticeTime,jdbcType=TIMESTAMP},
      IS_PUBLIC = #{isPublic,jdbcType=DECIMAL},
      IS_PUBLISHED = #{isPublished,jdbcType=DECIMAL},
      TYPE_ID = #{typeId,jdbcType=DECIMAL},
      VALID_BEGIN_TIME = #{validBeginTime,jdbcType=TIMESTAMP},
      VALID_END_TIME = #{validEndTime,jdbcType=TIMESTAMP},
      NOTICE_CONTENT = #{noticeContent,jdbcType=CLOB}
    where NOTICE_ID = #{noticeId,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ksource.liangfa.domain.Notice">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Aug 05 14:45:35 CST 2017.
    -->
    update NOTICE
    set NOTICE_LEVEL = #{noticeLevel,jdbcType=DECIMAL},
      NOTICE_TITLE = #{noticeTitle,jdbcType=VARCHAR},
      NOTICE_CREATER = #{noticeCreater,jdbcType=VARCHAR},
      NOTICE_TIME = #{noticeTime,jdbcType=TIMESTAMP},
      IS_PUBLIC = #{isPublic,jdbcType=DECIMAL},
      IS_PUBLISHED = #{isPublished,jdbcType=DECIMAL},
      TYPE_ID = #{typeId,jdbcType=DECIMAL},
      VALID_BEGIN_TIME = #{validBeginTime,jdbcType=TIMESTAMP},
      VALID_END_TIME = #{validEndTime,jdbcType=TIMESTAMP}
    where NOTICE_ID = #{noticeId,jdbcType=DECIMAL}
  </update>

	<!-- ================================================================================ -->
	<sql id="linkOrg"><!-- add sql for notice info linking org -->
		and (n.notice_id in(
		select notice_id from notice_org norg
		where norg.org_id=#{orgId}
		)or n.NOTICE_CREATER=#{userId})
	</sql>
	<select id="getPaginationList" parameterType="java.util.Map" resultMap="BaseResultMap">
		SELECT N.NOTICE_ID,
		N.NOTICE_LEVEL,
		N.NOTICE_TITLE,
		N.VALID_BEGIN_TIME,
		N.VALID_END_TIME,
		U.USER_NAME userName,
		N.NOTICE_TIME,
		N.IS_PUBLISHED,
		(select count(*)
		from notice_org norgs
		where
		norgs.notice_id = N.NOTICE_ID) as noticeOrg
		FROM NOTICE N, USER_ U
		<where>
			and n.notice_creater = u.user_id
			<if test="noticeCreater!=null">
				AND N.NOTICE_CREATER=#{noticeCreater}
			</if>
			<if test="noticeTitle!= null">
				and N.NOTICE_TITLE like
				concat(concat('%',#{noticeTitle}),'%')
			</if>
			<if test="noticeLevel!= null">
				and N.NOTICE_LEVEL like
				concat(concat('%',#{noticeLevel}),'%')
			</if>
			<if test="noticeOrg != null">
				 and  n.notice_id in (select o.notice_id from notice_org o where o.org_id=#{noticeOrg})
			</if>	
			<if test="number != null">
				AND n.IS_PUBLISHED = 1
				AND n.VALID_BEGIN_TIME &lt; = trunc(sysdate)
  			 	AND(n.VALID_END_TIME is not null and n.VALID_END_TIME >=trunc(sysdate))
			</if>		

		</where>
		order by N.NOTICE_LEVEL desc,N.NOTICE_TIME desc
	</select>

	<select id="getPaginationCount" parameterType="java.util.Map" resultType="java.lang.Integer">
		SELECT count(*)
		FROM NOTICE N, USER_ U
		<where>
			and n.notice_creater=u.user_id
			<if test="noticeCreater!=null">
				and N.NOTICE_CREATER=#{noticeCreater}
			</if>
			<if test="noticeTitle!= null">
				and NOTICE_TITLE like concat(concat('%',#{noticeTitle}),'%')
			</if>
			<if test="noticeLevel!= null">
				and NOTICE_LEVEL like
				concat(concat('%',#{noticeLevel}),'%')
			</if>
			<if test="noticeOrg != null">
				 and n.notice_id in (select o.notice_id from notice_org o where o.org_id=#{noticeOrg})
			</if>
			<if test="number != null">
				 and n.IS_PUBLISHED = 1
			</if>
		</where>
	</select>
	<resultMap extends="ResultMapWithBLOBs" id="getDetailNoticeResultMap" type="com.ksource.liangfa.domain.Notice">
		<result column="org_Name" jdbcType="VARCHAR" property="orgName" />
	</resultMap>
	<select id="getDetailNotice" resultMap="getDetailNoticeResultMap">
		SELECT
		N.NOTICE_LEVEL,N.NOTICE_TITLE,N.NOTICE_CONTENT,U.USER_NAME USERNAME,N.NOTICE_TIME,
		(SELECT O.ORG_NAME FROM ORGANISE O WHERE O.ORG_CODE = U.ORG_ID AND U.USER_ID= N.NOTICE_CREATER) as org_Name
		FROM
		NOTICE N,USER_ U
		WHERE N.NOTICE_CREATER=U.USER_ID
		AND N.NOTICE_ID =#{noticeId,jdbcType=DECIMAL}
	</select>
	<select id="selectNoticeIndex" resultMap="BaseResultMap">
		select *
		  from (select n.notice_id, n.notice_title, n.notice_time from notice n order by n.notice_time desc)
		 where rownum &lt; 7
 	</select>
	<select id="selectNoticeList" parameterType="map" resultMap="BaseResultMap">
		select n.notice_id, n.notice_title, n.notice_time
		  from notice n
		   <if test="title!=null">
		 	where n.notice_title like concat(concat('%',#{title}),'%')
		 </if>
		 order by n.notice_time desc
 	</select>
	<select id="selectNoticeCount" parameterType="map" resultType="int">
		select count(*)
		  from notice n
		   <if test="title!=null">
		 	where n.notice_title like concat(concat('%',#{title}),'%')
		 </if>
 	</select>
 	
 	
 	<select id="getNoticeList" parameterType="java.util.Map" resultMap="BaseResultMap">
		select NOTICE_ID, NOTICE_LEVEL, NOTICE_TITLE, NOTICE_CREATER, NOTICE_TIME, IS_PUBLIC
		  from notice n
	 	   where  (n.is_public = 1
				<if test="orgId != null">
					or n.NOTICE_CREATER= #{userId}
					or n.notice_id in (select o.notice_id from notice_org o where o.org_id=#{orgId})
				</if>
				)
		 order by n.notice_time desc
 	</select>
	<select id="getNoticeCount" parameterType="java.util.Map" resultType="java.lang.Integer">
		select count(1)
		  from notice n
	 	   where  (n.is_public = 1
				<if test="orgId != null">
					or n.NOTICE_CREATER= #{userId}
					or n.notice_id in (select o.notice_id from notice_org o where o.org_id=#{orgId})
				</if>
				)
 	</select>
 	
 	<!-- 主页面未读通知信息 -->
	<select id="getNoRead" parameterType="java.lang.String" resultMap="BaseResultMap">
		SELECT *
        FROM NOTICE pn
	    WHERE NOT EXISTS (SELECT 1 FROM NOTICE_READ r WHERE r.user_id = #{userId} AND pn.notice_id = r.notice_id) AND pn.IS_PUBLIC = 1
	    AND pn.IS_PUBLISHED = 1
		AND pn.VALID_BEGIN_TIME &lt; = trunc(sysdate)
  		AND(pn.VALID_END_TIME is not null AND pn.VALID_END_TIME >=trunc(sysdate))
		ORDER BY pn.NOTICE_TIME  desc
	</select>
	<!-- 主页面 已读通知信息 -->
	<select id="getAlread" parameterType="java.lang.String" resultMap="BaseResultMap">
		SELECT *
		FROM NOTICE pn
		WHERE EXISTS (SELECT 1 FROM NOTICE_READ r WHERE r.user_id = #{userId} AND pn.notice_id = r.notice_id) AND pn.IS_PUBLIC = 1 
		AND pn.IS_PUBLISHED = 1
		AND pn.VALID_BEGIN_TIME &lt; = trunc(sysdate)
  		AND(pn.VALID_END_TIME is not null AND pn.VALID_END_TIME >=trunc(sysdate))
		ORDER BY pn.NOTICE_TIME  desc
	</select>
	
	
	<resultMap id="getMyNoticeResultMap" type="com.ksource.liangfa.domain.Notice">
	    <result column="NOTICE_ID" jdbcType="DECIMAL" property="noticeId" />
	    <result column="NOTICE_TITLE" jdbcType="VARCHAR" property="noticeTitle" />
	    <result column="NOTICE_TIME" jdbcType="TIMESTAMP" property="noticeTime" />
	    <result column="IS_PUBLIC" jdbcType="DECIMAL" property="isPublic" />
	    <result column="VALID_BEGIN_TIME" jdbcType="TIMESTAMP" property="validBeginTime" />
	    <result column="VALID_END_TIME" jdbcType="TIMESTAMP" property="validEndTime" />
	    <result column="READ_STATE" jdbcType="VARCHAR" property="readState" />
	    <result column="USERNAME" jdbcType="VARCHAR" property="userName" />
	</resultMap>
	<select id="getMyNoticeList" parameterType="java.util.Map" resultMap="getMyNoticeResultMap">
	    SELECT AA.NOTICE_ID,AA.NOTICE_TITLE,AA.NOTICE_TIME,AA.IS_PUBLIC,AA.VALID_BEGIN_TIME,AA.VALID_END_TIME,
	    (CASE WHEN R.READ_TIME IS NULL THEN 1 ELSE 2 END) AS READ_STATE,
	    (SELECT O.ORG_NAME FROM USER_ U,ORGANISE O WHERE U.USER_ID=AA.NOTICE_CREATER AND U.ORG_ID = O.ORG_CODE)AS USERNAME
	    FROM 
	    (
	    SELECT N.NOTICE_ID,N.NOTICE_TITLE,N.NOTICE_TIME,N.IS_PUBLIC,N.VALID_BEGIN_TIME,N.VALID_END_TIME,N.NOTICE_CREATER FROM NOTICE N 
	    WHERE N.IS_PUBLIC = 1 AND N.IS_PUBLISHED = 1
	    AND (N.VALID_BEGIN_TIME &lt;= TRUNC(SYSDATE) OR N.VALID_BEGIN_TIME IS NULL)
	    AND (N.VALID_END_TIME >= TRUNC(SYSDATE) OR N.VALID_END_TIME  IS NULL)
	    UNION
	    SELECT N1.NOTICE_ID,N1.NOTICE_TITLE,N1.NOTICE_TIME,N1.IS_PUBLIC,N1.VALID_BEGIN_TIME,N1.VALID_END_TIME,N1.NOTICE_CREATER FROM NOTICE N1,NOTICE_ORG O 
	    WHERE N1.NOTICE_ID=O.NOTICE_ID AND N1.IS_PUBLIC = 2 
	    <if test="orgId!=null and orgId!=''">
	      AND O.ORG_ID=#{orgId}
	    </if>
	    AND (N1.VALID_BEGIN_TIME &lt;= TRUNC(SYSDATE) OR N1.VALID_BEGIN_TIME IS NULL)
	    AND (N1.VALID_END_TIME >= TRUNC(SYSDATE) OR N1.VALID_END_TIME  IS NULL)
	    )AA 
	    LEFT JOIN NOTICE_READ R ON AA.NOTICE_ID=R.NOTICE_ID
	    <if test="userId!=null and userId!=''">
	      AND R.USER_ID=#{userId}
	    </if>
	     WHERE 1=1 
	    <if test="noticeTitle!=null and noticeTitle!=''">
	      AND INSTR(AA.NOTICE_TITLE,#{noticeTitle})>0
	    </if>
	    ORDER BY R.READ_TIME DESC,AA.NOTICE_TIME DESC
  </select>
  
  <select id="getMyNoticeCount" parameterType="java.util.Map" resultType="java.lang.Integer">
	    SELECT COUNT(1)
	    FROM 
	    (
	    SELECT N.NOTICE_ID,N.NOTICE_TITLE,N.NOTICE_TIME,N.IS_PUBLIC,N.VALID_BEGIN_TIME,N.VALID_END_TIME,N.NOTICE_CREATER FROM NOTICE N 
	    WHERE N.IS_PUBLIC = 1 AND N.IS_PUBLISHED = 1
	    AND (N.VALID_BEGIN_TIME &lt;= TRUNC(SYSDATE) OR N.VALID_BEGIN_TIME IS NULL)
	    AND (N.VALID_END_TIME >= TRUNC(SYSDATE) OR N.VALID_END_TIME  IS NULL)
	    UNION
	    SELECT N1.NOTICE_ID,N1.NOTICE_TITLE,N1.NOTICE_TIME,N1.IS_PUBLIC,N1.VALID_BEGIN_TIME,N1.VALID_END_TIME,N1.NOTICE_CREATER FROM NOTICE N1,NOTICE_ORG O 
	    WHERE N1.NOTICE_ID=O.NOTICE_ID AND N1.IS_PUBLIC = 2 
	    <if test="orgId!=null and orgId!=''">
	      AND O.ORG_ID=#{orgId}
	    </if>
	    AND (N1.VALID_BEGIN_TIME &lt;= TRUNC(SYSDATE) OR N1.VALID_BEGIN_TIME IS NULL)
	    AND (N1.VALID_END_TIME >= TRUNC(SYSDATE) OR N1.VALID_END_TIME  IS NULL)
	    )AA 
	    LEFT JOIN NOTICE_READ R ON AA.NOTICE_ID=R.NOTICE_ID
	    <if test="userId!=null and userId!=''">
	      AND R.USER_ID=#{userId}
	    </if>
	    WHERE 1=1 
	    <if test="noticeTitle!=null and noticeTitle!=''">
	      AND INSTR(AA.NOTICE_TITLE,#{noticeTitle})>0
	    </if>
	    ORDER BY R.READ_TIME DESC,AA.NOTICE_TIME DESC
  </select>
 	
</mapper>