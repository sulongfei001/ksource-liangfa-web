<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ksource.liangfa.mapper.CaseBasicMapper">
  <resultMap id="BaseResultMap" type="com.ksource.liangfa.domain.CaseBasic">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 11 11:18:42 CST 2017.
    -->
    <id column="CASE_ID" jdbcType="VARCHAR" property="caseId" />
    <result column="CASE_NO" jdbcType="VARCHAR" property="caseNo" />
    <result column="CASE_NAME" jdbcType="VARCHAR" property="caseName" />
    <result column="INPUTER" jdbcType="VARCHAR" property="inputer" />
    <result column="INPUT_TIME" jdbcType="TIMESTAMP" property="inputTime" />
    <result column="INPUT_UNIT" jdbcType="DECIMAL" property="inputUnit" />
    <result column="CASE_STATE" jdbcType="VARCHAR" property="caseState" />
    <result column="RECORD_SRC" jdbcType="VARCHAR" property="recordSrc" />
    <result column="LATEST_POCESS_TIME" jdbcType="TIMESTAMP" property="latestPocessTime" />
    <result column="PROC_KEY" jdbcType="VARCHAR" property="procKey" />
    <result column="INPUT_TYPE" jdbcType="DECIMAL" property="inputType" />
    <result column="VERSION_NO" jdbcType="DECIMAL" property="versionNo" />
    <result column="IS_ASSIGN" jdbcType="DECIMAL" property="isAssign" />
    <result column="ANFA_TIME" jdbcType="TIMESTAMP" property="anfaTime" />
    <result column="ANFA_ADDRESS" jdbcType="VARCHAR" property="anfaAddress" />
    <result column="IS_SUSPECTED_CRIMINAL" jdbcType="DECIMAL" property="isSuspectedCriminal" />
    <result column="CASE_TYPE" jdbcType="DECIMAL" property="caseType" />
    <result column="AMOUNT_INVOLVED" jdbcType="DECIMAL" property="amountInvolved" />
    <result column="UNDERTAKER_SUGGEST" jdbcType="VARCHAR" property="undertakerSuggest" />
    <result column="CASE_REASON" jdbcType="VARCHAR" property="caseReason" />
    <result column="UNDERTAKER" jdbcType="VARCHAR" property="undertaker" />
    <result column="UNDERTAKER_TIME" jdbcType="TIMESTAMP" property="undertakerTime" />
    <result column="ASSIGN_ORG" jdbcType="VARCHAR" property="assignOrg" />
    <result column="IS_TURNOVER" jdbcType="DECIMAL" property="isTurnover" />
    <result column="CLUE_ID" jdbcType="DECIMAL" property="clueId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.ksource.liangfa.domain.CaseBasic">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 11 11:18:42 CST 2017.
    -->
    <result column="CASE_DETAIL_NAME" jdbcType="CLOB" property="caseDetailName" />
  </resultMap>
  
  <resultMap extends="ResultMapWithBLOBs" id="ResultMapUpdate" type="com.ksource.liangfa.domain.CaseBasic">
    <result column="ANFA_ADDRESS_NAME" property="anfaAddressName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 11 11:18:42 CST 2017.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 11 11:18:42 CST 2017.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 11 11:18:42 CST 2017.
    -->
    <!-- CASE_ID, CASE_NO, CASE_NAME, INPUTER, INPUT_TIME, INPUT_UNIT, CASE_STATE, RECORD_SRC, 
    LATEST_POCESS_TIME, PROC_KEY, INPUT_TYPE, VERSION_NO, IS_ASSIGN, ANFA_TIME, 
    (select o.district_name from case_basic c,district o where c.anfa_address = o.district_code and c.case_id = 5450) as ANFA_ADDRESS, 
    IS_SUSPECTED_CRIMINAL, CASE_TYPE, AMOUNT_INVOLVED, UNDERTAKER_SUGGEST, CASE_REASON, 
    UNDERTAKER, UNDERTAKER_TIME, ASSIGN_ORG, IS_TURNOVER -->
    CASE_ID, CASE_NO, CASE_NAME, INPUTER, INPUT_TIME, INPUT_UNIT, CASE_STATE, RECORD_SRC, 
    LATEST_POCESS_TIME, PROC_KEY, INPUT_TYPE, VERSION_NO, IS_ASSIGN, ANFA_TIME,ANFA_ADDRESS, 
    LATEST_POCESS_TIME, PROC_KEY, INPUT_TYPE, VERSION_NO, IS_ASSIGN, ANFA_TIME, 
    ANFA_ADDRESS, CLUE_ID,
    IS_SUSPECTED_CRIMINAL, CASE_TYPE, AMOUNT_INVOLVED, UNDERTAKER_SUGGEST, CASE_REASON, 
    UNDERTAKER, UNDERTAKER_TIME, ASSIGN_ORG, IS_TURNOVER
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 11 11:18:42 CST 2017.
    -->
    CASE_DETAIL_NAME
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.ksource.liangfa.domain.CaseBasicExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 11 11:18:42 CST 2017.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from CASE_BASIC
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.ksource.liangfa.domain.CaseBasicExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 11 11:18:42 CST 2017.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from CASE_BASIC
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 11 11:18:42 CST 2017.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from CASE_BASIC
    where CASE_ID = #{caseId,jdbcType=VARCHAR}
  </select>
  
  <select id="selectByCaseId" parameterType="java.lang.String" resultMap="ResultMapUpdate">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 11 11:18:42 CST 2017.
    -->
    select 
    CASE_ID, CASE_NO, CASE_NAME, INPUTER, INPUT_TIME, INPUT_UNIT, CASE_STATE, RECORD_SRC, 
    LATEST_POCESS_TIME, PROC_KEY, INPUT_TYPE, VERSION_NO, IS_ASSIGN, ANFA_TIME,ANFA_ADDRESS,
    (select o.district_name from case_basic c,district o where c.anfa_address = o.district_code and c.case_id =#{caseId}) AS ANFA_ADDRESS_NAME, 
    IS_SUSPECTED_CRIMINAL, CASE_TYPE, AMOUNT_INVOLVED, UNDERTAKER_SUGGEST, CASE_REASON, 
    UNDERTAKER, UNDERTAKER_TIME, ASSIGN_ORG, IS_TURNOVER
    ,
    <include refid="Blob_Column_List" />
    from CASE_BASIC
    where CASE_ID = #{caseId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 11 11:18:42 CST 2017.
    -->
    delete from CASE_BASIC
    where CASE_ID = #{caseId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.ksource.liangfa.domain.CaseBasicExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 11 11:18:42 CST 2017.
    -->
    delete from CASE_BASIC
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ksource.liangfa.domain.CaseBasic">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 11 11:18:42 CST 2017.
    -->
    insert into CASE_BASIC (CASE_ID, CASE_NO, CASE_NAME, 
      INPUTER, INPUT_TIME, INPUT_UNIT, 
      CASE_STATE, RECORD_SRC, LATEST_POCESS_TIME, 
      PROC_KEY, INPUT_TYPE, VERSION_NO, 
      IS_ASSIGN, ANFA_TIME, ANFA_ADDRESS, 
      IS_SUSPECTED_CRIMINAL, CASE_TYPE, AMOUNT_INVOLVED, 
      UNDERTAKER_SUGGEST, CASE_REASON, UNDERTAKER, 
      UNDERTAKER_TIME, ASSIGN_ORG, IS_TURNOVER, 
      CASE_DETAIL_NAME,CLUE_ID)
    values (#{caseId,jdbcType=VARCHAR}, #{caseNo,jdbcType=VARCHAR}, #{caseName,jdbcType=VARCHAR}, 
      #{inputer,jdbcType=VARCHAR}, #{inputTime,jdbcType=TIMESTAMP}, #{inputUnit,jdbcType=DECIMAL}, 
      #{caseState,jdbcType=VARCHAR}, #{recordSrc,jdbcType=VARCHAR}, #{latestPocessTime,jdbcType=TIMESTAMP}, 
      #{procKey,jdbcType=VARCHAR}, #{inputType,jdbcType=DECIMAL}, #{versionNo,jdbcType=DECIMAL}, 
      #{isAssign,jdbcType=DECIMAL}, #{anfaTime,jdbcType=TIMESTAMP}, #{anfaAddress,jdbcType=VARCHAR}, 
      #{isSuspectedCriminal,jdbcType=DECIMAL}, #{caseType,jdbcType=DECIMAL}, #{amountInvolved,jdbcType=DECIMAL}, 
      #{undertakerSuggest,jdbcType=VARCHAR}, #{caseReason,jdbcType=VARCHAR}, #{undertaker,jdbcType=VARCHAR}, 
      #{undertakerTime,jdbcType=TIMESTAMP}, #{assignOrg,jdbcType=VARCHAR}, #{isTurnover,jdbcType=DECIMAL}, 
      #{caseDetailName,jdbcType=CLOB}, #{clueId,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.ksource.liangfa.domain.CaseBasic">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 11 11:18:42 CST 2017.
    -->
    insert into CASE_BASIC
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="caseId != null">
        CASE_ID,
      </if>
      <if test="caseNo != null">
        CASE_NO,
      </if>
      <if test="caseName != null">
        CASE_NAME,
      </if>
      <if test="inputer != null">
        INPUTER,
      </if>
      <if test="inputTime != null">
        INPUT_TIME,
      </if>
      <if test="inputUnit != null">
        INPUT_UNIT,
      </if>
      <if test="caseState != null">
        CASE_STATE,
      </if>
      <if test="recordSrc != null">
        RECORD_SRC,
      </if>
      <if test="latestPocessTime != null">
        LATEST_POCESS_TIME,
      </if>
      <if test="procKey != null">
        PROC_KEY,
      </if>
      <if test="inputType != null">
        INPUT_TYPE,
      </if>
      <if test="versionNo != null">
        VERSION_NO,
      </if>
      <if test="isAssign != null">
        IS_ASSIGN,
      </if>
      <if test="anfaTime != null">
        ANFA_TIME,
      </if>
      <if test="anfaAddress != null">
        ANFA_ADDRESS,
      </if>
      <if test="isSuspectedCriminal != null">
        IS_SUSPECTED_CRIMINAL,
      </if>
      <if test="caseType != null">
        CASE_TYPE,
      </if>
      <if test="amountInvolved != null">
        AMOUNT_INVOLVED,
      </if>
      <if test="undertakerSuggest != null">
        UNDERTAKER_SUGGEST,
      </if>
      <if test="caseReason != null">
        CASE_REASON,
      </if>
      <if test="undertaker != null">
        UNDERTAKER,
      </if>
      <if test="undertakerTime != null">
        UNDERTAKER_TIME,
      </if>
      <if test="assignOrg != null">
        ASSIGN_ORG,
      </if>
      <if test="isTurnover != null">
        IS_TURNOVER,
      </if>
      <if test="caseDetailName != null">
        CASE_DETAIL_NAME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="caseId != null">
        #{caseId,jdbcType=VARCHAR},
      </if>
      <if test="caseNo != null">
        #{caseNo,jdbcType=VARCHAR},
      </if>
      <if test="caseName != null">
        #{caseName,jdbcType=VARCHAR},
      </if>
      <if test="inputer != null">
        #{inputer,jdbcType=VARCHAR},
      </if>
      <if test="inputTime != null">
        #{inputTime,jdbcType=TIMESTAMP},
      </if>
      <if test="inputUnit != null">
        #{inputUnit,jdbcType=DECIMAL},
      </if>
      <if test="caseState != null">
        #{caseState,jdbcType=VARCHAR},
      </if>
      <if test="recordSrc != null">
        #{recordSrc,jdbcType=VARCHAR},
      </if>
      <if test="latestPocessTime != null">
        #{latestPocessTime,jdbcType=TIMESTAMP},
      </if>
      <if test="procKey != null">
        #{procKey,jdbcType=VARCHAR},
      </if>
      <if test="inputType != null">
        #{inputType,jdbcType=DECIMAL},
      </if>
      <if test="versionNo != null">
        #{versionNo,jdbcType=DECIMAL},
      </if>
      <if test="isAssign != null">
        #{isAssign,jdbcType=DECIMAL},
      </if>
      <if test="anfaTime != null">
        #{anfaTime,jdbcType=TIMESTAMP},
      </if>
      <if test="anfaAddress != null">
        #{anfaAddress,jdbcType=VARCHAR},
      </if>
      <if test="isSuspectedCriminal != null">
        #{isSuspectedCriminal,jdbcType=DECIMAL},
      </if>
      <if test="caseType != null">
        #{caseType,jdbcType=DECIMAL},
      </if>
      <if test="amountInvolved != null">
        #{amountInvolved,jdbcType=DECIMAL},
      </if>
      <if test="undertakerSuggest != null">
        #{undertakerSuggest,jdbcType=VARCHAR},
      </if>
      <if test="caseReason != null">
        #{caseReason,jdbcType=VARCHAR},
      </if>
      <if test="undertaker != null">
        #{undertaker,jdbcType=VARCHAR},
      </if>
      <if test="undertakerTime != null">
        #{undertakerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="assignOrg != null">
        #{assignOrg,jdbcType=VARCHAR},
      </if>
      <if test="isTurnover != null">
        #{isTurnover,jdbcType=DECIMAL},
      </if>
      <if test="caseDetailName != null">
        #{caseDetailName,jdbcType=CLOB},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ksource.liangfa.domain.CaseBasicExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 11 11:18:42 CST 2017.
    -->
    select count(*) from CASE_BASIC
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 11 11:18:42 CST 2017.
    -->
    update CASE_BASIC
    <set>
      <if test="record.caseId != null">
        CASE_ID = #{record.caseId,jdbcType=VARCHAR},
      </if>
      <if test="record.caseNo != null">
        CASE_NO = #{record.caseNo,jdbcType=VARCHAR},
      </if>
      <if test="record.caseName != null">
        CASE_NAME = #{record.caseName,jdbcType=VARCHAR},
      </if>
      <if test="record.inputer != null">
        INPUTER = #{record.inputer,jdbcType=VARCHAR},
      </if>
      <if test="record.inputTime != null">
        INPUT_TIME = #{record.inputTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.inputUnit != null">
        INPUT_UNIT = #{record.inputUnit,jdbcType=DECIMAL},
      </if>
      <if test="record.caseState != null">
        CASE_STATE = #{record.caseState,jdbcType=VARCHAR},
      </if>
      <if test="record.recordSrc != null">
        RECORD_SRC = #{record.recordSrc,jdbcType=VARCHAR},
      </if>
      <if test="record.latestPocessTime != null">
        LATEST_POCESS_TIME = #{record.latestPocessTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.procKey != null">
        PROC_KEY = #{record.procKey,jdbcType=VARCHAR},
      </if>
      <if test="record.inputType != null">
        INPUT_TYPE = #{record.inputType,jdbcType=DECIMAL},
      </if>
      <if test="record.versionNo != null">
        VERSION_NO = #{record.versionNo,jdbcType=DECIMAL},
      </if>
      <if test="record.isAssign != null">
        IS_ASSIGN = #{record.isAssign,jdbcType=DECIMAL},
      </if>
      <if test="record.anfaTime != null">
        ANFA_TIME = #{record.anfaTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.anfaAddress != null">
        ANFA_ADDRESS = #{record.anfaAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.isSuspectedCriminal != null">
        IS_SUSPECTED_CRIMINAL = #{record.isSuspectedCriminal,jdbcType=DECIMAL},
      </if>
      <if test="record.caseType != null">
        CASE_TYPE = #{record.caseType,jdbcType=DECIMAL},
      </if>
      <if test="record.amountInvolved != null">
        AMOUNT_INVOLVED = #{record.amountInvolved,jdbcType=DECIMAL},
      </if>
      <if test="record.undertakerSuggest != null">
        UNDERTAKER_SUGGEST = #{record.undertakerSuggest,jdbcType=VARCHAR},
      </if>
      <if test="record.caseReason != null">
        CASE_REASON = #{record.caseReason,jdbcType=VARCHAR},
      </if>
      <if test="record.undertaker != null">
        UNDERTAKER = #{record.undertaker,jdbcType=VARCHAR},
      </if>
      <if test="record.undertakerTime != null">
        UNDERTAKER_TIME = #{record.undertakerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.assignOrg != null">
        ASSIGN_ORG = #{record.assignOrg,jdbcType=VARCHAR},
      </if>
      <if test="record.isTurnover != null">
        IS_TURNOVER = #{record.isTurnover,jdbcType=DECIMAL},
      </if>
      <if test="record.caseDetailName != null">
        CASE_DETAIL_NAME = #{record.caseDetailName,jdbcType=CLOB},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 11 11:18:42 CST 2017.
    -->
    update CASE_BASIC
    set CASE_ID = #{record.caseId,jdbcType=VARCHAR},
      CASE_NO = #{record.caseNo,jdbcType=VARCHAR},
      CASE_NAME = #{record.caseName,jdbcType=VARCHAR},
      INPUTER = #{record.inputer,jdbcType=VARCHAR},
      INPUT_TIME = #{record.inputTime,jdbcType=TIMESTAMP},
      INPUT_UNIT = #{record.inputUnit,jdbcType=DECIMAL},
      CASE_STATE = #{record.caseState,jdbcType=VARCHAR},
      RECORD_SRC = #{record.recordSrc,jdbcType=VARCHAR},
      LATEST_POCESS_TIME = #{record.latestPocessTime,jdbcType=TIMESTAMP},
      PROC_KEY = #{record.procKey,jdbcType=VARCHAR},
      INPUT_TYPE = #{record.inputType,jdbcType=DECIMAL},
      VERSION_NO = #{record.versionNo,jdbcType=DECIMAL},
      IS_ASSIGN = #{record.isAssign,jdbcType=DECIMAL},
      ANFA_TIME = #{record.anfaTime,jdbcType=TIMESTAMP},
      ANFA_ADDRESS = #{record.anfaAddress,jdbcType=VARCHAR},
      IS_SUSPECTED_CRIMINAL = #{record.isSuspectedCriminal,jdbcType=DECIMAL},
      CASE_TYPE = #{record.caseType,jdbcType=DECIMAL},
      AMOUNT_INVOLVED = #{record.amountInvolved,jdbcType=DECIMAL},
      UNDERTAKER_SUGGEST = #{record.undertakerSuggest,jdbcType=VARCHAR},
      CASE_REASON = #{record.caseReason,jdbcType=VARCHAR},
      UNDERTAKER = #{record.undertaker,jdbcType=VARCHAR},
      UNDERTAKER_TIME = #{record.undertakerTime,jdbcType=TIMESTAMP},
      ASSIGN_ORG = #{record.assignOrg,jdbcType=VARCHAR},
      IS_TURNOVER = #{record.isTurnover,jdbcType=DECIMAL},
      CASE_DETAIL_NAME = #{record.caseDetailName,jdbcType=CLOB}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 11 11:18:42 CST 2017.
    -->
    update CASE_BASIC
    set CASE_ID = #{record.caseId,jdbcType=VARCHAR},
      CASE_NO = #{record.caseNo,jdbcType=VARCHAR},
      CASE_NAME = #{record.caseName,jdbcType=VARCHAR},
      INPUTER = #{record.inputer,jdbcType=VARCHAR},
      INPUT_TIME = #{record.inputTime,jdbcType=TIMESTAMP},
      INPUT_UNIT = #{record.inputUnit,jdbcType=DECIMAL},
      CASE_STATE = #{record.caseState,jdbcType=VARCHAR},
      RECORD_SRC = #{record.recordSrc,jdbcType=VARCHAR},
      LATEST_POCESS_TIME = #{record.latestPocessTime,jdbcType=TIMESTAMP},
      PROC_KEY = #{record.procKey,jdbcType=VARCHAR},
      INPUT_TYPE = #{record.inputType,jdbcType=DECIMAL},
      VERSION_NO = #{record.versionNo,jdbcType=DECIMAL},
      IS_ASSIGN = #{record.isAssign,jdbcType=DECIMAL},
      ANFA_TIME = #{record.anfaTime,jdbcType=TIMESTAMP},
      ANFA_ADDRESS = #{record.anfaAddress,jdbcType=VARCHAR},
      IS_SUSPECTED_CRIMINAL = #{record.isSuspectedCriminal,jdbcType=DECIMAL},
      CASE_TYPE = #{record.caseType,jdbcType=DECIMAL},
      AMOUNT_INVOLVED = #{record.amountInvolved,jdbcType=DECIMAL},
      UNDERTAKER_SUGGEST = #{record.undertakerSuggest,jdbcType=VARCHAR},
      CASE_REASON = #{record.caseReason,jdbcType=VARCHAR},
      UNDERTAKER = #{record.undertaker,jdbcType=VARCHAR},
      UNDERTAKER_TIME = #{record.undertakerTime,jdbcType=TIMESTAMP},
      ASSIGN_ORG = #{record.assignOrg,jdbcType=VARCHAR},
      IS_TURNOVER = #{record.isTurnover,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ksource.liangfa.domain.CaseBasic">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 11 11:18:42 CST 2017.
    -->
    update CASE_BASIC
    <set>
      <if test="caseNo != null">
        CASE_NO = #{caseNo,jdbcType=VARCHAR},
      </if>
      <if test="caseName != null">
        CASE_NAME = #{caseName,jdbcType=VARCHAR},
      </if>
      <if test="inputer != null">
        INPUTER = #{inputer,jdbcType=VARCHAR},
      </if>
      <if test="inputTime != null">
        INPUT_TIME = #{inputTime,jdbcType=TIMESTAMP},
      </if>
      <if test="inputUnit != null">
        INPUT_UNIT = #{inputUnit,jdbcType=DECIMAL},
      </if>
      <if test="caseState != null">
        CASE_STATE = #{caseState,jdbcType=VARCHAR},
      </if>
      <if test="recordSrc != null">
        RECORD_SRC = #{recordSrc,jdbcType=VARCHAR},
      </if>
      <if test="latestPocessTime != null">
        LATEST_POCESS_TIME = #{latestPocessTime,jdbcType=TIMESTAMP},
      </if>
      <if test="procKey != null">
        PROC_KEY = #{procKey,jdbcType=VARCHAR},
      </if>
      <if test="inputType != null">
        INPUT_TYPE = #{inputType,jdbcType=DECIMAL},
      </if>
      <if test="versionNo != null">
        VERSION_NO = #{versionNo,jdbcType=DECIMAL},
      </if>
      <if test="isAssign != null">
        IS_ASSIGN = #{isAssign,jdbcType=DECIMAL},
      </if>
      <if test="anfaTime != null">
        ANFA_TIME = #{anfaTime,jdbcType=TIMESTAMP},
      </if>
      <if test="anfaAddress != null">
        ANFA_ADDRESS = #{anfaAddress,jdbcType=VARCHAR},
      </if>
      <if test="isSuspectedCriminal != null">
        IS_SUSPECTED_CRIMINAL = #{isSuspectedCriminal,jdbcType=DECIMAL},
      </if>
      <if test="caseType != null">
        CASE_TYPE = #{caseType,jdbcType=DECIMAL},
      </if>
      <if test="amountInvolved != null">
        AMOUNT_INVOLVED = #{amountInvolved,jdbcType=DECIMAL},
      </if>
      <if test="undertakerSuggest != null">
        UNDERTAKER_SUGGEST = #{undertakerSuggest,jdbcType=VARCHAR},
      </if>
      <if test="caseReason != null">
        CASE_REASON = #{caseReason,jdbcType=VARCHAR},
      </if>
      <if test="undertaker != null">
        UNDERTAKER = #{undertaker,jdbcType=VARCHAR},
      </if>
      <if test="undertakerTime != null">
        UNDERTAKER_TIME = #{undertakerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="assignOrg != null">
        ASSIGN_ORG = #{assignOrg,jdbcType=VARCHAR},
      </if>
      <if test="isTurnover != null">
        IS_TURNOVER = #{isTurnover,jdbcType=DECIMAL},
      </if>
      <if test="caseDetailName != null">
        CASE_DETAIL_NAME = #{caseDetailName,jdbcType=CLOB},
      </if>
    </set>
    where CASE_ID = #{caseId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.ksource.liangfa.domain.CaseBasic">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 11 11:18:42 CST 2017.
    -->
    update CASE_BASIC
    set CASE_NO = #{caseNo,jdbcType=VARCHAR},
      CASE_NAME = #{caseName,jdbcType=VARCHAR},
      INPUTER = #{inputer,jdbcType=VARCHAR},
      INPUT_TIME = #{inputTime,jdbcType=TIMESTAMP},
      INPUT_UNIT = #{inputUnit,jdbcType=DECIMAL},
      CASE_STATE = #{caseState,jdbcType=VARCHAR},
      RECORD_SRC = #{recordSrc,jdbcType=VARCHAR},
      LATEST_POCESS_TIME = #{latestPocessTime,jdbcType=TIMESTAMP},
      PROC_KEY = #{procKey,jdbcType=VARCHAR},
      INPUT_TYPE = #{inputType,jdbcType=DECIMAL},
      VERSION_NO = #{versionNo,jdbcType=DECIMAL},
      IS_ASSIGN = #{isAssign,jdbcType=DECIMAL},
      ANFA_TIME = #{anfaTime,jdbcType=TIMESTAMP},
      ANFA_ADDRESS = #{anfaAddress,jdbcType=VARCHAR},
      IS_SUSPECTED_CRIMINAL = #{isSuspectedCriminal,jdbcType=DECIMAL},
      CASE_TYPE = #{caseType,jdbcType=DECIMAL},
      AMOUNT_INVOLVED = #{amountInvolved,jdbcType=DECIMAL},
      UNDERTAKER_SUGGEST = #{undertakerSuggest,jdbcType=VARCHAR},
      CASE_REASON = #{caseReason,jdbcType=VARCHAR},
      UNDERTAKER = #{undertaker,jdbcType=VARCHAR},
      UNDERTAKER_TIME = #{undertakerTime,jdbcType=TIMESTAMP},
      ASSIGN_ORG = #{assignOrg,jdbcType=VARCHAR},
      IS_TURNOVER = #{isTurnover,jdbcType=DECIMAL},
      CASE_DETAIL_NAME = #{caseDetailName,jdbcType=CLOB}
    where CASE_ID = #{caseId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ksource.liangfa.domain.CaseBasic">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 11 11:18:42 CST 2017.
    -->
    update CASE_BASIC
    set CASE_NO = #{caseNo,jdbcType=VARCHAR},
      CASE_NAME = #{caseName,jdbcType=VARCHAR},
      INPUTER = #{inputer,jdbcType=VARCHAR},
      INPUT_TIME = #{inputTime,jdbcType=TIMESTAMP},
      INPUT_UNIT = #{inputUnit,jdbcType=DECIMAL},
      CASE_STATE = #{caseState,jdbcType=VARCHAR},
      RECORD_SRC = #{recordSrc,jdbcType=VARCHAR},
      LATEST_POCESS_TIME = #{latestPocessTime,jdbcType=TIMESTAMP},
      PROC_KEY = #{procKey,jdbcType=VARCHAR},
      INPUT_TYPE = #{inputType,jdbcType=DECIMAL},
      VERSION_NO = #{versionNo,jdbcType=DECIMAL},
      IS_ASSIGN = #{isAssign,jdbcType=DECIMAL},
      ANFA_TIME = #{anfaTime,jdbcType=TIMESTAMP},
      ANFA_ADDRESS = #{anfaAddress,jdbcType=VARCHAR},
      IS_SUSPECTED_CRIMINAL = #{isSuspectedCriminal,jdbcType=DECIMAL},
      CASE_TYPE = #{caseType,jdbcType=DECIMAL},
      AMOUNT_INVOLVED = #{amountInvolved,jdbcType=DECIMAL},
      UNDERTAKER_SUGGEST = #{undertakerSuggest,jdbcType=VARCHAR},
      CASE_REASON = #{caseReason,jdbcType=VARCHAR},
      UNDERTAKER = #{undertaker,jdbcType=VARCHAR},
      UNDERTAKER_TIME = #{undertakerTime,jdbcType=TIMESTAMP},
      ASSIGN_ORG = #{assignOrg,jdbcType=VARCHAR},
      IS_TURNOVER = #{isTurnover,jdbcType=DECIMAL}
    where CASE_ID = #{caseId,jdbcType=VARCHAR}
  </update>
  
  <!-- ????????? -->
  <resultMap extends="BaseResultMap" id="PenaltyCaseMap" type="com.ksource.liangfa.domain.CaseBasic">
		<result column="CHUFA_STATE" jdbcType="VARCHAR" property="chufaState" />
		<result column="CHUFA_TIME" jdbcType="TIMESTAMP" property="chufaTime" />
		<result column="org_name" jdbcType="VARCHAR" property="orgName" />
		<result column="input_unit_name" jdbcType="VARCHAR" property="inputUnitName" />
	</resultMap>

	<!-- ??????????XT -->
	<select id="getPaginationCount" parameterType="map" resultType="int">
		SELECT COUNT(1)
		FROM CASE_BASIC A WHERE
		A.PROC_KEY=#{procKey,jdbcType=VARCHAR}
		<if test="caseNo!=null and caseNo!=''">
			AND A.CASE_NO LIKE
			CONCAT(CONCAT('%',#{caseNo,jdbcType=VARCHAR}),'%')
		</if>
		<if test="caseName!=null and caseName!=''">
			AND A.CASE_NAME LIKE
			CONCAT(CONCAT('%',#{caseName,jdbcType=VARCHAR}),'%')
		</if>
		<if test="startTime!=null and startTime!=''">
				<![CDATA[AND A.INPUT_TIME>=#{startTime,jdbcType=TIMESTAMP}]]>
		</if>
		<if test="endTime!=null and endTime!=''">
				<![CDATA[AND A.INPUT_TIME<(#{endTime,jdbcType=TIMESTAMP} + INTERVAL '1' DAY)]]>
		</if>
		<if test="caseState!=null and caseState!=''">
			AND A.CASE_STATE = #{caseState,jdbcType=VARCHAR}
		</if>
		<if test="inputer!=null and inputer!=''">
			AND A.INPUTER = #{inputer}
		</if>
	</select>
	<select id="getPaginationList" parameterType="map" resultMap="PenaltyCaseMap">
		SELECT
		A.CASE_ID,A.CASE_NO,A.CASE_NAME,A.CASE_STATE,A.INPUT_TIME,A.LATEST_POCESS_TIME,S.CHUFA_STATE,A.CASE_TYPE,A.VERSION_NO
		FROM CASE_BASIC A,CASE_STATE S WHERE A.CASE_ID=S.CASE_ID AND A.PROC_KEY=#{procKey}
		<if test="caseNo!=null and caseNo!=''">
			AND A.CASE_NO LIKE
			CONCAT(CONCAT('%',#{caseNo,jdbcType=VARCHAR}),'%')
		</if>
		<if test="caseName!=null and caseName!=''">
			AND A.CASE_NAME LIKE
			CONCAT(CONCAT('%',#{caseName,jdbcType=VARCHAR}),'%')
		</if>
		<if test="startTime!=null and startTime!=''">
				<![CDATA[AND A.INPUT_TIME >= #{startTime,jdbcType=TIMESTAMP}]]>
		</if>
		<if test="endTime!=null and endTime!=''">
				<![CDATA[AND A.INPUT_TIME < (#{endTime,jdbcType=TIMESTAMP} + INTERVAL '1' DAY)]]>
		</if>
		<if test="caseState!=null and caseState!=''">
			AND A.CASE_STATE = #{caseState}
		</if>
		<if test="inputer!=null and inputer!=''">
			AND A.INPUTER = #{inputer}
		</if>
		ORDER BY A.LATEST_POCESS_TIME DESC
	</select>
	<!-- ===================================================================== -->
	<resultMap extends="BaseResultMap" id="dqdjNumResultMap" type="com.ksource.liangfa.domain.CaseBasic">
		<result column="dqdjNum" property="dqdjNum" />
	</resultMap>


	<sql id="yisongQuery">
		<if test="caseNo != null">
			AND INSTR(CB.CASE_NO,#{caseNo})> 0
		</if>
		<if test="caseName != null">
			AND INSTR(CB.CASE_NAME,#{caseName})> 0
		</if>
		<if test="orgPath!=null">
			AND O.ORG_PATH LIKE #{orgPath}||'%'
		</if>
        <if test="orgId!=null">
            AND O.ORG_CODE = #{orgId}
        </if>		
		<if test="districtCode!=null">
			AND O.DISTRICT_CODE LIKE #{districtCode}||'%'
		</if>
		<if test="districtId!=null">
			AND O.DISTRICT_CODE LIKE #{districtId}||'%'
		</if>
		<if test="yisongState != null">
			AND CS.YISONG_STATE = #{yisongState,jdbcType=DECIMAL}
		</if>
		<if test="lianState != null">
			AND CS.LIAN_STATE = #{lianState,jdbcType=DECIMAL}
		</if>
		<if test="qisuState != null">
			AND CS.QISU_STATE = #{qisuState}
		</if>
		<if test="panjueState != null">
			AND CS.PANJUE_STATE = #{panjueState}
		</if>
		<if test="daibuState != null">
			AND CS.DAIBU_STATE = #{daibuState}
		</if>
		<if test="startMoney != null">
	      <![CDATA[
	       	AND  AMOUNT_INVOLVED >= #{startMoney,jdbcType=DECIMAL}
	       	]]>
		</if>
		<if test="endMoney != null ">
	      <![CDATA[
		      	AND  AMOUNT_INVOLVED  <= (#{endMoney,jdbcType=DECIMAL})
		   ]]>
		</if>
		<if test="startTime != null and endTime != null ">
	      <![CDATA[
	       		AND  CB.INPUT_TIME >= #{startTime,jdbcType=TIMESTAMP}
	       	]]>
		</if>
		<if test="endTime != null">
	      <![CDATA[
		      	AND  CB.INPUT_TIME  < (#{endTime,jdbcType=TIMESTAMP} + INTERVAL '1' DAY)
		   ]]>
		</if>
	</sql>
	
	<resultMap type="com.ksource.liangfa.domain.CaseBasic" id="yisongQueryListResultMap" extends="BaseResultMap">
	  	<result column="INPUT_UNIT_NAME" jdbcType="VARCHAR" property="inputUnitName" />
	</resultMap>
	<select id="yisongQueryList" parameterType="map" resultMap="yisongQueryListResultMap">
		SELECT CB.CASE_ID,
		CB.CASE_NO,
		CB.CASE_NAME,
		CB.CASE_STATE,
		O.ORG_NAME AS INPUT_UNIT_NAME,
		CB.AMOUNT_INVOLVED,
		CB.INPUT_TIME,
		CB.LATEST_POCESS_TIME
		FROM
		<choose>
			<when test="policeType==2">
				(SELECT C.CASE_ID,C.CASE_NO,C.CASE_NAME,C.INPUTER,C.INPUT_TIME,C.AMOUNT_INVOLVED,
				 C.CASE_STATE,C.RECORD_SRC,C.LATEST_POCESS_TIME,C.PROC_KEY,C.INPUT_UNIT
					FROM CASE_BASIC C,
					(SELECT S.CASE_ID
				      FROM CASE_STEP S, ORGANISE O
				      WHERE S.TARGET_ORG_ID = O.ORG_CODE
				      AND S.TARGET_ORG_TYPE = '3'
				      AND O.POLICE_TYPE=2
				      GROUP BY CASE_ID 
				     ) SO
				 WHERE C.CASE_ID=SO.CASE_ID) CB
			</when>
			<when test="policeType==1">
				(SELECT C.CASE_ID,C.CASE_NO,C.CASE_NAME,C.INPUTER,C.INPUT_TIME,C.AMOUNT_INVOLVED,
				 C.CASE_STATE,C.RECORD_SRC,C.LATEST_POCESS_TIME,C.PROC_KEY,C.INPUT_UNIT
					FROM CASE_BASIC C LEFT JOIN
					(SELECT S.CASE_ID,O.POLICE_TYPE
				      FROM CASE_STEP S, ORGANISE O
				      WHERE S.TARGET_ORG_ID = O.ORG_CODE
				      AND S.TARGET_ORG_TYPE = '3'
				      GROUP BY CASE_ID,POLICE_TYPE 
				     ) SO
				     ON C.CASE_ID=SO.CASE_ID
				 WHERE (SO.POLICE_TYPE=1 OR SO.POLICE_TYPE IS NULL)) CB
			</when>				
			<otherwise>
				CASE_BASIC CB 
			</otherwise>
		  </choose>
		, USER_ U, ORGANISE O, CASE_STATE CS
		WHERE CB.INPUTER = U.USER_ID
		AND U.ORG_ID = O.ORG_CODE
		AND CB.CASE_ID = CS.CASE_ID
		AND CB.INPUT_UNIT = O.ORG_CODE
		AND CS.YISONG_STATE IN (2,3)
		<include refid="yisongQuery" />
		ORDER BY O.DISTRICT_CODE ASC,CB.INPUT_TIME DESC
	</select>
	<select id="yisongQueryCount" parameterType="map" resultType="int">
		SELECT COUNT(*)
		FROM 
		<choose>
			<when test="policeType==2">
				(SELECT C.CASE_ID,C.CASE_NO,C.CASE_NAME,C.INPUTER,C.INPUT_TIME,C.AMOUNT_INVOLVED,
				 C.CASE_STATE,C.RECORD_SRC,C.LATEST_POCESS_TIME,C.PROC_KEY,C.INPUT_UNIT
					FROM CASE_BASIC C,
					(SELECT S.CASE_ID
				      FROM CASE_STEP S, ORGANISE O
				      WHERE S.TARGET_ORG_ID = O.ORG_CODE
				      AND S.TARGET_ORG_TYPE = '3'
				      AND O.POLICE_TYPE=2
				      GROUP BY CASE_ID 
				     ) SO
				 WHERE C.CASE_ID=SO.CASE_ID) CB
			</when>
			<when test="policeType==1">
				(SELECT C.CASE_ID,C.CASE_NO,C.CASE_NAME,C.INPUTER,C.INPUT_TIME,C.AMOUNT_INVOLVED,
				 C.CASE_STATE,C.RECORD_SRC,C.LATEST_POCESS_TIME,C.PROC_KEY,C.INPUT_UNIT
					FROM CASE_BASIC C LEFT JOIN
					(SELECT S.CASE_ID,O.POLICE_TYPE
				      FROM CASE_STEP S, ORGANISE O
				      WHERE S.TARGET_ORG_ID = O.ORG_CODE
				      AND S.TARGET_ORG_TYPE = '3'
				      GROUP BY CASE_ID,POLICE_TYPE 
				     ) SO
				     ON C.CASE_ID=SO.CASE_ID
				 WHERE (SO.POLICE_TYPE=1 OR SO.POLICE_TYPE IS NULL)) CB
			</when>				
			<otherwise>
				CASE_BASIC CB 
			</otherwise>
		  </choose>
		, USER_ U, ORGANISE O, CASE_STATE CS
		WHERE CB.INPUTER = U.USER_ID
		AND U.ORG_ID = O.ORG_CODE
		AND CB.CASE_ID = CS.CASE_ID
		AND CB.INPUT_UNIT = O.ORG_CODE
		AND CS.YISONG_STATE IN (2,3)
		<include refid="yisongQuery" />
	</select>

	<select id="getStateList" parameterType="map" resultMap="PenaltyCaseMap">
		SELECT CB.CASE_ID,
           CB.CASE_NO,
           CB.CASE_NAME,
           CB.CASE_STATE,
           PCE.CHUFA_TIME,
           CB.INPUT_TIME,
           CB.LATEST_POCESS_TIME,
           CB.PROC_KEY,
           U.ORG_NAME
   		 FROM 
   		 <choose>
			<when test="policeType==2">
				(SELECT C.CASE_ID,C.CASE_NO,C.CASE_NAME,C.INPUTER,C.INPUT_TIME,C.AMOUNT_INVOLVED,C.IS_SUSPECTED_CRIMINAL,
				 C.ACCEPT_UNIT,C.CASE_STATE,C.RECORD_SRC,C.LATEST_POCESS_TIME,C.PROC_KEY,C.CASE_TYPE,C.IDENTIFY_TYPE,
				 C.IS_LOWER_LIMIT_MONEY
					FROM CASE_BASIC C,
					(SELECT S.CASE_ID
				      FROM CASE_STEP S, ORGANISE O
				      WHERE S.TARGET_ORG_ID = O.ORG_CODE
				      AND S.TARGET_ORG_TYPE = '3'
				      AND O.POLICE_TYPE=2
				      GROUP BY CASE_ID 
				     ) SO
				 WHERE C.CASE_ID=SO.CASE_ID) CB
			</when>
			<when test="policeType==1">
				(SELECT C.CASE_ID,C.CASE_NO,C.CASE_NAME,C.INPUTER,C.INPUT_TIME,C.AMOUNT_INVOLVED,C.IS_SUSPECTED_CRIMINAL,
				 C.ACCEPT_UNIT,C.CASE_STATE,C.RECORD_SRC,C.LATEST_POCESS_TIME,C.PROC_KEY,C.CASE_TYPE,C.IDENTIFY_TYPE,
				 C.IS_LOWER_LIMIT_MONEY
				 FROM CASE_BASIC C LEFT JOIN 
				   (SELECT S.CASE_ID,O.POLICE_TYPE FROM CASE_STEP S, ORGANISE O
				    WHERE S.TARGET_ORG_ID = O.ORG_CODE
				    AND S.TARGET_ORG_TYPE = '3'
				    GROUP BY CASE_ID,O.POLICE_TYPE) SO
				    on C.CASE_ID = SO.CASE_ID
				 WHERE (SO.POLICE_TYPE = 1 OR SO.POLICE_TYPE IS NULL)) CB
			</when>
			<otherwise>
				CASE_BASIC CB 
			</otherwise>
		  </choose>
		  ,CASE_STATE CS,PENALTY_CASE_FORM PCE,V_USER_ORGANISE_DISTRICT U
    	 WHERE CB.CASE_ID=CS.CASE_ID
    	 AND CB.CASE_ID=PCE.CASE_ID(+)
   		 AND CB.INPUTER=U.USER_ID
		<if test="districtId!=null and districtId!='' ">
			AND U.DISTRICT_CODE LIKE #{districtId}||'%'
		</if>
		<if test="shortDistrictId!=null and shortDistrictId!='' ">
			AND U.DISTRICT_CODE LIKE #{shortDistrictId}||'%'
		</if>
		<if test="industryType!=null">
			  AND U.INDUSTRY_TYPE= #{industryType}
		</if>
		<if test="orgPath!=null">
			  AND U.ORG_PATH LIKE #{orgPath} ||'%'
		</if>
		<if test="caseNo != null and caseNo!='' ">
			AND CB.CASE_NO LIKE CONCAT(CONCAT('%',#{caseNo}),'%')
		</if>
		<if test="caseName != null and caseName!='' ">
			AND CB.CASE_NAME LIKE CONCAT(CONCAT('%',#{caseName}),'%')
		</if>
		<if test="isDqdj != null and isDqdj!='' ">
			AND PCE.IS_DQDJ =#{isDqdj}
		</if>
		<choose>
			<when test="chufaState!=null">
				AND CS.CHUFA_STATE=#{chufaState}
			</when>
			<when test="yisongState!=null">
				AND CS.YISONG_STATE = #{yisongState}
			</when>
			<when test="lianState!=null and lianState==3">
				AND CS.LIAN_STATE&gt;=#{lianState}
			</when>
			<when test="lianState!=null and lianState==2">
				AND CS.LIAN_STATE=#{lianState}
			</when>
			<when test="lianState!=null and lianState==1">
				AND CS.LIAN_STATE=#{lianState}
			</when>
			<when test="lianState!=null and lianState==4">
				AND CS.LIAN_STATE=#{lianState}
			</when>
			<when test="daibuState!=null">
				AND CS.DAIBU_STATE=#{daibuState}
			</when>
			<when test="qisuState!=null">
				AND CS.QISU_STATE=#{qisuState}
			</when>
			<when test="panjueState!=null">
				AND CS.PANJUE_STATE=#{panjueState}
			</when>
			<when test="jieanState!=null">
				AND CS.JIEAN_STATE=#{jieanState}
			</when>
			<when test="yisongDouState!=null">
				AND CS.YISONG_STATE IN (2,3)
			</when>
			<when test="reqExplainState!=null">
				AND CS.REQ_EXPLAIN_STATE=#{reqExplainState}
			</when>
			<when test="caseState!=null">
				AND CB.CASE_STATE=#{caseState}
			</when>
			<when test="caseType!=null">
				AND CB.CASE_TYPE=#{caseType}
			</when>
			<when test="xingzhenglianState!=null">
				AND CS.XINGZHENGLIAN_STATE=#{xingzhenglianState}
			</when>
			<when test="detentionState!=null">
				AND CS.DETENTION_STATE=#{detentionState}
			</when>
			<when test="lianSupState!=null">
				<![CDATA[AND CS.LIAN_SUP_STATE>=1]]>
			</when>
		</choose>
		<if test="startTime != null and startTime!='' and startTime!='null'">
			<![CDATA[
			   AND CB.INPUT_TIME >= TO_DATE(#{startTime},'yyyy-MM')
			 	]]>
		</if>
		<if test="endTime != null and endTime!='' and endTime!='null'">
			 <![CDATA[
			     AND CB.INPUT_TIME  < TO_DATE(#{endTime},'yyyy-MM') + INTERVAL '1' MONTH
			 	]]>
		</if>
		<if test="yearCode!= null and yearCode!='null' and yearCode!=''">
			AND TO_CHAR(CB.INPUT_TIME,'yyyy') = #{yearCode}
		</if>
		<!-- regionStatsFilter START -->
		<if test="industry_Type !=null">
			AND U.INDUSTRY_TYPE IS NOT NULL
		</if>
		<if test="chufatimescount !=null">
			AND PCE.CHUFA_TIMES&gt;#{chufatimescount}
		</if>
		<if test="beyondeightycount !=null">
			AND PCE.IS_BEYOND_EIGHTY=#{beyondeightycount}
		</if>
		<if test="identifycount !=null">
			AND PCE.IDENTIFY_TYPE != #{identifycount} AND PCE.IDENTIFY_TYPE IS NOT NULL
		</if>
		<if test="lowerlimitmoneycount !=null">
			AND PCE.IS_LOWER_LIMIT_MONEY=#{lowerlimitmoneycount}
		</if>
		<if test="descusscount !=null">
			AND PCE.IS_DESCUSS=#{descusscount}
		</if>
		<if test="seriouscasecount !=null">
			AND PCE.IS_SERIOUS_CASE=#{seriouscasecount}
		</if>
		<if test="casecount !=null">
			AND CB.IS_SUSPECTED_CRIMINAL=1
		</if>
		<if test="penalty_num !=null">
			AND CS.CHUFA_STATE= 2 
		</if>
		<!-- regionStatsFilter END -->
		<if test="quarterCode!= null and quarterCode!='null' and quarterCode!=''">
			<if test="quarterCode==1">
				AND TO_CHAR(CB.INPUT_TIME,'MM') &gt;= 01
				AND TO_CHAR(CB.INPUT_TIME,'MM') &lt;= 03
			</if>
			<if test="quarterCode==2">
				AND TO_CHAR(CB.INPUT_TIME,'MM') &gt;= 04
				AND TO_CHAR(CB.INPUT_TIME,'MM') &lt;= 06
			</if>
			<if test="quarterCode==3">
				AND TO_CHAR(CB.INPUT_TIME,'MM') &gt;= 07
				AND TO_CHAR(CB.INPUT_TIME,'MM') &lt;= 09
			</if>
			<if test="quarterCode==4">
				AND TO_CHAR(CB.INPUT_TIME,'MM') &gt;= 10
				AND TO_CHAR(CB.INPUT_TIME,'MM') &lt;= 12
			</if>
		</if>
		<if test="monthCode!= null and monthCode!='null' and monthCode!=''">
			AND TO_CHAR(CB.INPUT_TIME,'yyyyMM') = #{monthCode}
		</if>
		ORDER BY CB.LATEST_POCESS_TIME DESC,CB.CASE_ID
	</select>
	<select id="getStateCount" parameterType="map" resultType="java.lang.Integer">
		 SELECT COUNT(CB.CASE_ID) 
		 FROM 
		 <choose>
			<when test="policeType==2">
				(SELECT C.CASE_ID,C.CASE_NO,C.CASE_NAME,C.INPUTER,C.INPUT_TIME,C.AMOUNT_INVOLVED,C.IS_SUSPECTED_CRIMINAL,
				 C.ACCEPT_UNIT,C.CASE_STATE,C.RECORD_SRC,C.LATEST_POCESS_TIME,C.PROC_KEY,C.CASE_TYPE,C.IDENTIFY_TYPE,
				 C.IS_LOWER_LIMIT_MONEY
					FROM CASE_BASIC C,
					(SELECT S.CASE_ID
				      FROM CASE_STEP S, ORGANISE O
				      WHERE S.TARGET_ORG_ID = O.ORG_CODE
				      AND S.TARGET_ORG_TYPE = '3'
				      AND O.POLICE_TYPE=2
				      GROUP BY CASE_ID 
				     ) SO
				 WHERE C.CASE_ID=SO.CASE_ID) CB
			</when>
			<when test="policeType==1">
				(SELECT C.CASE_ID,C.CASE_NO,C.CASE_NAME,C.INPUTER,C.INPUT_TIME,C.AMOUNT_INVOLVED,C.IS_SUSPECTED_CRIMINAL,
				 C.ACCEPT_UNIT,C.CASE_STATE,C.RECORD_SRC,C.LATEST_POCESS_TIME,C.PROC_KEY,C.CASE_TYPE,C.IDENTIFY_TYPE,
				 C.IS_LOWER_LIMIT_MONEY
				 FROM CASE_BASIC C LEFT JOIN 
				   (SELECT S.CASE_ID,O.POLICE_TYPE FROM CASE_STEP S, ORGANISE O
				    WHERE S.TARGET_ORG_ID = O.ORG_CODE
				    AND S.TARGET_ORG_TYPE = '3'
				    GROUP BY CASE_ID,O.POLICE_TYPE) SO
				    on C.CASE_ID = SO.CASE_ID
				 WHERE (SO.POLICE_TYPE = 1 OR SO.POLICE_TYPE IS NULL)) CB
			</when>
			<otherwise>
				CASE_BASIC CB 
			</otherwise>
		  </choose>
		 ,CASE_STATE CS,V_USER_ORGANISE_DISTRICT U,PENALTY_CASE_FORM PCE
    	 WHERE CB.CASE_ID=CS.CASE_ID
    	 AND CB.CASE_ID=PCE.CASE_ID(+)
   		 AND CB.INPUTER=U.USER_ID
		<if test="districtId!=null and districtId!='' ">
			AND U.DISTRICT_CODE LIKE #{districtId}||'%' 
		</if>
		<if test="shortDistrictId!=null and shortDistrictId!='' ">
			AND U.DISTRICT_CODE LIKE #{shortDistrictId}||'%'
		</if>
		<if test="industryType!=null">
			  AND U.INDUSTRY_TYPE= #{industryType}
		</if>
		<if test="orgPath!=null">
			  AND U.ORG_PATH LIKE #{orgPath} ||'%'
		</if>
		<if test="caseNo != null and caseNo!='' ">
			AND CB.CASE_NO LIKE CONCAT(CONCAT('%',#{caseNo}),'%')
		</if>
		<if test="caseName != null and caseName!='' ">
			AND CB.CASE_NAME LIKE CONCAT(CONCAT('%',#{caseName}),'%')
		</if>
		<if test="isDqdj != null and isDqdj!='' ">
			AND PCE.IS_DQDJ =#{isDqdj}
		</if>
		<choose>
			<when test="chufaState!=null">
				AND CS.CHUFA_STATE=#{chufaState}
			</when>
			<when test="yisongState!=null">
				AND CS.YISONG_STATE = #{yisongState}
			</when>
			<when test="lianState!=null and lianState==3">
				AND CS.LIAN_STATE&gt;=#{lianState}
			</when>
			<when test="lianState!=null and lianState==2">
				AND CS.LIAN_STATE=#{lianState}
			</when>
			<when test="lianState!=null and lianState==1">
				AND CS.LIAN_STATE=#{lianState}
			</when>
			<when test="lianState!=null and lianState==4">
				AND CS.LIAN_STATE=#{lianState}
			</when>
			<when test="daibuState!=null">
				AND CS.DAIBU_STATE=#{daibuState}
			</when>
			<when test="qisuState!=null">
				AND CS.QISU_STATE=#{qisuState}
			</when>
			<when test="panjueState!=null">
				AND CS.PANJUE_STATE=#{panjueState}
			</when>
			<when test="jieanState!=null">
				AND CS.JIEAN_STATE=#{jieanState}
			</when>
			<when test="yisongDouState!=null">
				AND CS.YISONG_STATE IN (2,3)
			</when>
			<when test="reqExplainState!=null">
				AND CS.REQ_EXPLAIN_STATE=#{reqExplainState}
			</when>
			<when test="caseState!=null">
				AND CB.CASE_STATE=#{caseState}
			</when>
			<when test="caseType!=null">
				AND CB.CASE_TYPE=#{caseType}
			</when>
			<when test="xingzhenglianState!=null">
				AND CS.XINGZHENGLIAN_STATE=#{xingzhenglianState}
			</when>	
			<when test="detentionState!=null">
				AND CS.DETENTION_STATE=#{detentionState}
			</when>
			<when test="lianSupState!=null">
				<![CDATA[AND CS.LIAN_SUP_STATE>=1]]>
			</when>
		</choose>
		<if test="startTime != null and startTime!='' and startTime!='null'">
			<![CDATA[
			   AND CB.INPUT_TIME >= TO_DATE(#{startTime},'yyyy-MM')
			 	]]>
		</if>
		<if test="endTime != null and endTime!='' and endTime!='null'">
			 <![CDATA[
			     AND CB.INPUT_TIME  < TO_DATE(#{endTime},'yyyy-MM') + INTERVAL '1' MONTH
			 	]]>
		</if>
		<if test="yearCode!= null and yearCode!='null' and yearCode!=''">
			AND TO_CHAR(CB.INPUT_TIME,'yyyy') = #{yearCode}
		</if>
		<if test="quarterCode!= null and quarterCode!='null' and quarterCode!=''">
			<if test="quarterCode==1">
				AND TO_CHAR(CB.INPUT_TIME,'MM') &gt;= 01
				AND TO_CHAR(CB.INPUT_TIME,'MM') &lt;= 03
			</if>
			<if test="quarterCode==2">
				AND TO_CHAR(CB.INPUT_TIME,'MM') &gt;= 04
				AND TO_CHAR(CB.INPUT_TIME,'MM') &lt;= 06
			</if>
			<if test="quarterCode==3">
				AND TO_CHAR(CB.INPUT_TIME,'MM') &gt;= 07
				AND TO_CHAR(CB.INPUT_TIME,'MM') &lt;= 09
			</if>
			<if test="quarterCode==4">
				AND TO_CHAR(CB.INPUT_TIME,'MM') &gt;= 10
				AND TO_CHAR(CB.INPUT_TIME,'MM') &lt;= 12
			</if>
		</if>
		<if test="monthCode!= null and monthCode!='null' and monthCode!=''">
			AND TO_CHAR(CB.INPUT_TIME,'yyyyMM') = #{monthCode}
		</if>
		<!-- regionStatsFilter START -->
		<if test="industry_Type !=null">
			AND U.INDUSTRY_TYPE IS NOT NULL
		</if>
		<if test="chufatimescount !=null">
			AND PCE.CHUFA_TIMES&gt;1
		</if>
		<if test="beyondeightycount !=null">
			AND PCE.IS_BEYOND_EIGHTY=#{beyondeightycount}
		</if>
		<if test="identifycount !=null">
			AND PCE.IDENTIFY_TYPE != #{identifycount} AND PCE.IDENTIFY_TYPE IS NOT NULL
		</if>
		<if test="lowerlimitmoneycount !=null">
			AND PCE.IS_LOWER_LIMIT_MONEY=#{lowerlimitmoneycount}
		</if>
		<if test="descusscount !=null">
			AND PCE.IS_DESCUSS=#{descusscount}
		</if>
		<if test="seriouscasecount !=null">
			AND PCE.IS_SERIOUS_CASE=#{seriouscasecount}
		</if>
		<if test="casecount !=null">
			AND CB.IS_SUSPECTED_CRIMINAL=1 
		</if>
		<if test="penalty_num !=null">
			AND CS.CHUFA_STATE=2 
		</if>
		
		<!-- regionStatsFilter END -->
	</select>
	
	<!--???????????? -->
  <select id="getChufaOrCrimeList" parameterType="map" resultMap="PenaltyCaseMap">
		SELECT CB.CASE_ID,
           CB.CASE_NO,
           CB.CASE_NAME,
           CB.CASE_STATE,
           PCE.CHUFA_TIME,
           CB.INPUT_TIME,
           CB.LATEST_POCESS_TIME,
           CB.PROC_KEY
    	FROM CASE_BASIC CB,CASE_STATE CS,PENALTY_CASE_EXT PCE,V_USER_ORGANISE_DISTRICT U
    	WHERE CB.CASE_ID=CS.CASE_ID
    	AND CB.CASE_ID=PCE.CASE_ID(+)
    	AND CB.INPUTER=U.user_id
			<choose>
				<when test="districtId!=null and districtId!='' ">
					AND U.district_code IN 
					<foreach close=")" collection="districtLists" item="districtList" open="(" separator=",">
	       				#{districtList}
	       			</foreach>
        </when>
				<otherwise>
					AND CB.INPUTER IN (SELECT A.USER_ID FROM USER_ A WHERE 
    				A.ORG_ID IN  
					<foreach close=")" collection="orgCodeLists" item="orgCode" open="(" separator=",">
	       				#{orgCode}
	       			</foreach>
					)
        </otherwise>
			</choose>
			AND (CS.YISONG_STATE = 2 OR CS.YISONG_STATE = 3)
		<if test="startTime != null">
			<![CDATA[
			   AND CB.INPUT_TIME >= #{startTime,jdbcType=TIMESTAMP}
			 	]]>
		</if>

		<if test="endTime != null">
			 <![CDATA[
			     AND CB.INPUT_TIME  < #{endTime,jdbcType=TIMESTAMP}
			 	]]>
		</if>
		<!-- ??????????(?????)??????? -->
		<if test="yearCode!= null and yearCode!='null' and yearCode!=''">
			AND to_char(CB.INPUT_TIME,'yyyy') = #{yearCode}
		</if>
		<if test="quarterCode!= null and quarterCode!='null' and quarterCode!=''">
			<if test="quarterCode==1">
				AND to_char(CB.INPUT_TIME,'MM') &gt;= 01
				AND to_char(CB.INPUT_TIME,'MM') &lt;= 03
			</if>
			<if test="quarterCode==2">
				AND to_char(CB.INPUT_TIME,'MM') &gt;= 04
				AND to_char(CB.INPUT_TIME,'MM') &lt;= 06
			</if>
			<if test="quarterCode==3">
				AND to_char(CB.INPUT_TIME,'MM') &gt;= 07
				AND to_char(CB.INPUT_TIME,'MM') &lt;= 09
			</if>
			<if test="quarterCode==4">
				AND to_char(CB.INPUT_TIME,'MM') &gt;= 10
				AND to_char(CB.INPUT_TIME,'MM') &lt;= 12
			</if>
		</if>
		<if test="monthCode!= null and monthCode!='null' and monthCode!=''">
			AND to_char(CB.INPUT_TIME,'yyyyMM') = #{monthCode}
		</if>
		ORDER BY CB.LATEST_POCESS_TIME DESC,CB.CASE_ID
	</select>
	<select id="getChufaOrCrimeCount" parameterType="map" resultType="java.lang.Integer">
		SELECT COUNT(CB.CASE_ID)
		FROM CASE_BASIC CB,CASE_STATE CS,V_USER_ORGANISE_DISTRICT U
    	WHERE CB.CASE_ID=CS.CASE_ID
    	AND CB.INPUTER=U.user_id
			<choose>
				<when test="districtId!=null and districtId!='' ">
					AND U.district_code IN 
					<foreach close=")" collection="districtLists" item="districtList" open="(" separator=",">
	       				#{districtList}
	       			</foreach>
            </when>
				<otherwise>
					AND CB.INPUTER IN (SELECT A.USER_ID FROM USER_ A WHERE 
    				A.ORG_ID IN  
					<foreach close=")" collection="orgCodeLists" item="orgCode" open="(" separator=",">
	       				#{orgCode}
	       			</foreach>
					)
        </otherwise>
			</choose>
				AND (CS.YISONG_STATE = 2 OR CS.YISONG_STATE = 3)
		<if test="startTime != null">
			<![CDATA[
			   	AND CB.INPUT_TIME >= #{startTime,jdbcType=TIMESTAMP}
			 	]]>
		</if>

		<if test="endTime != null">
			 <![CDATA[
			     AND CB.INPUT_TIME  < #{endTime,jdbcType=TIMESTAMP}
			     
			 	]]>
		</if>
		<!-- ??????????(?????)??????? -->
		<if test="yearCode!= null and yearCode!='null' and yearCode!=''">
			AND to_char(CB.INPUT_TIME,'yyyy') = #{yearCode}
		</if>
		<if test="quarterCode!= null and quarterCode!='null' and quarterCode!=''">
			<if test="quarterCode==1">
				AND to_char(CB.INPUT_TIME,'MM') &gt;= 01
				AND to_char(CB.INPUT_TIME,'MM') &lt;= 03
			</if>
			<if test="quarterCode==2">
				AND to_char(CB.INPUT_TIME,'MM') &gt;= 04
				AND to_char(CB.INPUT_TIME,'MM') &lt;= 06
			</if>
			<if test="quarterCode==3">
				AND to_char(CB.INPUT_TIME,'MM') &gt;= 07
				AND to_char(CB.INPUT_TIME,'MM') &lt;= 09
			</if>
			<if test="quarterCode==4">
				AND to_char(CB.INPUT_TIME,'MM') &gt;= 10
				AND to_char(CB.INPUT_TIME,'MM') &lt;= 12
			</if>
		</if>
		<if test="monthCode!= null and monthCode!='null' and monthCode!=''">
			AND to_char(CB.INPUT_TIME,'yyyyMM') = #{monthCode}
		</if>
	</select>
	

	<select id="getDaibuCaseCount" parameterType="map" resultType="java.lang.Integer">
		SELECT COUNT(DISTINCT CB.CASE_ID)
    	FROM 
    	<choose>
			<when test="policeType==2">
				(SELECT C.CASE_ID,C.CASE_NO,C.CASE_NAME,C.INPUTER,C.INPUT_TIME,C.AMOUNT_INVOLVED,
				 C.ACCEPT_UNIT,C.CASE_STATE,C.RECORD_SRC,C.LATEST_POCESS_TIME,C.PROC_KEY,C.CASE_TYPE
					FROM CASE_BASIC C,
					(SELECT S.CASE_ID
				      FROM CASE_STEP S, ORGANISE O
				      WHERE S.TARGET_ORG_ID = O.ORG_CODE
				      AND S.TARGET_ORG_TYPE = '3'
				      AND O.POLICE_TYPE=2
				      GROUP BY CASE_ID 
				     ) SO
				 WHERE C.CASE_ID=SO.CASE_ID) CB
			</when>
			<when test="policeType==1">
				(SELECT C.CASE_ID,C.CASE_NO,C.CASE_NAME,C.INPUTER,C.INPUT_TIME,C.AMOUNT_INVOLVED,
				 C.ACCEPT_UNIT,C.CASE_STATE,C.RECORD_SRC,C.LATEST_POCESS_TIME,C.PROC_KEY,C.CASE_TYPE
				 FROM CASE_BASIC C LEFT JOIN 
				   (SELECT S.CASE_ID,O.POLICE_TYPE FROM CASE_STEP S, ORGANISE O
				    WHERE S.TARGET_ORG_ID = O.ORG_CODE
				    AND S.TARGET_ORG_TYPE = '3'
				    GROUP BY CASE_ID,O.POLICE_TYPE) SO
				    on C.CASE_ID = SO.CASE_ID
				 WHERE (SO.POLICE_TYPE = 1 OR SO.POLICE_TYPE IS NULL)) CB
			</when>
			<otherwise>
				CASE_BASIC CB 
			</otherwise>
		  </choose>
    	,CASE_STATE CS,PENALTY_CASE_FORM PCE,CASE_XIANYIREN K
    	WHERE CB.CASE_ID=CS.CASE_ID
    	AND CB.CASE_ID=PCE.CASE_ID(+)
   		AND CB.CASE_ID=K.CASE_ID
		<if test="districtId!=null and districtId!='' ">
			AND EXISTS (
       		SELECT U.USER_ID FROM V_USER_ORGANISE_DISTRICT U WHERE 
           	U.USER_ID=CB.INPUTER AND U.DISTRICT_CODE LIKE #{districtId}||'%'  
			)
		</if>
		<if test="shortDistrictId!=null and shortDistrictId!='' ">
			AND EXISTS (
       		SELECT U.USER_ID FROM V_USER_ORGANISE_DISTRICT U WHERE 
           	U.USER_ID=CB.INPUTER AND U.DISTRICT_CODE LIKE #{shortDistrictId}||'%'
			)
		</if>
		<if test="industryType!=null">
			  AND EXISTS (
        		SELECT U.USER_ID FROM V_USER_ORGANISE_DISTRICT U WHERE 
            	U.USER_ID=CB.INPUTER AND U.INDUSTRY_TYPE= #{industryType}
				)
		</if>
		<if test="orgPath!=null">
			AND EXISTS (
        		SELECT U.USER_ID FROM V_USER_ORGANISE_DISTRICT U WHERE 
            	U.USER_ID=CB.INPUTER AND U.ORG_PATH LIKE #{orgPath} ||'%'
				)
		</if>
		<if test="procKey!=null">
			   AND CB.PROC_KEY=#{procKey}
		</if>
			AND K.DAIBU_STATE=3
			AND CS.DAIBU_STATE=2
		<if test="caseNo != null">
			AND CB.CASE_NO LIKE CONCAT(CONCAT('%',#{caseNo}),'%')
		</if>
		<if test="caseName != null">
			AND CB.CASE_NAME LIKE CONCAT(CONCAT('%',#{caseName}),'%')
		</if>
		<if test="isDqdj != null and isDqdj!='' ">
  			AND PCE.IS_DQDJ =#{isDqdj}
		</if>
		<if test="startTime != null and startTime!='' and startTime!='null'">
			<![CDATA[
			   AND CB.INPUT_TIME >= TO_DATE(#{startTime},'yyyy-MM')
			 	]]>
		</if>
		<if test="endTime != null and endTime!='' and endTime!='null'">
			 <![CDATA[
			     AND CB.INPUT_TIME  < TO_DATE(#{endTime},'yyyy-MM') + INTERVAL '1' MONTH
			 	]]>
		</if>
		<if test="yearCode!= null and yearCode!='null' and yearCode!=''">
			AND TO_CHAR(CB.INPUT_TIME,'yyyy') = #{yearCode}
		</if>
		<if test="quarterCode!= null and quarterCode!='null' and quarterCode!=''">
			<if test="quarterCode==1">
				AND TO_CHAR(CB.INPUT_TIME,'MM') &gt;= 01
				AND TO_CHAR(CB.INPUT_TIME,'MM') &lt;= 03
			</if>
			<if test="quarterCode==2">
				AND TO_CHAR(CB.INPUT_TIME,'MM') &gt;= 04
				AND TO_CHAR(CB.INPUT_TIME,'MM') &lt;= 06
			</if>
			<if test="quarterCode==3">
				AND TO_CHAR(CB.INPUT_TIME,'MM') &gt;= 07
				AND TO_CHAR(CB.INPUT_TIME,'MM') &lt;= 09
			</if>
			<if test="quarterCode==4">
				AND TO_CHAR(CB.INPUT_TIME,'MM') &gt;= 10
				AND TO_CHAR(CB.INPUT_TIME,'MM') &lt;= 12
			</if>
		</if>
		<if test="monthCode!= null and monthCode!='null' and monthCode!=''">
			AND TO_CHAR(CB.INPUT_TIME,'yyyyMM') = #{monthCode}
		</if>
	</select>
	<select id="getDaibuCaseList" parameterType="map" resultMap="PenaltyCaseMap">
		SELECT DISTINCT CB.CASE_ID,
           CB.CASE_NO,
           CB.CASE_NAME,
           CB.CASE_STATE,
           PCE.CHUFA_TIME,
           CB.INPUT_TIME,
           CB.LATEST_POCESS_TIME,
           CB.PROC_KEY,
           (SELECT ORG_NAME FROM ORGANISE WHERE ORG_CODE=CB.INPUT_UNIT)as orgName
    	FROM 
    	<choose>
			<when test="policeType==2">
				(SELECT C.CASE_ID,C.CASE_NO,C.CASE_NAME,C.INPUTER,C.INPUT_TIME,C.AMOUNT_INVOLVED,
				 C.ACCEPT_UNIT,C.CASE_STATE,C.RECORD_SRC,C.LATEST_POCESS_TIME,C.PROC_KEY,C.CASE_TYPE
					FROM CASE_BASIC C,
					(SELECT S.CASE_ID
				      FROM CASE_STEP S, ORGANISE O
				      WHERE S.TARGET_ORG_ID = O.ORG_CODE
				      AND S.TARGET_ORG_TYPE = '3'
				      AND O.POLICE_TYPE=2
				      GROUP BY CASE_ID 
				     ) SO
				 WHERE C.CASE_ID=SO.CASE_ID) CB
			</when>
			<when test="policeType==1">
				 (SELECT C.CASE_ID,C.CASE_NO,C.CASE_NAME,C.INPUTER,C.INPUT_TIME,C.AMOUNT_INVOLVED,
				 C.ACCEPT_UNIT,C.CASE_STATE,C.RECORD_SRC,C.LATEST_POCESS_TIME,C.PROC_KEY,C.CASE_TYPE
				 FROM CASE_BASIC C LEFT JOIN 
				   (SELECT S.CASE_ID,O.POLICE_TYPE FROM CASE_STEP S, ORGANISE O
				    WHERE S.TARGET_ORG_ID = O.ORG_CODE
				    AND S.TARGET_ORG_TYPE = '3'
				    GROUP BY CASE_ID,O.POLICE_TYPE) SO
				    on C.CASE_ID = SO.CASE_ID
				 WHERE (SO.POLICE_TYPE = 1 OR SO.POLICE_TYPE IS NULL)) CB
			</when>
			<otherwise>
				CASE_BASIC CB 
			</otherwise>
		  </choose>
    	,CASE_STATE CS,PENALTY_CASE_FORM PCE,CASE_XIANYIREN K
    	WHERE CB.CASE_ID=CS.CASE_ID
    	AND CB.CASE_ID=PCE.CASE_ID(+)
   		AND CB.CASE_ID=K.CASE_ID
		<if test="districtId!=null and districtId!='' ">
			AND EXISTS (
       		SELECT U.USER_ID FROM V_USER_ORGANISE_DISTRICT U WHERE 
           	U.USER_ID=CB.INPUTER AND U.DISTRICT_CODE LIKE #{districtId}||'%' 
			)
		</if>
		<if test="shortDistrictId!=null and shortDistrictId!='' ">
			AND EXISTS (
       		SELECT U.USER_ID FROM V_USER_ORGANISE_DISTRICT U WHERE 
           	U.USER_ID=CB.INPUTER AND U.DISTRICT_CODE LIKE #{shortDistrictId}||'%'
			)
		</if>
		<if test="industryType!=null">
			  AND EXISTS (
        		SELECT U.USER_ID FROM V_USER_ORGANISE_DISTRICT U WHERE 
            	U.USER_ID=CB.INPUTER AND U.INDUSTRY_TYPE= #{industryType}
				)
		</if>
		<if test="orgPath!=null">
			AND EXISTS (
        		SELECT U.USER_ID FROM V_USER_ORGANISE_DISTRICT U WHERE 
            	U.USER_ID=CB.INPUTER AND U.ORG_PATH LIKE #{orgPath} ||'%'
				)
		</if>
		<if test="procKey!=null">
			   AND CB.PROC_KEY=#{procKey}
		</if>
			AND K.DAIBU_STATE=3
			AND CS.DAIBU_STATE=2
		<if test="caseNo != null">
			AND CB.CASE_NO LIKE CONCAT(CONCAT('%',#{caseNo}),'%')
		</if>
		<if test="caseName != null">
			AND CB.CASE_NAME LIKE CONCAT(CONCAT('%',#{caseName}),'%')
		</if>
		<if test="isDqdj != null and isDqdj!='' ">
  			AND PCE.IS_DQDJ =#{isDqdj}
		</if>
		<if test="startTime != null and startTime!='' and startTime!='null'">
			<![CDATA[
			   AND CB.INPUT_TIME >= TO_DATE(#{startTime},'yyyy-MM')
			 	]]>
		</if>
		<if test="endTime != null and endTime!='' and endTime!='null'">
			 <![CDATA[
			     AND CB.INPUT_TIME  < TO_DATE(#{endTime},'yyyy-MM') + INTERVAL '1' MONTH
			 	]]>
		</if>
		<if test="yearCode!= null and yearCode!='null' and yearCode!=''">
			AND TO_CHAR(CB.INPUT_TIME,'yyyy') = #{yearCode}
		</if>
		<if test="quarterCode!= null and quarterCode!='null' and quarterCode!=''">
			<if test="quarterCode==1">
				AND TO_CHAR(CB.INPUT_TIME,'MM') &gt;= 01
				AND TO_CHAR(CB.INPUT_TIME,'MM') &lt;= 03
			</if>
			<if test="quarterCode==2">
				AND TO_CHAR(CB.INPUT_TIME,'MM') &gt;= 04
				AND TO_CHAR(CB.INPUT_TIME,'MM') &lt;= 06
			</if>
			<if test="quarterCode==3">
				AND TO_CHAR(CB.INPUT_TIME,'MM') &gt;= 07
				AND TO_CHAR(CB.INPUT_TIME,'MM') &lt;= 09
			</if>
			<if test="quarterCode==4">
				AND TO_CHAR(CB.INPUT_TIME,'MM') &gt;= 10
				AND TO_CHAR(CB.INPUT_TIME,'MM') &lt;= 12
			</if>
		</if>
		<if test="monthCode!= null and monthCode!='null' and monthCode!=''">
			AND TO_CHAR(CB.INPUT_TIME,'yyyyMM') = #{monthCode}
		</if>
		ORDER BY CB.LATEST_POCESS_TIME DESC
	</select>

	<select id="getAccuseList" parameterType="map" resultMap="PenaltyCaseMap">
	SELECT CB.CASE_ID,CB.CASE_NO,CB.CASE_NAME,CB.CASE_STATE,PCE.CHUFA_TIME,CB.INPUT_TIME,CB.LATEST_POCESS_TIME,
	CB.PROC_KEY,UOD.ORG_NAME
    FROM 
	<choose>
			<when test="policeType==2">
				(SELECT C.CASE_ID,C.CASE_NO,C.CASE_NAME,C.INPUTER,C.INPUT_TIME,C.AMOUNT_INVOLVED,
				 C.ACCEPT_UNIT,C.CASE_STATE,C.RECORD_SRC,C.LATEST_POCESS_TIME,C.PROC_KEY,C.CASE_TYPE
					FROM CASE_BASIC C,
					(SELECT S.CASE_ID
				      FROM CASE_STEP S, ORGANISE O
				      WHERE S.TARGET_ORG_ID = O.ORG_CODE
				      AND S.TARGET_ORG_TYPE = '3'
				      AND O.POLICE_TYPE=2
				      GROUP BY CASE_ID 
				     ) SO
				 WHERE C.CASE_ID=SO.CASE_ID) CB
			</when>
			<when test="policeType==1">
				(SELECT C.CASE_ID,C.CASE_NO,C.CASE_NAME,C.INPUTER,C.INPUT_TIME,C.AMOUNT_INVOLVED,
						C.ACCEPT_UNIT,C.CASE_STATE,C.RECORD_SRC,C.LATEST_POCESS_TIME,C.PROC_KEY,C.CASE_TYPE
				FROM CASE_BASIC C,
					(SELECT S.CASE_ID,MAX(O.POLICE_TYPE)AS POLICE_TYPE
					FROM CASE_STEP S, ORGANISE O
					WHERE S.TARGET_ORG_ID = O.ORG_CODE
					AND S.TARGET_ORG_TYPE = '3'
					GROUP BY CASE_ID 
					) SO
				WHERE C.CASE_ID=SO.CASE_ID
			   AND (SO.POLICE_TYPE=1 OR SO.POLICE_TYPE IS NULL)) CB
			</when>
			<otherwise>
				CASE_BASIC CB 
			</otherwise>
	</choose>
    ,PENALTY_CASE_EXT PCE,
    (SELECT A.CASE_ID,A.ACCUSE_ID FROM CASE_ACCUSE A
    UNION 
    SELECT B.CASE_ID,B.ACCUSE_ID FROM XIANYIREN_ACCUSE B
    GROUP BY ACCUSE_ID,CASE_ID ) CA,
    V_USER_ORGANISE_DISTRICT UOD
    WHERE CB.CASE_ID=PCE.CASE_ID(+)
    AND CB.CASE_ID=CA.CASE_ID
    AND CB.INPUTER=UOD.USER_ID
		<if test="districtId!=null and districtId!='' ">
			AND UOD.DISTRICT_CODE like #{districtId} ||'%'
		</if>
		<if test="accuseId!=null">
			AND CA.ACCUSE_ID= #{accuseId}
		</if>
		<if test="startTime != null and startTime !=''">
			<![CDATA[
			   AND  CB.INPUT_TIME >= #{startTime,jdbcType=TIMESTAMP}
			 	]]>
		</if>

		<if test="endTime != null and endTime !=''">
			 <![CDATA[
			     AND CB.INPUT_TIME  < #{endTime,jdbcType=TIMESTAMP}
			 	]]>
		</if>
		ORDER BY CB.LATEST_POCESS_TIME DESC,CB.CASE_ID
	</select>
	<select id="getAccuseCount" parameterType="map" resultType="java.lang.Integer">
	SELECT COUNT(CB.CASE_ID) 
    FROM 
    <choose>
			<when test="policeType==2">
				(SELECT C.CASE_ID,C.CASE_NO,C.CASE_NAME,C.INPUTER,C.INPUT_TIME,C.AMOUNT_INVOLVED,
				 C.ACCEPT_UNIT,C.CASE_STATE,C.RECORD_SRC,C.LATEST_POCESS_TIME,C.PROC_KEY,C.CASE_TYPE
					FROM CASE_BASIC C,
					(SELECT S.CASE_ID
				      FROM CASE_STEP S, ORGANISE O
				      WHERE S.TARGET_ORG_ID = O.ORG_CODE
				      AND S.TARGET_ORG_TYPE = '3'
				      AND O.POLICE_TYPE=2
				      GROUP BY CASE_ID 
				     ) SO
				 WHERE C.CASE_ID=SO.CASE_ID) CB
			</when>
			<when test="policeType==1">
				 (SELECT C.CASE_ID,C.CASE_NO,C.CASE_NAME,C.INPUTER,C.INPUT_TIME,C.AMOUNT_INVOLVED,
						C.ACCEPT_UNIT,C.CASE_STATE,C.RECORD_SRC,C.LATEST_POCESS_TIME,C.PROC_KEY,C.CASE_TYPE
				FROM CASE_BASIC C,
					(SELECT S.CASE_ID,MAX(O.POLICE_TYPE)AS POLICE_TYPE
					FROM CASE_STEP S, ORGANISE O
					WHERE S.TARGET_ORG_ID = O.ORG_CODE
					AND S.TARGET_ORG_TYPE = '3'
					GROUP BY CASE_ID 
					) SO
				WHERE C.CASE_ID=SO.CASE_ID
			   AND (SO.POLICE_TYPE=1 OR SO.POLICE_TYPE IS NULL)) CB
			</when>
			<otherwise>
				CASE_BASIC CB 
			</otherwise>
	</choose>
    ,
    (SELECT A.CASE_ID,A.ACCUSE_ID FROM CASE_ACCUSE A
    UNION 
    SELECT B.CASE_ID,B.ACCUSE_ID FROM XIANYIREN_ACCUSE B
    GROUP BY ACCUSE_ID,CASE_ID ) CA,
    V_USER_ORGANISE_DISTRICT UOD
    WHERE CB.CASE_ID=CA.CASE_ID
    AND CB.INPUTER=UOD.USER_ID
		<if test="districtId!=null and districtId!='' ">
			AND UOD.DISTRICT_CODE like #{districtId} ||'%'
		</if>
		<if test="accuseId!=null">
			AND CA.ACCUSE_ID= #{accuseId}
		</if>
		<if test="startTime != null and startTime !=''">
			<![CDATA[
			   AND CB.INPUT_TIME >= #{startTime,jdbcType=TIMESTAMP}
			 	]]>
		</if>

		<if test="endTime != null and endTime !=''">
			 <![CDATA[
			     AND CB.INPUT_TIME  < #{endTime,jdbcType=TIMESTAMP}
			 	]]>
		</if>
	</select>

	<resultMap extends="BaseResultMap" id="BusinessEntityResult" type="com.ksource.liangfa.domain.CaseBasic">
		<result column="publishOrgName" jdbcType="VARCHAR" property="publishOrgName" />
		<result column="publishUserName" jdbcType="VARCHAR" property="publishUserName" />
		<result column="supervision" jdbcType="DECIMAL" property="supervision" />
		<result column="district_code" jdbcType="VARCHAR" property="districtCode" />
	</resultMap>
	<select id="queryProcBusinessEntity" parameterType="map" resultMap="BusinessEntityResult">
		select c.*,u.user_name publishUserName ,o.org_name publishOrgName,(select count(*) from case_supervision cs where
		cs.user_id = #{userId} and
		cs.case_id = #{caseId}) supervision,
		o.district_code
		from
		CASE_BASIC c,USER_ u,ORGANISE o
		where c.inputer=u.user_id
		and
		u.org_id=o.org_code
		and c.CASE_ID=#{caseId}
	</select>


	<select id="findPenaltyExtByPk" parameterType="string" resultMap="ResultMapWithBLOBs">
		SELECT
		A.CASE_ID,A.CASE_NO,A.CASE_NAME,A.INPUTER,A.YISONG_UNIT,A.YISONG_TIME,A.AMOUNT_INVOLVED,A.ACCEPT_UNIT,A.CASE_DETAIL_NAME,A.CASE_STATE,A.RECORD_SRC,A.PROC_KEY,
		B.ANFA_ADDRESS,B.ANFA_TIME,B.UNDERTAKER,B.PENALTY_FILE_NO,B.PENALTY_FILE_ID,B.IS_DESCUSS,B.SUBMIT_PEOPLE,B.SUBMIT_TIME,B.REMARK
		FROM CASE_BASIC A,PENALTY_CASE_EXT B WHERE A.CASE_ID=B.CASE_ID(+) AND
		B.CASE_ID=#{caseId}
	</select>
	<resultMap id="BaseResultMap2" type="com.ksource.liangfa.domain.CaseBasic">
		<id column="CASE_ID" jdbcType="VARCHAR" property="caseId" />
	    <result column="CASE_NO" jdbcType="VARCHAR" property="caseNo" />
	    <result column="CASE_NAME" jdbcType="VARCHAR" property="caseName" />
	    <result column="INPUTER" jdbcType="VARCHAR" property="inputer" />
	    <result column="INPUT_TIME" jdbcType="TIMESTAMP" property="inputTime" />
	    <result column="INPUT_UNIT" jdbcType="DECIMAL" property="inputUnit" />
	    <result column="AMOUNT_INVOLVED" jdbcType="DECIMAL" property="amountInvolved" />
	    <result column="CASE_STATE" jdbcType="VARCHAR" property="caseState" />
	    <result column="RECORD_SRC" jdbcType="VARCHAR" property="recordSrc" />
	    <result column="LATEST_POCESS_TIME" jdbcType="TIMESTAMP" property="latestPocessTime" />
	    <result column="PROC_KEY" jdbcType="VARCHAR" property="procKey" />
	    <result column="PROC_DEF_ID" jdbcType="VARCHAR" property="procDefId" />
	    <result column="PROC_INST_ID" jdbcType="VARCHAR" property="procInstId" />
	   	<result column="YISONG_STATE" jdbcType="DECIMAL" property="yisongState" /> 
	</resultMap>
	
	
	<select id="selectByPK" parameterType="string" resultMap="BaseResultMap2">
		SELECT
		C.CASE_ID, C.CASE_NO, C.CASE_NAME, C.INPUTER, C.INPUT_TIME,
		C.INPUT_UNIT, C.AMOUNT_INVOLVED,
		C.CASE_STATE, C.RECORD_SRC, C.LATEST_POCESS_TIME,
		C.PROC_KEY,P.PROC_DEF_ID,P.PROC_INST_ID as procInstId,S.YISONG_STATE
		FROM CASE_BASIC C,CASE_PROCESS P,CASE_STATE S
		WHERE 
		C.CASE_ID=P.CASE_ID(+)
		AND C.CASE_ID = S.CASE_ID
		AND
		C.CASE_ID=#{VALUE}
	</select>

	<sql id="penaltyCaseField">
		<trim>
			<if test="caseNo != null">
				AND INSTR(CASE_NO,#{caseNo})> 0
			</if>
			<if test="caseName != null">
				AND INSTR(CASE_NAME,#{caseName})> 0
			</if>
			<if test="caseState != null">
				AND CASE_STATE = #{caseState}
			</if>
			<if test="orgPath !=null">
				AND O.ORG_PATH LIKE  #{orgPath}||'%'
			</if>
            <if test="orgId !=null">
                AND O.ORG_CODE =  #{orgId}
            </if>
			<if test="districtCode != null and districtCode != ''">
				AND O.DISTRICT_CODE like #{districtCode}||'%'
			</if>
			<if test="districtId != null and districtId != ''">
				AND O.DISTRICT_CODE like #{districtId}||'%'
			</if>
			<if test="startTime != null">
				<![CDATA[
					AND  INPUT_TIME >= #{startTime,jdbcType=TIMESTAMP}
				]]>
			</if>
			<if test="endTime != null">
				<![CDATA[
					AND  INPUT_TIME  < (#{endTime,jdbcType=TIMESTAMP} + INTERVAL '1' DAY)
				]]>
			</if>
			<if test="startMoney != null">
			    <![CDATA[
			       	AND  AMOUNT_INVOLVED >= #{startMoney,jdbcType=DECIMAL}
			    ]]>
			</if>
			<if test="endMoney != null ">
			    <![CDATA[
					AND  AMOUNT_INVOLVED  <= (#{endMoney,jdbcType=DECIMAL})
				]]>
			</if>
			
			<if test="chufaStartTime != null">
			    <![CDATA[
			       	AND  PCF.CHUFA_TIME >= #{chufaStartTime,jdbcType=TIMESTAMP} 
			    ]]>
			</if>
			<if test="chufaEndTime != null">
			    <![CDATA[
				 	AND  PCF.CHUFA_TIME  < (#{chufaEndTime,jdbcType=TIMESTAMP} + INTERVAL '1' DAY)
				]]>
			</if>
			<if test="anfaStartTime != null">
			    <![CDATA[
			       	AND  PCF.ANFA_TIME >= #{anfaStartTime,jdbcType=TIMESTAMP}
			    ]]>
			</if>
			<if test="anfaEndTime != null">
			    <![CDATA[
					AND  PCF.ANFA_TIME  < (#{anfaEndTime,jdbcType=TIMESTAMP} + INTERVAL '1' DAY)
				]]>
			</if>
		</trim>
	</sql>

	<!--???????????????????? -->
	<select id="getPenaltyCaseCount" parameterType="map" resultType="java.lang.Integer">
		SELECT COUNT(1)
		FROM CASE_BASIC CB,CASE_STATE CST,PENALTY_CASE_FORM PCF,ORGANISE O
		WHERE CB.PROC_KEY = 'chufaProc'
		AND CB.CASE_ID = CST.CASE_ID
		AND CB.CASE_ID = PCF.CASE_ID(+)
		AND CB.INPUT_UNIT = O.ORG_CODE
		AND CST.CHUFA_STATE = 2
		<include refid="penaltyCaseField" />
	</select>
	<!-- ??????????????????? -->
	<select id="getPenaltyCaseList" parameterType="map" resultMap="PenaltyCaseMap">
		SELECT CB.CASE_ID,CB.CASE_NO,CB.CASE_NAME,CB.INPUTER,CB.INPUT_TIME,PCF.CHUFA_TIME,
		CB.AMOUNT_INVOLVED,
		O.ORG_NAME AS INPUT_UNIT_NAME,
		CB.CASE_STATE,CB.RECORD_SRC,CB.LATEST_POCESS_TIME,CB.PROC_KEY,CST.CHUFA_STATE
		FROM CASE_BASIC CB ,CASE_STATE CST,PENALTY_CASE_FORM PCF,ORGANISE O
		WHERE CB.PROC_KEY = 'chufaProc'
		AND CB.CASE_ID = CST.CASE_ID
		AND CB.CASE_ID = PCF.CASE_ID(+)
		AND CB.INPUT_UNIT = O.ORG_CODE
		AND CST.CHUFA_STATE = 2
		<include refid="penaltyCaseField" />
		ORDER BY O.DISTRICT_CODE ASC,CB.INPUT_TIME DESC, PCF.CHUFA_TIME DESC
	</select>
	
	<!--查询所有案件信息-->
	<select id="getAllCaseCount" parameterType="map" resultType="java.lang.Integer">
		SELECT COUNT(1)
		FROM CASE_BASIC CB,CASE_STATE CST,PENALTY_CASE_FORM PCF
		WHERE CB.PROC_KEY = 'chufaProc'
		AND CB.CASE_ID = CST.CASE_ID
		AND CB.CASE_ID = PCF.CASE_ID(+)
		<include refid="penaltyCaseField" />
	</select>
	<select id="getAllCaseList" parameterType="map" resultMap="PenaltyCaseMap">
		SELECT CB.CASE_ID,CB.CASE_NO,CB.CASE_NAME,CB.INPUTER,CB.INPUT_TIME,PCF.CHUFA_TIME,
		CB.AMOUNT_INVOLVED,
		(SELECT U.USER_NAME FROM USER_ U WHERE U.ORG_ID = CB.INPUT_UNIT) AS INPUT_UNIT_NAME,
		CB.CASE_STATE,CB.RECORD_SRC,CB.LATEST_POCESS_TIME,CB.PROC_KEY,CST.CHUFA_STATE
		FROM CASE_BASIC CB ,CASE_STATE CST,PENALTY_CASE_FORM PCF
		WHERE CB.PROC_KEY = 'chufaProc'
		AND CB.CASE_ID = CST.CASE_ID
		AND CB.CASE_ID = PCF.CASE_ID(+)
		<include refid="penaltyCaseField" />
		ORDER BY CB.LATEST_POCESS_TIME DESC,CB.CASE_ID ASC
	</select>
	
	<sql id="acceptCaseField">
		<trim>
			<if test="caseNo != null">
				AND INSTR(CASE_NO,#{caseNo})> 0
			</if>
			<if test="caseName != null">
				AND INSTR(CASE_NAME,#{caseName})> 0
			</if>
			<if test="caseState != null">
				AND CASE_STATE = #{caseState}
			</if>
			<if test="yisongState != null">
				AND YISONG_STATE = #{yisongState}
			</if>
			<if test="orgPath !=null and orgId != '-1'">
				AND O.ORG_PATH LIKE  #{orgPath}||'%'
			</if>
            <if test="orgId !=null and orgId != '-1'">
                AND O.ORG_CODE = #{orgId}
            </if>
			<if test="districtCode != null and districtCode != ''">
				AND O.DISTRICT_CODE LIKE #{districtCode}||'%'
			</if>
			<if test="startTime != null">
		      <![CDATA[
		       		AND  INPUT_TIME >= #{startTime,jdbcType=TIMESTAMP}
		       	]]>
			</if>
			<if test="endTime != null">
		      <![CDATA[
			      	AND  INPUT_TIME  < (#{endTime,jdbcType=TIMESTAMP} + INTERVAL '1' DAY)
			   ]]>
			</if>
			<if test="startMoney != null">
		      <![CDATA[
		       		AND  AMOUNT_INVOLVED >= #{startMoney,jdbcType=DECIMAL}
		       	]]>
			</if>
			<if test="endMoney != null ">
		      <![CDATA[
			      	AND  AMOUNT_INVOLVED  <= (#{endMoney,jdbcType=DECIMAL})
			   ]]>
			</if>
			<if test="chufaStartTime != null">
		      <![CDATA[
		       		AND  PLF.CHUFA_TIME >= #{chufaStartTime,jdbcType=TIMESTAMP}
		       	]]>
			</if>
			<if test="chufaEndTime != null">
		      <![CDATA[
			      	AND  PLF.CHUFA_TIME  < (#{chufaEndTime,jdbcType=TIMESTAMP} + INTERVAL '1' DAY)
			   ]]>
			</if>
		</trim>
	</sql>
	
	<resultMap extends="BaseResultMap" id="caseStateMap" type="com.ksource.liangfa.domain.CaseBasic">
    	<result column="YISONG_STATE" jdbcType="INTEGER" property="yisongState" />
    	<result column="DISTRICT_CODE" jdbcType="VARCHAR" property="districtCode" />
    	<result column="INPUT_UNIT_NAME" jdbcType="VARCHAR" property="inputUnitName" />
  	</resultMap>
  
	<!--????????????-->
	<select id="getAcceptCaseCount" parameterType="map" resultType="java.lang.Integer">
		SELECT COUNT(1)
		FROM CASE_BASIC CB,ORGANISE O
		WHERE CB.PROC_KEY = 'chufaProc'
		AND CB.INPUT_UNIT = O.ORG_CODE
		AND CB.CASE_STATE = 0
		<include refid="acceptCaseField" />
	</select>
	<select id="getAcceptCaseList" parameterType="map" resultMap="caseStateMap">
		SELECT CB.CASE_ID,CB.CASE_NO,CB.CASE_NAME,CB.INPUTER,CB.INPUT_TIME,
		CB.AMOUNT_INVOLVED,
		(SELECT O.ORG_NAME FROM ORGANISE O WHERE O.ORG_CODE=CB.INPUT_UNIT) AS INPUT_UNIT_NAME, 
		CB.CASE_STATE,CB.RECORD_SRC,CB.LATEST_POCESS_TIME,CB.PROC_KEY
		FROM CASE_BASIC CB,ORGANISE O
		WHERE CB.PROC_KEY = 'chufaProc'
		AND CB.INPUT_UNIT = O.ORG_CODE
		AND CB.CASE_STATE = 0
		<include refid="acceptCaseField" />
		ORDER BY O.DISTRICT_CODE ASC,CB.INPUT_TIME DESC
	</select>
	
	<!--??????????????????-->
	<select id="getXingzhengLianCaseCount" parameterType="map" resultType="java.lang.Integer">
		SELECT COUNT(1)
		FROM CASE_BASIC CB ,CASE_STATE CST,PENALTY_LIAN_FORM PLF
		WHERE CB.PROC_KEY = 'chufaProc'
		AND CB.CASE_ID = CST.CASE_ID
		AND CB.CASE_ID = PLF.CASE_ID(+)
		AND CST.XINGZHENGLIAN_STATE = 3
		<include refid="acceptCaseField" />
	</select>
	<select id="getXingzhengLianCaseList" parameterType="map" resultMap="BaseResultMap">
		SELECT CB.CASE_ID,CB.CASE_NO,CB.CASE_NAME,CB.INPUTER,CB.INPUT_TIME,
		CB.AMOUNT_INVOLVED,
   		(SELECT U.USER_NAME FROM USER_ U WHERE CB.INPUT_UNIT = U.ORG_ID) AS INPUT_UNIT_NAME,
		CB.CASE_STATE,CB.RECORD_SRC,CB.LATEST_POCESS_TIME,CB.PROC_KEY,CST.CHUFA_STATE
		FROM CASE_BASIC CB ,CASE_STATE CST,PENALTY_LIAN_FORM PLF
		WHERE CB.PROC_KEY = 'chufaProc'
		AND CB.CASE_ID = CST.CASE_ID
		AND CB.CASE_ID = PLF.CASE_ID(+)
		AND CST.XINGZHENGLIAN_STATE = 3
		<include refid="acceptCaseField" />
		ORDER BY CB.LATEST_POCESS_TIME DESC,CB.CASE_ID ASC
	</select>
	
	<select id="getCaseCount" parameterType="map" resultType="java.lang.Integer">
		SELECT COUNT(1)
		FROM CASE_BASIC CB ,ORGANISE O,CASE_STATE CST,CASE_TODO T
		WHERE CB.PROC_KEY = 'chufaProc'
		AND CB.CASE_ID = CST.CASE_ID
	    AND CB.CASE_ID = T.CASE_ID
	    AND T.ASSIGN_ORG  = O.ORG_CODE
		<include refid="acceptCaseField" />
	</select>
	<resultMap type="com.ksource.liangfa.domain.CaseBasic" id="GetCaseListResultMap">
	    <id column="CASE_ID" jdbcType="VARCHAR" property="caseId" />
        <result column="CASE_NO" jdbcType="VARCHAR" property="caseNo" />
        <result column="CASE_NAME" jdbcType="VARCHAR" property="caseName" />
        <result column="CASE_STATE" jdbcType="VARCHAR" property="caseState" />
        <result column="INPUT_TIME" jdbcType="TIMESTAMP" property="inputTime" />
        <result column="PROC_KEY" jdbcType="VARCHAR" property="procKey" />
        <result column="INPUT_UNIT_NAME" jdbcType="VARCHAR" property="inputUnitName" />
        <result column="ACCEPT_UNIT_NAME" jdbcType="VARCHAR" property="acceptUnitName" />
        <result column="LATEST_POCESS_TIME" jdbcType="TIMESTAMP" property="latestPocessTime" />
	</resultMap>
	<select id="getCaseList" parameterType="map" resultMap="GetCaseListResultMap">
		SELECT CB.CASE_ID,CB.CASE_NO,CB.CASE_NAME,CB.INPUTER,CB.INPUT_TIME,
   		(SELECT ORG_NAME FROM ORGANISE WHERE ORG_CODE=CB.INPUT_UNIT) AS INPUT_UNIT_NAME,
		CB.CASE_STATE,CB.LATEST_POCESS_TIME,CB.PROC_KEY
		FROM CASE_BASIC CB ,ORGANISE O,CASE_STATE CST,CASE_TODO T
		WHERE CB.PROC_KEY = 'chufaProc'
		AND CB.CASE_ID = CST.CASE_ID
		AND CB.CASE_ID = T.CASE_ID
        AND T.ASSIGN_ORG  = O.ORG_CODE
		<include refid="acceptCaseField" />
		ORDER BY O.DISTRICT_CODE ASC,CB.LATEST_POCESS_TIME DESC
	</select>
	<!-- 查询公安分派案件 -->
	<select id="getFenpaiCaseCount" parameterType="map" resultType="java.lang.Integer">
		SELECT COUNT(1)
		FROM CASE_BASIC CB ,CASE_STATE CST,ORGANISE O,CASE_FENPAI CF
		WHERE CB.PROC_KEY = 'chufaProc'
		AND CB.ASSIGN_ORG = O.ORG_CODE
		AND O.ORG_TYPE = '3'
		AND CB.CASE_ID = CST.CASE_ID
		AND CB.CASE_ID = CF.CASE_ID
		<include refid="acceptCaseField" />
	</select>
	<select id="getFenpaiCaseList" parameterType="map" resultMap="GetCaseListResultMap">
		SELECT CB.CASE_ID,CB.CASE_NO,CB.CASE_NAME,CB.INPUTER,CB.INPUT_TIME,
   		(SELECT ORG_NAME FROM ORGANISE WHERE ORG_CODE=CB.INPUT_UNIT) AS INPUT_UNIT_NAME,
		CB.CASE_STATE,CB.LATEST_POCESS_TIME,CB.PROC_KEY,
		(SELECT U.USER_NAME FROM USER_ U WHERE CF.JIESHOU_ORG = U.ORG_ID) AS ACCEPT_UNIT_NAME
		FROM CASE_BASIC CB ,CASE_STATE CST,ORGANISE O,CASE_FENPAI CF
		WHERE CB.PROC_KEY = 'chufaProc'
		AND CB.ASSIGN_ORG = O.ORG_CODE
		AND O.ORG_TYPE = '3'
		AND CB.CASE_ID = CST.CASE_ID
		AND CB.CASE_ID = CF.CASE_ID
		<include refid="acceptCaseField" />
		ORDER BY O.DISTRICT_CODE ASC,CB.LATEST_POCESS_TIME DESC
	</select>
	
	<!--???????????????????-->
	<select id="getXingzhengLianQueryCaseCount" parameterType="map" resultType="java.lang.Integer">
		SELECT COUNT(1)
		FROM CASE_BASIC CB ,CASE_STATE CST,PENALTY_LIAN_FORM PLF,ORGANISE O
		WHERE CB.PROC_KEY = 'chufaProc'
		AND CB.INPUT_UNIT = O.ORG_CODE
		AND CB.CASE_ID = CST.CASE_ID
		AND CB.CASE_ID = PLF.CASE_ID(+)
		AND CB.CASE_STATE = 1
		<include refid="acceptCaseField" />
	</select>
	<select id="getXingzhengLianQueryCaseList" parameterType="map" resultMap="caseStateMap">
		SELECT CB.CASE_ID,CB.CASE_NO,CB.CASE_NAME,CB.INPUTER,CB.INPUT_TIME,
		CB.AMOUNT_INVOLVED,
		(SELECT O.ORG_NAME FROM ORGANISE O WHERE O.ORG_CODE=CB.INPUT_UNIT) AS INPUT_UNIT_NAME, 
		CB.CASE_STATE,CB.RECORD_SRC,CB.LATEST_POCESS_TIME,CB.PROC_KEY
		FROM CASE_BASIC CB ,CASE_STATE CST,PENALTY_LIAN_FORM PLF,ORGANISE O
		WHERE CB.PROC_KEY = 'chufaProc'
		AND CB.INPUT_UNIT = O.ORG_CODE
		AND CB.CASE_ID = CST.CASE_ID
		AND CB.CASE_ID = PLF.CASE_ID(+)
		AND CB.CASE_STATE = 1
		<include refid="acceptCaseField" />
		ORDER BY O.DISTRICT_CODE ASC,CB.LATEST_POCESS_TIME DESC
	</select>
	
	
	<sql id="allCaseField">
		<trim>
			<if test="orgPath !=null">
				AND  O.ORG_PATH LIKE  #{orgPath}||'%'
			</if>
            <if test="orgId !=null">
                AND  O.ORG_CODE = #{orgId}
            </if>			
			<if test="districtCode != null">
				AND O.DISTRICT_CODE LIKE #{districtCode}||'%'
			</if>
			<if test="caseNo != null">
				AND INSTR(CB.CASE_NO,#{caseNo})> 0
			</if>
			<if test="caseName != null">
				AND INSTR(CB.CASE_NAME,#{caseName})> 0
			</if>
			<if test="caseState != null">
				AND CB.CASE_STATE = #{caseState}
			</if>
			<if test="startTime != null">
		      <![CDATA[
		       		AND  CB.INPUT_TIME >= #{startTime,jdbcType=TIMESTAMP}
		       	]]>
			</if>
			<if test="endTime != null">
		      <![CDATA[
			      	AND  CB.INPUT_TIME  < (#{endTime,jdbcType=TIMESTAMP} + INTERVAL '1' DAY)
			   ]]>
			</if>
			<if test="stateRange != null and stateRange !=''">
		      <![CDATA[
			      	AND  CB.CASE_STATE  >= #{stateRange,jdbcType=VARCHAR}
			   ]]>
			</if>
		</trim>
	</sql>
	
	<!--查询所有案件-->
	<select id="getCaseAllCount" parameterType="map" resultType="java.lang.Integer">
		SELECT COUNT(1)
		FROM CASE_BASIC CB,ORGANISE O
		WHERE CB.PROC_KEY = 'chufaProc'
		AND CB.INPUT_UNIT = O.ORG_CODE
		<include refid="allCaseField" />
	</select>
	<select id="getCaseAllList" parameterType="map" resultMap="caseStateMap">
		SELECT CB.CASE_ID,CB.CASE_NO,CB.CASE_NAME,CB.INPUTER,CB.INPUT_TIME,CB.ANFA_TIME,
		CB.AMOUNT_INVOLVED,
		(SELECT O.ORG_NAME FROM ORGANISE O WHERE O.ORG_CODE=CB.INPUT_UNIT) AS INPUT_UNIT_NAME, 
		CB.CASE_STATE,CB.RECORD_SRC,CB.LATEST_POCESS_TIME,CB.PROC_KEY
		FROM CASE_BASIC CB,ORGANISE O
		WHERE CB.PROC_KEY = 'chufaProc'
		AND CB.INPUT_UNIT = O.ORG_CODE
		<include refid="allCaseField" />
		ORDER BY CB.INPUT_UNIT ASC,CB.LATEST_POCESS_TIME DESC
	</select>
	
	<!--???????????????????????-->
	<select id="getXingzhengChufaQueryCaseCount" parameterType="map" resultType="java.lang.Integer">
		SELECT COUNT(1)
		FROM CASE_BASIC CB ,CASE_STATE CST,PENALTY_CASE_FORM PLF,ORGANISE O
		WHERE CB.PROC_KEY = 'chufaProc'
		AND CB.INPUT_UNIT = O.ORG_CODE
		AND CB.CASE_ID = CST.CASE_ID
		AND CB.CASE_ID = PLF.CASE_ID(+)
		AND CB.CASE_STATE = 2
		<include refid="acceptCaseField" />
	</select>
	<select id="getXingzhengChufaQueryCaseList" parameterType="map" resultMap="PenaltyCaseMap">
		SELECT CB.CASE_ID,CB.CASE_NO,CB.CASE_NAME,CB.INPUTER,CB.INPUT_TIME,
		CB.AMOUNT_INVOLVED,PLF.CHUFA_TIME AS CHUFA_TIME,
		(SELECT O.ORG_NAME FROM ORGANISE O WHERE O.ORG_CODE=CB.INPUT_UNIT) AS INPUT_UNIT_NAME,
		CB.CASE_STATE,CB.RECORD_SRC,CB.LATEST_POCESS_TIME,CB.PROC_KEY
		FROM CASE_BASIC CB ,CASE_STATE CST,PENALTY_CASE_FORM PLF,ORGANISE O
		WHERE CB.PROC_KEY = 'chufaProc'
		AND CB.INPUT_UNIT = O.ORG_CODE
		AND CB.CASE_ID = CST.CASE_ID
		AND CB.CASE_ID = PLF.CASE_ID(+)
		AND CB.CASE_STATE = 2
		<include refid="acceptCaseField" />
		ORDER BY O.DISTRICT_CODE ASC,PLF.CHUFA_TIME DESC
	</select>
	
	<sql id="generalCaseField">
		<trim>
			<if test="caseNo != null">
				AND INSTR(CASE_NO,#{caseNo})> 0
			</if>
			<if test="caseName != null">
				AND INSTR(CASE_NAME,#{caseName})> 0
			</if>
			<if test="caseState != null">
				AND CASE_STATE = #{caseState}
			</if>
			<if test="isSeriousCase != null">
				AND PLF.IS_SERIOUS_CASE =#{isSeriousCase,jdbcType=DECIMAL}
			</if>
			<if test="isDescuss != null">
				AND PLF.IS_DESCUSS =#{isDescuss,jdbcType=DECIMAL}
			</if>
			<if test="isBeyondEighty != null">
				AND PLF.IS_BEYOND_EIGHTY =#{isBeyondEighty,jdbcType=DECIMAL}
			</if>
			<if test="orgPath !=null">
				AND O.ORG_PATH LIKE  #{orgPath}||'%'
			</if>
            <if test="orgId != null">
                AND O.ORG_CODE =  #{orgId}
            </if>
			<if test="districtCode != null and districtCode != ''">
				AND O.DISTRICT_CODE LIKE #{districtCode}||'%'
			</if>
			<if test="startTime != null">
				<![CDATA[
					AND  INPUT_TIME >= #{startTime,jdbcType=TIMESTAMP}
				]]>
			</if>
			<if test="endTime != null">
				<![CDATA[
					AND INPUT_TIME  < (#{endTime,jdbcType=TIMESTAMP} + INTERVAL '1' DAY)
				]]>
			</if>
			<if test="startMoney != null">
				<![CDATA[
				 	AND  AMOUNT_INVOLVED >= #{startMoney,jdbcType=DECIMAL}
				]]>
			</if>
			<if test="endMoney != null ">
				<![CDATA[
				 	AND  AMOUNT_INVOLVED  <= (#{endMoney,jdbcType=DECIMAL})
				]]>
			</if>
		
			<if test="startTimes != null ">
				<![CDATA[
					AND  PLF.CHUFA_TIMES >= #{startTimes,jdbcType=DECIMAL}
				]]>
			</if>
			<if test="endTimes != null ">
				<![CDATA[
				 	AND  PLF.CHUFA_TIMES  <= (#{endTimes,jdbcType=DECIMAL})
				]]>
			</if>
			
			<if test="anfaStartTime != null">
				<![CDATA[
				 	AND  CB.ANFA_TIME >= #{anfaStartTime,jdbcType=TIMESTAMP}
				]]>
			</if>
			<if test="anfaEndTime != null">
				<![CDATA[
				 	AND  CB.ANFA_TIME  < (#{anfaEndTime,jdbcType=TIMESTAMP} + INTERVAL '1' DAY)
				]]>
			</if>
		</trim>
	</sql>
	
	<resultMap extends="BaseResultMap" id="GeneralCaseMap" type="com.ksource.liangfa.domain.CaseBasic">
		<result column="CHUFA_TIMES" jdbcType="DECIMAL" property="chufaTimes" />
		<result column="IS_SERIOUS_CASE" jdbcType="DECIMAL" property="isSeriousCase" />
		<result column="IS_DESCUSS" jdbcType="DECIMAL" property="isDescuss" />
		<result column="IS_BEYOND_EIGHTY" jdbcType="DECIMAL" property="isBeyondEighty" />
		<result column="ORG_NAME" jdbcType="VARCHAR" property="orgName" />
	</resultMap>
	
	<!--自定义查询-->
	<select id="getGeneralCaseCount" parameterType="map" resultType="java.lang.Integer">
		SELECT COUNT(1)
		FROM CASE_BASIC CB ,CASE_STATE CST,PENALTY_CASE_FORM PLF,ORGANISE O
		WHERE CB.PROC_KEY = 'chufaProc'
		AND CB.CASE_ID = CST.CASE_ID
		AND CB.CASE_ID = PLF.CASE_ID(+)
		AND CB.INPUT_UNIT = O.ORG_CODE
		<include refid="generalCaseField" />
	</select>
	<select id="getGeneralCaseList" parameterType="map" resultMap="GeneralCaseMap">
		SELECT CB.CASE_ID,CB.CASE_NO,CB.CASE_NAME,CB.INPUT_TIME,CB.INPUTER,CB.AMOUNT_INVOLVED,
		(SELECT O.ORG_NAME FROM ORGANISE O WHERE O.ORG_CODE=CB.INPUT_UNIT) AS ORG_NAME,
		CB.CASE_STATE,CB.RECORD_SRC,CB.LATEST_POCESS_TIME,CB.PROC_KEY
		FROM CASE_BASIC CB ,CASE_STATE CST,PENALTY_CASE_FORM PLF,ORGANISE O
		WHERE CB.PROC_KEY = 'chufaProc'
		AND CB.CASE_ID = CST.CASE_ID
		AND CB.CASE_ID = PLF.CASE_ID(+)
		AND CB.INPUT_UNIT = O.ORG_CODE
		<include refid="generalCaseField" />
		ORDER BY O.DISTRICT_CODE ASC,CB.INPUT_TIME DESC
	</select>

	<select id="getYisongChufaQueryList" parameterType="map" resultMap="BaseResultMap">
		select a.*, user_Name as userName
		from case_basic A, user_ b
		where a.inputer
		= b.user_id
		and PROC_KEY =#{procKey,jdbcType=VARCHAR}
		<include refid="yisongchufaquery" />
		<if test="caseId == null">
			order by a.latest_Pocess_Time desc,a.case_id asc
		</if>
	</select>
	<select id="getYisongChufaQueryCount" resultType="int">
		select count(*)
		from case_basic A, user_ b
		where a.inputer = b.user_id
		and
		PROC_KEY =#{procKey,jdbcType=VARCHAR}
		<include refid="yisongchufaquery" />
	</select>
	<sql id="yisongchufaquery">
		<if test="caseNo != null">
			and CASE_NO like concat(concat('%',#{caseNo}),'%')
		</if>
		<if test="caseName != null">
			and CASE_NAME like concat(concat('%',#{caseName}),'%')
		</if>
		<if test="caseState != null">
			and CASE_STATE = #{caseState}
		</if>
		<if test="orgId!=null and orgId != '-1'">
			and inputer in (select user_id from user_ where org_id in
			(select
			org_code from organise where org_code=#{orgId}))
		</if>
		<choose>
			<when test="yisongStartTime != null and yisongEndTime != null and yisongTime==null ">
	      <![CDATA[
	       	and  YISONG_TIME >= #{yisongStartTime,jdbcType=TIMESTAMP} and YISONG_TIME  < (#{yisongEndTime,jdbcType=TIMESTAMP} +   interval   '1'  day)
	       	]]>
			</when>
			<when test="yisongEndTime != null and yisongTime==null">
	      <![CDATA[
		      	and  YISONG_TIME  < (#{yisongEndTime,jdbcType=TIMESTAMP} +   interval   '1'  day)
		   ]]>
			</when>
			<when test="yisongStartTime != null and yisongTime==null">
	      <![CDATA[
		      	and  YISONG_TIME >= #{yisongStartTime,jdbcType=TIMESTAMP}
		  ]]>
			</when>
		</choose>
		<choose>
			<when test="startTime != null and endTime != null and inputTime==null ">
	      <![CDATA[
	       	and  input_time >= #{startTime,jdbcType=TIMESTAMP} and input_time  < (#{endTime,jdbcType=TIMESTAMP} +   interval   '1'  day)
	       	]]>
			</when>
			<when test="endTime != null and inputTime==null">
	      <![CDATA[
		      	and  input_time  < (#{endTime,jdbcType=TIMESTAMP} +   interval   '1'  day)
		   ]]>
			</when>
			<when test="startTime != null and inputTime==null">
	      <![CDATA[
		      	and  input_time >= #{startTime,jdbcType=TIMESTAMP}
		  ]]>
			</when>
		</choose>
	</sql>
	<!-- ???????????? (???????) -->
	<select id="selectdqdjCaseList" parameterType="map" resultMap="PenaltyCaseMap">
		SELECT C.CASE_ID,
           C.CASE_NO,
           C.CASE_NAME,
           C.CASE_STATE,
           PCE.CHUFA_TIME,
           C.INPUT_TIME,
           C.LATEST_POCESS_TIME,
           C.PROC_KEY
      FROM CASE_BASIC C, DQDJ_CASE_CATEGORY CC,PENALTY_CASE_EXT PCE
     WHERE C.CASE_ID = CC.CASE_ID
       AND C.CASE_ID = PCE.CASE_ID(+)
       AND CC.CATEGORY_ID = #{category_id}
		<if test="org_code!= null and org_code !=''">
		AND C.INPUTER IN (SELECT U.USER_ID FROM ORGANISE O,USER_ U 
        WHERE O.ORG_CODE=U.ORG_ID AND O.ORG_CODE IN 
			<foreach close=")" collection="orgLists" item="orgList" open="(" separator=",">
				#{orgList}
			</foreach>
			)
		</if>
		<if test="districtCode!= null and districtCode!='null' and districtCode!=''">
			AND C.INPUTER IN (SELECT U.USER_ID FROM ORGANISE O,USER_ U 
        WHERE O.ORG_CODE=U.ORG_ID AND O.DISTRICT_CODE LIKE concat(#{districtCode},'%'))
		</if>
		<if test="startTime!= null and startTime!='null' and startTime!=''">
			AND C.INPUT_TIME &gt;= to_date(#{startTime},'yyyy-MM-dd')
		</if>
		<if test="endTime!= null and endTime!='null' and endTime!=''">
			AND C.INPUT_TIME &lt; to_date(#{endTime},'yyyy-MM-dd') +
			interval '1'
			day
		</if>
		ORDER BY C.INPUT_TIME DESC
	</select>

	<select id="selectdqdjCaseCount" parameterType="map" resultType="int">
		SELECT COUNT(C.CASE_ID)
		FROM CASE_BASIC C, DQDJ_CASE_CATEGORY CC
     	WHERE C.CASE_ID = CC.CASE_ID
       AND CC.CATEGORY_ID = #{category_id}
		<if test="org_code!= null and org_code !='' ">
			AND C.INPUTER IN (SELECT U.USER_ID FROM ORGANISE O,USER_ U 
        	WHERE O.ORG_CODE=U.ORG_ID AND O.ORG_CODE IN 
			<foreach close=")" collection="orgLists" item="orgList" open="(" separator=",">
				#{orgList}
			</foreach>
			)
		</if>
		<if test="districtCode!= null and districtCode!='null' and districtCode!=''">
			AND C.INPUTER IN (SELECT U.USER_ID FROM ORGANISE O,USER_ U 
        WHERE O.ORG_CODE=U.ORG_ID AND O.DISTRICT_CODE LIKE concat(#{districtCode},'%'))
		</if>
		<if test="startTime!= null and startTime!='null' and startTime!=''">
			AND C.INPUT_TIME &gt;= to_date(#{startTime},'yyyy-MM-dd')
		</if>
		<if test="endTime!= null and endTime!='null' and endTime!=''">
			AND C.INPUT_TIME &lt; to_date(#{endTime},'yyyy-MM-dd') +
			interval '1'
			day
		</if>
		ORDER BY C.INPUT_TIME DESC
	</select>


	<!-- ???????????? (????????) -->
	<select id="selectdqdjCaseByDistrictList" parameterType="map" resultMap="PenaltyCaseMap">
		SELECT C.CASE_ID,
           C.CASE_NO,
           C.CASE_NAME,
           C.CASE_STATE,
           PCE.CHUFA_TIME,
           C.INPUT_TIME,
           C.LATEST_POCESS_TIME,
           C.PROC_KEY
		FROM CASE_BASIC C, DQDJ_CASE_CATEGORY CC,PENALTY_CASE_EXT PCE
     WHERE C.CASE_ID = CC.CASE_ID
       AND C.CASE_ID = PCE.CASE_ID(+)
       	AND CC.CATEGORY_ID = #{category_id}
		<if test="district_code!= null and district_code !=''">
			AND C.INPUTER IN (SELECT U.USER_ID FROM ORGANISE O,DISTRICT D,USER_ U
       		WHERE O.ORG_CODE=U.ORG_ID
       		AND D.DISTRICT_CODE=O.DISTRICT_CODE AND D.DISTRICT_CODE IN
			<foreach close=")" collection="districtIdLists" item="districtCode" open="(" separator=",">
				#{districtCode}
			</foreach>
			)
		</if>
		<if test="startTime!= null and startTime!='null' and startTime!=''">
			AND C.INPUT_TIME &gt;= to_date(#{startTime},'yyyy-MM-dd')
		</if>
		<if test="endTime!= null and endTime!='null' and endTime!=''">
			AND C.INPUT_TIME &lt; to_date(#{endTime},'yyyy-MM-dd') +
			interval '1'
			day
		</if>
		ORDER BY C.INPUT_TIME DESC
	</select>

	<select id="selectdqdjCaseByDistrictCount" parameterType="map" resultType="int">
		SELECT COUNT(C.CASE_ID)
		FROM CASE_BASIC C, DQDJ_CASE_CATEGORY CC
     	WHERE C.CASE_ID = CC.CASE_ID
       	AND CC.CATEGORY_ID = #{category_id}
		<if test="district_code!= null and district_code !='' ">
			AND C.INPUTER IN (SELECT U.USER_ID FROM ORGANISE O,DISTRICT D,USER_ U
       		WHERE O.ORG_CODE=U.ORG_ID
       		AND D.DISTRICT_CODE=O.DISTRICT_CODE AND D.DISTRICT_CODE IN 
			<foreach close=")" collection="districtIdLists" item="districtCode" open="(" separator=",">
				#{districtCode}
			</foreach>
			)
		</if>
		<if test="startTime!= null and startTime!='null' and startTime!=''">
			AND C.INPUT_TIME &gt;= to_date(#{startTime},'yyyy-MM-dd')
		</if>
		<if test="endTime!= null and endTime!='null' and endTime!=''">
			AND C.INPUT_TIME &lt; to_date(#{endTime},'yyyy-MM-dd') +
			interval '1'
			day
		</if>
		ORDER BY C.INPUT_TIME DESC
	</select>

	<resultMap id="casePartyReusltMap" type="com.ksource.liangfa.domain.CaseParty">
		<id column="PARTY_ID" jdbcType="DECIMAL" property="partyId" />
		<result column="CASE_ID" jdbcType="VARCHAR" property="caseId" />
		<result column="NAME" jdbcType="VARCHAR" property="name" />
		<result column="IDS_NO" jdbcType="VARCHAR" property="idsNo" />
		<result column="SEX" jdbcType="VARCHAR" property="sex" />
		<result column="BIRTHDAY" jdbcType="DATE" property="birthday" />
		<result column="NATION" jdbcType="VARCHAR" property="nation" />
		<result column="EDUCATION" jdbcType="VARCHAR" property="education" />
		<result column="BIRTHPLACE" jdbcType="VARCHAR" property="birthplace" />
		<result column="PROFESSION" jdbcType="VARCHAR" property="profession" />
		<result column="AddRESS" jdbcType="VARCHAR" property="address" />
		<result column="TEL" jdbcType="VARCHAR" property="tel" />
		<result column="sexName" jdbcType="VARCHAR" property="sexName" />
		<result column="educationName" jdbcType="VARCHAR" property="educationName" />
		<result column="birthdayName" jdbcType="VARCHAR" property="birthdayName" />
	</resultMap>

	<select id="getCasePartyByCaseId" parameterType="string" resultMap="casePartyReusltMap">
		select
		party_id,NAME, SEX, IDS_NO, TEL,
		BIRTHDAY, AddRESS,
		NATION, EDUCATION, BIRTHPLACE, PROFESSION,
		(select dt_Name from
		dictionary_ where group_code='sex' and
		dt_Code=b.sex) as sexName,
		(select dt_Name from dictionary_ where group_code='educationLevel' and
		dt_Code=b.EDUCATION) as educationName,
		(select dt_Name from dictionary_
		where group_code='nation' and
		dt_Code=b.nation) as nationName
		from
		case_party b where b.case_id
		=#{value}
	</select>

	<select id="getCaseCompanyByCaseId" parameterType="string" resultMap="com.ksource.liangfa.mapper.CaseCompanyMapper.BaseResultMap">
		select
		<include refid="com.ksource.liangfa.mapper.CaseCompanyMapper.Base_Column_List" />
		,
		(select dt_Name from
		dictionary_ where group_code='danweiType' and
		dt_Code=b.company_type) as companyTypeName
		from
		case_company b where
		b.case_id =#{value}
	</select>
	<select id="getCaseCompanyByCaseIdByMsql" parameterType="string" resultMap="com.ksource.liangfa.mapper.CaseCompanyMapper.BaseResultMap">
		select
		<include refid="com.ksource.liangfa.mapper.CaseCompanyMapper.Base_Column_List" />
		,
		(select dt_Name from
		dictionary_ where group_code='danweiType' and
		dt_Code=b.company_type) as companyTypeName
		from case_company b where
		b.case_id =#{value}
	</select>
	<resultMap extends="BaseResultMap" id="TimeoutWarn" type="com.ksource.liangfa.domain.CaseBasic">
		<result column="user_name" jdbcType="VARCHAR" property="userName" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="org_name" jdbcType="VARCHAR" property="orgName" />
		<result column="dt_name" jdbcType="VARCHAR" property="dtName" />
	</resultMap>
	<select id="selectJieanNoticeCase" parameterType="string" resultMap="BaseResultMap">
		select a.*,b.id as noticeId from case_basic a
		,case_jiean_notice b where
		a.case_id = b.case_id and a.inputer =
		b.notify_id
		and a.inputer=#{value}
	</select>
	<select id="caseSupervisionNotice" parameterType="string" resultMap="TimeoutWarn">
		select a.*, u.user_name, o.org_name
		from (select
		c.case_id,c.case_no,c.case_name,c.case_state,c.input_time,c.proc_key,c.inputer
		from case_basic c
		union
		select
		to_char(cd.case_id),cd.case_no,cd.case_name,cd.case_state,cd.input_time,cd.proc_key,cd.inputer
		from case_duty cd
		union
		select
		to_char(cw.case_id),cw.case_no,cw.case_name,cw.case_state,cw.input_time,cw.proc_key,cw.inputer
		from case_weiji cw
		) a, user_ u, organise o
		where u.org_id = o.org_code
		and a.inputer = u.user_id
		and a.case_id in (select cs.case_id from
		case_supervision cs where
		cs.user_id=#{userId} and
		cs.proc_key=a.proc_key)
	</select>
	<resultMap type="com.ksource.liangfa.domain.CaseBasic" id="searchCaseAndWorkflowResultMap">
        <id column="CASE_ID" jdbcType="VARCHAR" property="caseId" />
        <result column="CASE_NO" jdbcType="VARCHAR" property="caseNo" />
        <result column="CASE_NAME" jdbcType="VARCHAR" property="caseName" />
        <result column="CASE_STATE" jdbcType="VARCHAR" property="caseState" />
        <result column="INPUT_TIME" jdbcType="TIMESTAMP" property="inputTime" />
        <result column="PROC_KEY" jdbcType="VARCHAR" property="procKey" />
        <result column="INPUT_UNIT_NAME" jdbcType="VARCHAR" property="inputUnitName" />
        <result column="LATEST_POCESS_TIME" jdbcType="TIMESTAMP" property="latestPocessTime" />
  	</resultMap>
	<select id="searchCaseAndWorkflow" parameterType="map" resultMap="searchCaseAndWorkflowResultMap">
		select CASE_ID,CASE_NO,CASE_NAME,CASE_STATE,INPUT_TIME,PROC_KEY,LATEST_POCESS_TIME,O.ORG_NAME AS INPUT_UNIT_NAME from case_basic c,user_ u,organise o
		where c.inputer=u.user_id and u.org_id=o.org_code
			<if test="caseNo!=null and caseNo!=''">
				and case_no like '%${caseNo}%'
			</if>
			<if test="caseName!=null and caseName!=''">
				and case_name like '%${caseName}%'
			</if>
			<if test="procKey!=null and procKey!=''">
				and proc_key=#{procKey}
			</if>
			<if test="inputType!=null and inputType!=0">
				and input_type=#{inputType}
			</if>
			<if test="districtCode!=null and districtCode!=''">
				and o.district_code like '${districtCode}%'
			</if>
            <if test="orgPath!=null and orgPath!=''">
                and o.org_path like '${orgPath}%'
            </if>		
            <if test="orgId !=null">
                AND  O.ORG_CODE = #{orgId}
            </if>	
		order by latest_pocess_time desc
	</select>
	<select id="searchCaseAndWorkflowCount" parameterType="map" resultType="int">
		select count(*) from case_basic c,user_ u,organise o
		where c.inputer=u.user_id and u.org_id=o.org_code
			<if test="caseNo!=null and caseNo!=''">
				and case_no like '%${caseNo}%'
			</if>
			<if test="caseName!=null and caseName!=''">
				and case_name like '%${caseName}%'
			</if>
			<if test="procKey!=null and procKey!=''">
				and proc_key=#{procKey}
			</if>
			<if test="inputType!=null and inputType!=0">
				and input_type=#{inputType}
			</if>
			<if test="districtCode!=null and districtCode!=''">
				and o.district_code like '${districtCode}%'
			</if>
            <if test="orgPath!=null and orgPath!=''">
                and o.org_path like '${orgPath}%'
            </if>  
            <if test="orgId !=null">
                AND  O.ORG_CODE = #{orgId}
            </if> 			
	</select>
	<delete id="deleteCaseAndWorkflow" parameterType="java.lang.String">
		{call
		deleteCase_workflow(#{value})
		}
	</delete>
	
	<!-- ??????ID?????????? -->
	<select id="getDistrictCode" parameterType="String" resultType="String">
		SELECT O.DISTRICT_CODE FROM CASE_BASIC CB,USER_ U,ORGANISE O 
		 WHERE CB.INPUTER = U.USER_ID 
		   AND U.ORG_ID = O.ORG_CODE 
		   AND CB.CASE_ID = #{caseId}
	</select>

    <select id="findByLikeCaseNo" parameterType="map" resultMap="ResultMapWithBLOBs">
		select
	    c.case_no,c.case_name,c.case_detail_name
	    from CASE_BASIC c,v_user_organise_district a
	    where c.inputer=a.user_id
        and c.case_no like concat(#{caseNo},'%')
    <if test="orgCode!=null">
           and  (a.org_code=#{orgCode} or a.up_org_code =#{orgCode} )
        </if>
        <if test="districtCode!=null">
           and  a.district_code like concat(#{districtCode},'%')
        </if>
	</select>
	<select id="countBycaseNo" parameterType="map" resultType="int">
		select count(*)
		from case_basic c,v_user_organise_district a
		where c.inputer=a.user_id
        and case_no =#{caseNo}
        <if test="orgCode!=null">
           and  (a.org_code=#{orgCode} or a.up_org_code =#{orgCode} )
        </if>
        <if test="districtCode!=null">
           and  a.district_code like concat(#{districtCode},'%')
        </if>
	</select>
	<select id="getCases" parameterType="map" resultMap="TimeoutWarn">
         SELECT DC.CASE_ID,DC.CASE_NO,DC.CASE_NAME,DC.CASE_STATE,
		       U.USER_NAME AS USER_NAME,DC.PROC_KEY,
		       A.CREATE_TIME_ AS CREATE_TIME
		  FROM (SELECT DISTINCT T.*
			      FROM ACT_RU_TASK T
			     INNER JOIN ACT_RU_IDENTITYLINK I ON I.TASK_ID_ = T.ID_
			     WHERE T.ASSIGNEE_ IS NULL
			       AND I.TYPE_ = 'candidate'
			       AND I.GROUP_ID_ = #{candidateGroup,jdbcType=VARCHAR}
					UNION
					SELECT DISTINCT T.*
					  FROM ACT_RU_TASK T
					 WHERE T.ASSIGNEE_ = #{userID,jdbcType=VARCHAR}) A,
		       (SELECT C.CASE_ID,C.CASE_NO,C.CASE_NAME,C.INPUTER,C.CASE_STATE,C.PROC_KEY,
		               CP.PROC_INST_ID,CP.PROC_DEF_ID, D.DT_NAME AS DT_NAME
		          FROM DICTIONARY_ D, CASE_BASIC C, CASE_PROCESS CP
		         WHERE D.DT_CODE = C.CASE_STATE
		               AND C.CASE_ID = CP.CASE_ID
		           AND D.GROUP_CODE = 'chufaProcState') DC,
		       USER_ U,
		       ORGANISE O
		 WHERE A.PROC_INST_ID_ = DC.PROC_INST_ID
		   AND DC.INPUTER = U.USER_ID
		   AND U.ORG_ID = O.ORG_CODE
		   AND DC.PROC_DEF_ID = #{proc_def_id,jdbcType=VARCHAR} 
		   AND A.TASK_DEF_KEY_ = #{task_def_id,jdbcType=VARCHAR}
		<![CDATA[
		   AND A.CREATE_TIME_ < DATEDIFFERENCE(#{due_date,jdbcType=VARCHAR})
    	 ]]>
    	 ORDER BY CREATE_TIME DESC
    </select>
    
    <!-- ????????????????? -->
    <select id="queryHistoryCaseBySameOrgAndCaseParty" parameterType="map" resultMap="ResultMapWithBLOBs">
		select t1.* from case_basic t1,user_ t2
		where
		t1.case_id &lt;&gt; #{caseId}
		and t1.inputer=t2.user_id
		and exists(
		select * from case_basic a,user_ u
		where a.case_id=#{caseId}
		and
		a.inputer=u.user_id
		and u.org_id=t2.org_id
		)
		and exists(
		select * from
		case_party t3
		where t3.case_id=t1.case_id
		and t3.ids_no=#{idsNo}
		)
		order by t1.INPUT_TIME desc,t1.CASE_ID
	</select>

	<select id="queryHistoryCaseBySameOrgAndCaseCompany" parameterType="map" resultMap="ResultMapWithBLOBs">
		select t1.* from case_basic t1,user_ t2
		where
		t1.case_id &lt;&gt; #{caseId}
		and t1.inputer=t2.user_id
		and exists(
		select * from case_basic a,user_ u
		where a.case_id=#{caseId}
		and
		a.inputer=u.user_id
		and u.org_id=t2.org_id
		)
		and exists(
		select * from
		case_company t3
		where t3.case_id=t1.case_id
		and
		t3.REGISTRACTION_NUM=#{regNo}
		)
		order by t1.INPUT_TIME desc,t1.CASE_ID
  </select>
    <select id="getCaseRecordList" parameterType="map" resultMap="BaseResultMap">
        select  c.case_id,c.case_no,c.case_name,c.case_state,c.input_time,c.proc_key,c.inputer,r.read_state as readState from case_basic c,case_record r
         where c.case_id=r.case_id and c.proc_key=r.proc_key and r.user_id=#{userId}
        <if test="readState!=null">
            and r.read_state=#{readState}
        </if>
         order by r.read_state asc,input_time desc
    </select>
    <select id="getCaseRecordCount" parameterType="map" resultType="int">
           select count(*) from case_basic c,case_record r
            where c.case_id=r.case_id and c.proc_key=r.proc_key
            and r.user_id=#{userId}
            <if test="readState!=null">
                 and r.read_state=#{readState}
            </if>
            order by input_time desc
    </select>
       
       <!-- ??????????????????????(????????????????????????????????????)-->
	<select id="getAllStateList" parameterType="map" resultMap="BaseResultMap">
		SELECT CB.CASE_ID,
           CB.CASE_NO,
           CB.CASE_NAME,
           CB.CASE_STATE,
           CB.YISONG_TIME,
           CB.INPUT_TIME,
           CB.LATEST_POCESS_TIME,
           CB.PROC_KEY
   		 FROM CASE_BASIC CB,CASE_STATE CS,V_USER_ORGANISE_DISTRICT U
    	 WHERE CB.CASE_ID=CS.CASE_ID
   		 AND CB.INPUTER=U.USER_ID
		<choose>
			<when test="districtId!=null and districtId!='' ">
				AND U.district_code IN 
				<foreach close=")" collection="districtLists" item="districtList" open="(" separator=",">
					#{districtList}
				</foreach>
			</when>
			<otherwise>
				AND CB.INPUTER IN (SELECT A.USER_ID FROM USER_ A WHERE 
        		A.ORG_ID IN 
				<foreach close=")" collection="orgCodeLists" item="orgCode" open="(" separator=",">
					#{orgCode}
				</foreach>
				)
			</otherwise>
		</choose>
		<choose>
			
			<when test="yisongState!=null">
				AND CS.YISONG_STATE = #{yisongState}
			</when>
			<when test="lianState!=null">
				AND CS.LIAN_STATE=#{lianState}
			</when>
			<when test="daibuState!=null">
				AND CS.DAIBU_STATE=#{daibuState}
			</when>
			<when test="qisuState!=null">
				AND CS.QISU_STATE=#{qisuState}
			</when>
			<when test="panjueState!=null">
				AND CS.PANJUE_STATE=#{panjueState}
			</when>
			<when test="jieanState!=null">
				AND CS.JIEAN_STATE=#{jieanState}
			</when>
			<when test="yisongDouState!=null">
				AND CS.YISONG_STATE IN (2,3)
			</when>
			<when test="reqExplainState!=null">
				AND CS.REQ_EXPLAIN_STATE=#{reqExplainState}
			</when>
			<when test="caseState!=null">
				AND CB.CASE_STATE=#{caseState}
			</when>
			<when test="xingzhenglianState!=null">
				AND CS.XINGZHENGLIAN_STATE=#{xingzhenglianState}
			</when>				
		</choose>
		<if test="procKey!=null">
			AND CB.proc_key=#{procKey}
		</if>
		<if test="startTime != null">
			<![CDATA[
			   AND CB.INPUT_TIME >= #{startTime,jdbcType=TIMESTAMP}
			 	]]>
		</if>

		<if test="endTime != null">
			 <![CDATA[
			     AND CB.INPUT_TIME  < #{endTime,jdbcType=TIMESTAMP}
			 	]]>
		</if>
		ORDER BY CB.LATEST_POCESS_TIME DESC,CB.CASE_ID
	</select>
	<select id="getAllStateCount" parameterType="map" resultType="java.lang.Integer">
		 SELECT COUNT(CB.CASE_ID) 
		 FROM CASE_BASIC CB,CASE_STATE CS,V_USER_ORGANISE_DISTRICT U
    	 WHERE CB.CASE_ID=CS.CASE_ID
   		 AND CB.INPUTER=U.USER_ID
		<choose>
			<when test="districtId!=null and districtId!='' ">
				AND U.district_code IN 
				<foreach close=")" collection="districtLists" item="districtList" open="(" separator=",">
					#{districtList}
				</foreach>
			</when>
			<otherwise>
				AND CB.INPUTER IN (SELECT A.USER_ID FROM USER_ A WHERE 
        		A.ORG_ID IN
				<foreach close=")" collection="orgCodeLists" item="orgCode" open="(" separator=",">
					#{orgCode}
				</foreach>
				)
			</otherwise>
		</choose>
		<choose>
			<when test="chufaState!=null">
				AND CS.CHUFA_STATE=#{chufaState}
			</when>
			<when test="yisongState!=null">
				AND CS.YISONG_STATE = #{yisongState}
			</when>
			<when test="lianState!=null">
				AND CS.LIAN_STATE=#{lianState}
			</when>
			<when test="daibuState!=null">
				AND CS.DAIBU_STATE=#{daibuState}
			</when>
			<when test="qisuState!=null">
				AND CS.QISU_STATE=#{qisuState}
			</when>
			<when test="panjueState!=null">
				AND CS.PANJUE_STATE=#{panjueState}
			</when>
			<when test="jieanState!=null">
				AND CS.JIEAN_STATE=#{jieanState}
			</when>
			<when test="yisongDouState!=null">
				AND CS.YISONG_STATE IN (2,3)
			</when>
			<when test="reqExplainState!=null">
				AND CS.REQ_EXPLAIN_STATE=#{reqExplainState}
			</when>
			<when test="caseState!=null">
				AND CB.CASE_STATE=#{caseState}
			</when>
		</choose>
		<if test="procKey!=null">
			AND CB.proc_key=#{procKey}
		</if>
		<if test="startTime != null">
			<![CDATA[
			   AND CB.INPUT_TIME >= #{startTime,jdbcType=TIMESTAMP}
			 	]]>
		</if>

		<if test="endTime != null">
			 <![CDATA[
			     AND CB.INPUT_TIME  < #{endTime,jdbcType=TIMESTAMP}
			     
			 	]]>
		</if>
	</select>
	
	<select id="getStateListByOrg" parameterType="map" resultMap="PenaltyCaseMap">
		SELECT CB.CASE_ID,
           CB.CASE_NO,
           CB.CASE_NAME,
           CB.CASE_STATE,
           PCE.CHUFA_TIME,
           CB.INPUT_TIME,
           CB.LATEST_POCESS_TIME,
           CB.PROC_KEY,
           U.ORG_NAME
   		 FROM 
   		 <choose>
			<when test="policeType==2">
				(SELECT C.CASE_ID,C.CASE_NO,C.CASE_NAME,C.INPUTER,C.INPUT_TIME,C.AMOUNT_INVOLVED,C.IS_SUSPECTED_CRIMINAL,
				 C.ACCEPT_UNIT,C.CASE_STATE,C.RECORD_SRC,C.LATEST_POCESS_TIME,C.PROC_KEY,C.CASE_TYPE,C.IDENTIFY_TYPE,
				 C.IS_LOWER_LIMIT_MONEY
					FROM CASE_BASIC C,
					(SELECT S.CASE_ID
				      FROM CASE_STEP S, ORGANISE O
				      WHERE S.TARGET_ORG_ID = O.ORG_CODE
				      AND S.TARGET_ORG_TYPE = '3'
				      AND O.POLICE_TYPE=2
				      GROUP BY CASE_ID 
				     ) SO
				 WHERE C.CASE_ID=SO.CASE_ID) CB
			</when>
			<when test="policeType==1">
				 (SELECT C.CASE_ID,C.CASE_NO,C.CASE_NAME,C.INPUTER,C.INPUT_TIME,C.AMOUNT_INVOLVED,C.IS_SUSPECTED_CRIMINAL,
				 C.ACCEPT_UNIT,C.CASE_STATE,C.RECORD_SRC,C.LATEST_POCESS_TIME,C.PROC_KEY,C.CASE_TYPE,C.IDENTIFY_TYPE,
				 C.IS_LOWER_LIMIT_MONEY
				 FROM CASE_BASIC C LEFT JOIN 
				   (SELECT S.CASE_ID,O.POLICE_TYPE FROM CASE_STEP S, ORGANISE O
				    WHERE S.TARGET_ORG_ID = O.ORG_CODE
				    AND S.TARGET_ORG_TYPE = '3'
				    GROUP BY CASE_ID,O.POLICE_TYPE) SO
				    ON C.CASE_ID = SO.CASE_ID
				 WHERE (SO.POLICE_TYPE = 1 OR SO.POLICE_TYPE IS NULL)) CB
			</when>
			<otherwise>
				CASE_BASIC CB 
			</otherwise>
		  </choose>
   		 ,CASE_STATE CS,PENALTY_CASE_FORM PCE,V_USER_ORGANISE_DISTRICT U
    	 WHERE CB.CASE_ID=CS.CASE_ID
    	 AND CB.CASE_ID=PCE.CASE_ID(+)
   		 AND CB.INPUTER=U.USER_ID
		<if test="districtId!=null and districtId!='' ">
			AND U.DISTRICT_CODE LIKE #{districtId} ||'%'
   		 </if>
   		 <if test="orgCode!=null and orgCode!='' ">
   		 	AND CB.INPUTER IN (SELECT A.USER_ID FROM USER_ A WHERE 
        		A.ORG_ID =#{orgCode}
				)
   		 </if>
   		 <if test="industryType!=null and industryType!='' ">
   		 	AND U.INDUSTRY_TYPE = #{industryType}
   		 </if>
		 <if test="orgPath!=null">
			  AND U.ORG_PATH LIKE #{orgPath} ||'%'
		</if>
		 <if test="caseNo != null">
			AND CB.CASE_NO LIKE CONCAT(CONCAT('%',#{caseNo}),'%')
		 </if>
		 <if test="caseName != null">
			AND CB.CASE_NAME LIKE CONCAT(CONCAT('%',#{caseName}),'%')
		 </if>
		 <if test="isDqdj != null and isDqdj!='' ">
  			AND PCE.IS_DQDJ =#{isDqdj}
		</if>
		<choose>
			<when test="chufaState!=null">
				AND CS.CHUFA_STATE=#{chufaState}
			</when>
			<when test="yisongState!=null">
				AND CS.YISONG_STATE = #{yisongState}
			</when>
			<when test="lianState!=null and lianState==3">
				AND CS.LIAN_STATE&gt;=#{lianState}
			</when>
			<when test="lianState!=null and lianState==2">
				AND CS.LIAN_STATE=#{lianState}
			</when>
			<when test="lianState!=null and lianState==1">
				AND CS.LIAN_STATE=#{lianState}
			</when>
			<when test="lianState!=null and lianState==4">
				AND CS.LIAN_STATE=#{lianState}
			</when>
			<when test="daibuState!=null">
				AND CS.DAIBU_STATE=#{daibuState}
			</when>
			<when test="qisuState!=null">
				AND CS.QISU_STATE=#{qisuState}
			</when>
			<when test="panjueState!=null">
				AND CS.PANJUE_STATE=#{panjueState}
			</when>
			<when test="jieanState!=null">
				AND CS.JIEAN_STATE=#{jieanState}
			</when>
			<when test="yisongDouState!=null">
				AND CS.YISONG_STATE IN (2,3)
			</when>
			<when test="reqExplainState!=null">
				AND CS.REQ_EXPLAIN_STATE=#{reqExplainState}
			</when>
			<when test="caseState!=null">
				AND CB.CASE_STATE=#{caseState}
			</when>
			<when test="xingzhenglianState!=null">
				AND CS.XINGZHENGLIAN_STATE=#{xingzhenglianState}
			</when>
			<when test="detentionState!=null">
			  AND CS.DETENTION_STATE=#{detentionState}
			</when>
			<when test="lianSupState!=null">
				<![CDATA[AND CS.LIAN_SUP_STATE>=1]]>
			</when>				
		</choose>
		<if test="startTime != null and startTime!='' and startTime!='null'">
			<![CDATA[
			   AND CB.INPUT_TIME >= TO_DATE(#{startTime},'yyyy-MM')
			 	]]>
		</if>

		<if test="endTime != null and endTime!='' and endTime!='null'">
			 <![CDATA[
			    AND CB.INPUT_TIME  < TO_DATE(#{endTime},'yyyy-MM') + INTERVAL '1' MONTH
			 	]]>
		</if>
		<!-- regionStatsFilter START -->
		<if test="industry_Type !=null">
			AND U.INDUSTRY_TYPE IS NOT NULL
		</if>
		<if test="chufatimescount !=null">
			AND PCE.CHUFA_TIMES&gt;#{chufatimescount}
		</if>
		<if test="beyondeightycount !=null">
			AND PCE.IS_BEYOND_EIGHTY=#{beyondeightycount}
		</if>
		<if test="identifycount !=null">
			AND PCE.IDENTIFY_TYPE != #{identifycount} AND PCE.IDENTIFY_TYPE IS NOT NULL
		</if>
		<if test="lowerlimitmoneycount !=null">
			AND PCE.IS_LOWER_LIMIT_MONEY=#{lowerlimitmoneycount}
		</if>
		<if test="descusscount !=null">
			AND PCE.IS_DESCUSS=#{descusscount}
		</if>
		<if test="seriouscasecount !=null">
			AND PCE.IS_SERIOUS_CASE=#{seriouscasecount}
		</if>
		<if test="casecount !=null">
			AND cb.IS_SUSPECTED_CRIMINAL=1
		</if>
		<if test="penalty_num !=null">
			AND CS.CHUFA_STATE=2 
		</if>
		<!-- regionStatsFilter END -->
		ORDER BY CB.LATEST_POCESS_TIME DESC,CB.CASE_ID
	</select>
	<select id="getStateCountByOrg" parameterType="map" resultType="java.lang.Integer">
		 SELECT COUNT(CB.CASE_ID) 
		 FROM 
		 <choose>
			<when test="policeType==2">
				(SELECT C.CASE_ID,C.CASE_NO,C.CASE_NAME,C.INPUTER,C.INPUT_TIME,C.AMOUNT_INVOLVED,C.IS_SUSPECTED_CRIMINAL,
				 C.ACCEPT_UNIT,C.CASE_STATE,C.RECORD_SRC,C.LATEST_POCESS_TIME,C.PROC_KEY,C.CASE_TYPE,C.IDENTIFY_TYPE,
				 C.IS_LOWER_LIMIT_MONEY
					FROM CASE_BASIC C,
					(SELECT S.CASE_ID
				      FROM CASE_STEP S, ORGANISE O
				      WHERE S.TARGET_ORG_ID = O.ORG_CODE
				      AND S.TARGET_ORG_TYPE = '3'
				      AND O.POLICE_TYPE=2
				      GROUP BY CASE_ID 
				     ) SO
				 WHERE C.CASE_ID=SO.CASE_ID) CB
			</when>
			<when test="policeType==1">
				(SELECT C.CASE_ID,C.CASE_NO,C.CASE_NAME,C.INPUTER,C.INPUT_TIME,C.AMOUNT_INVOLVED,C.IS_SUSPECTED_CRIMINAL,
				 C.ACCEPT_UNIT,C.CASE_STATE,C.RECORD_SRC,C.LATEST_POCESS_TIME,C.PROC_KEY,C.CASE_TYPE,C.IDENTIFY_TYPE,
				 C.IS_LOWER_LIMIT_MONEY
				 FROM CASE_BASIC C LEFT JOIN 
				   (SELECT S.CASE_ID,O.POLICE_TYPE FROM CASE_STEP S, ORGANISE O
				    WHERE S.TARGET_ORG_ID = O.ORG_CODE
				    AND S.TARGET_ORG_TYPE = '3'
				    GROUP BY CASE_ID,O.POLICE_TYPE) SO
				    ON C.CASE_ID = SO.CASE_ID
				 WHERE (SO.POLICE_TYPE = 1 OR SO.POLICE_TYPE IS NULL)) CB
			</when>
			<otherwise>
				CASE_BASIC CB 
			</otherwise>
		  </choose>
		 ,CASE_STATE CS,V_USER_ORGANISE_DISTRICT U,PENALTY_CASE_FORM PCE
    	 WHERE CB.CASE_ID=CS.CASE_ID
    	 AND CB.CASE_ID=PCE.CASE_ID(+)
   		 AND CB.INPUTER=U.USER_ID
   		 <if test="districtId!=null and districtId!='' ">
			AND U.DISTRICT_CODE LIKE #{districtId} ||'%' 
   		 </if>
   		 <if test="orgCode!=null and orgCode!='' ">
   		 	AND CB.INPUTER IN (SELECT A.USER_ID FROM USER_ A WHERE 
        		A.ORG_ID =#{orgCode}
				)
   		 </if>
   		 <if test="industryType!=null and industryType!='' ">
   		 	AND U.INDUSTRY_TYPE = #{industryType}
   		 </if>
		 <if test="orgPath!=null">
			  AND U.ORG_PATH LIKE #{orgPath} ||'%'
		</if>
		 <if test="caseNo != null">
			AND CB.CASE_NO LIKE CONCAT(CONCAT('%',#{caseNo}),'%')
		 </if>
		 <if test="caseName != null">
			AND CB.CASE_NAME LIKE CONCAT(CONCAT('%',#{caseName}),'%')
		 </if>
		 <if test="isDqdj != null and isDqdj!='' ">
  			AND PCE.IS_DQDJ =#{isDqdj}
		</if>
		<choose>
			<when test="chufaState!=null">
				AND CS.CHUFA_STATE=#{chufaState}
			</when>
			<when test="yisongState!=null">
				AND CS.YISONG_STATE = #{yisongState}
			</when>
			<when test="lianState!=null and lianState==3">
				AND CS.LIAN_STATE&gt;=#{lianState}
			</when>
			<when test="lianState!=null and lianState==2">
				AND CS.LIAN_STATE=#{lianState}
			</when>
			<when test="lianState!=null and lianState==1">
				AND CS.LIAN_STATE=#{lianState}
			</when>
			<when test="lianState!=null and lianState==4">
				AND CS.LIAN_STATE=#{lianState}
			</when>
			<when test="daibuState!=null">
				AND CS.DAIBU_STATE=#{daibuState}
			</when>
			<when test="qisuState!=null">
				AND CS.QISU_STATE=#{qisuState}
			</when>
			<when test="panjueState!=null">
				AND CS.PANJUE_STATE=#{panjueState}
			</when>
			<when test="jieanState!=null">
				AND CS.JIEAN_STATE=#{jieanState}
			</when>
			<when test="yisongDouState!=null">
				AND CS.YISONG_STATE IN (2,3)
			</when>
			<when test="reqExplainState!=null">
				AND CS.REQ_EXPLAIN_STATE=#{reqExplainState}
			</when>
			<when test="caseState!=null">
				AND CB.CASE_STATE=#{caseState}
			</when>
			<when test="xingzhenglianState!=null">
				AND CS.XINGZHENGLIAN_STATE=#{xingzhenglianState}
			</when>	
			<when test="detentionState!=null">
			  AND CS.DETENTION_STATE=#{detentionState}
			</when>
			<when test="lianSupState!=null">
				<![CDATA[AND CS.LIAN_SUP_STATE>=1]]>
			</when>			
		</choose>
		<if test="startTime != null and startTime!='' and startTime!='null'">
			<![CDATA[
				AND CB.INPUT_TIME >= TO_DATE(#{startTime},'yyyy-MM')
			]]>
		</if>
		<if test="endTime != null and endTime!='' and endTime!='null'">
			 <![CDATA[
			    AND CB.INPUT_TIME  < TO_DATE(#{endTime},'yyyy-MM') + INTERVAL '1' MONTH
			 ]]>
		</if>
		<!-- regionStatsFilter START -->
		<if test="industry_Type !=null">
			AND U.INDUSTRY_TYPE IS NOT NULL
		</if>
		<if test="industry_Type !=null">
			AND U.INDUSTRY_TYPE IS NOT NULL
		</if>
		<if test="chufatimescount !=null">
			AND PCE.CHUFA_TIMES&gt;#{chufatimescount}
		</if>
		<if test="beyondeightycount !=null">
			AND PCE.IS_BEYOND_EIGHTY=#{beyondeightycount}
		</if>
		<if test="identifycount !=null">
			AND PCE.IDENTIFY_TYPE != #{identifycount} AND PCE.IDENTIFY_TYPE IS NOT NULL
		</if>
		<if test="lowerlimitmoneycount !=null">
			AND PCE.IS_LOWER_LIMIT_MONEY=#{lowerlimitmoneycount}
		</if>
		<if test="descusscount !=null">
			AND PCE.IS_DESCUSS=#{descusscount}
		</if>
		<if test="seriouscasecount !=null">
			AND PCE.IS_SERIOUS_CASE=#{seriouscasecount}
		</if>
		<if test="casecount !=null">
			AND CB.IS_SUSPECTED_CRIMINAL=1  
		</if>
		<if test="penalty_num !=null">
			AND CS.CHUFA_STATE=2 
		</if>
		<!-- regionStatsFilter END -->
	</select>
	
	<!--????????????  (???????????????????) -->
  <select id="getCrimeListByOrg" parameterType="map" resultMap="PenaltyCaseMap">
		SELECT CB.CASE_ID,
           CB.CASE_NO,
           CB.CASE_NAME,
           CB.CASE_STATE,
           PCE.CHUFA_TIME,
           CB.INPUT_TIME,
           CB.LATEST_POCESS_TIME,
           CB.PROC_KEY
    	FROM CASE_BASIC CB,CASE_STATE CS,PENALTY_CASE_EXT PCE,V_USER_ORGANISE_DISTRICT U
    	WHERE CB.CASE_ID=CS.CASE_ID
    	AND CB.CASE_ID=PCE.CASE_ID(+)
    	AND CB.INPUTER=U.user_id
			<choose>
				<when test="districtId!=null and districtId!='' ">
					AND U.district_code = #{districtId}
        		</when>
				<otherwise>
					AND CB.INPUTER IN (SELECT A.USER_ID FROM USER_ A WHERE 
    				A.ORG_ID = #{orgCode}
					)
        		</otherwise>
		   </choose>
			AND (CS.YISONG_STATE = 2 OR CS.YISONG_STATE = 3)
		<if test="startTime != null">
			<![CDATA[
			   AND CB.INPUT_TIME >= #{startTime,jdbcType=TIMESTAMP}
			 	]]>
		</if>

		<if test="endTime != null">
			 <![CDATA[
			     AND CB.INPUT_TIME  < #{endTime,jdbcType=TIMESTAMP}
			 	]]>
		</if>
		ORDER BY CB.LATEST_POCESS_TIME DESC,CB.CASE_ID
	</select>
	<select id="getCrimeCountByOrg" parameterType="map" resultType="java.lang.Integer">
		SELECT COUNT(CB.CASE_ID)
		FROM CASE_BASIC CB,CASE_STATE CS,V_USER_ORGANISE_DISTRICT U
    	WHERE CB.CASE_ID=CS.CASE_ID
    	AND CB.INPUTER=U.user_id
			<choose>
				<when test="districtId!=null and districtId!='' ">
					AND U.district_code = #{districtId}
        		</when>
				<otherwise>
					AND CB.INPUTER IN (SELECT A.USER_ID FROM USER_ A WHERE 
    				A.ORG_ID = #{orgCode}
					)
        		</otherwise>
		   </choose>
				AND (CS.YISONG_STATE = 2 OR CS.YISONG_STATE = 3)
		<if test="startTime != null">
			<![CDATA[
			   	AND CB.INPUT_TIME >= #{startTime,jdbcType=TIMESTAMP}
			 	]]>
		</if>

		<if test="endTime != null">
			 <![CDATA[
			     AND CB.INPUT_TIME  < #{endTime,jdbcType=TIMESTAMP}
			 	]]>
		</if>
	</select>
	
	<!-- ???????????????????????? -->
	<select id="getNoPenaltyTransferCaseList" parameterType="map" resultMap="PenaltyCaseMap">
		SELECT CB.CASE_ID,CB.CASE_NO,CB.CASE_NAME,CB.INPUTER,CB.INPUT_TIME,
		CB.AMOUNT_INVOLVED,CB.ACCEPT_UNIT,
		CB.CASE_STATE,CB.RECORD_SRC,CB.LATEST_POCESS_TIME,CB.PROC_KEY,CS.CHUFA_STATE
		FROM 
		<choose>
			<when test="policeType==2">
				(SELECT C.CASE_ID,C.CASE_NO,C.CASE_NAME,C.INPUTER,C.INPUT_TIME,C.AMOUNT_INVOLVED,
				 C.ACCEPT_UNIT,C.CASE_STATE,C.RECORD_SRC,C.LATEST_POCESS_TIME,C.PROC_KEY,C.CASE_TYPE
					FROM CASE_BASIC C,
					(SELECT S.CASE_ID
				      FROM CASE_STEP S, ORGANISE O
				      WHERE S.TARGET_ORG_ID = O.ORG_CODE
				      AND S.TARGET_ORG_TYPE = '3'
				      and o.police_type=2
				      GROUP BY CASE_ID 
				     ) SO
				 WHERE C.CASE_ID=SO.CASE_ID) CB
			</when>
			<when test="policeType==1">
				(SELECT C.CASE_ID,C.CASE_NO,C.CASE_NAME,C.INPUTER,C.INPUT_TIME,C.AMOUNT_INVOLVED,
				 C.ACCEPT_UNIT,C.CASE_STATE,C.RECORD_SRC,C.LATEST_POCESS_TIME,C.PROC_KEY,C.CASE_TYPE
					FROM CASE_BASIC C LEFT JOIN
					(SELECT S.CASE_ID,O.POLICE_TYPE
				      FROM CASE_STEP S, ORGANISE O
				      WHERE S.TARGET_ORG_ID = O.ORG_CODE
				      AND S.TARGET_ORG_TYPE = '3'
				      GROUP BY CASE_ID,POLICE_TYPE 
				     ) SO
				    ON C.CASE_ID=SO.CASE_ID
				 WHERE (SO.POLICE_TYPE =1 OR SO.POLICE_TYPE IS NULL)) CB
			</when>			
			<otherwise>
				CASE_BASIC CB 
			</otherwise>
		  </choose>
		,CASE_STATE CS,V_USER_ORGANISE_DISTRICT O
		WHERE CB.PROC_KEY = 'chufaProc'
		AND CB.CASE_ID = CS.CASE_ID
		AND CB.CASE_TYPE =3
		AND CB.INPUTER=O.USER_ID
		<include refid="yisongQuery" />
		ORDER BY CB.LATEST_POCESS_TIME DESC,CB.CASE_ID ASC
	</select>
	<select id="getNoPenaltyTransferCaseCount" parameterType="map" resultType="java.lang.Integer">
		SELECT COUNT(1)
		FROM 
		<choose>
			<when test="policeType==2">
				(SELECT C.CASE_ID,C.CASE_NO,C.CASE_NAME,C.INPUTER,C.INPUT_TIME,C.AMOUNT_INVOLVED,
				 C.ACCEPT_UNIT,C.CASE_STATE,C.RECORD_SRC,C.LATEST_POCESS_TIME,C.PROC_KEY,C.CASE_TYPE
					FROM CASE_BASIC C,
					(SELECT S.CASE_ID
				      FROM CASE_STEP S, ORGANISE O
				      WHERE S.TARGET_ORG_ID = O.ORG_CODE
				      AND S.TARGET_ORG_TYPE = '3'
				      and o.police_type=2
				      GROUP BY CASE_ID 
				     ) SO
				 WHERE C.CASE_ID=SO.CASE_ID) CB
			</when>
			<when test="policeType==1">
				(SELECT C.CASE_ID,C.CASE_NO,C.CASE_NAME,C.INPUTER,C.INPUT_TIME,C.AMOUNT_INVOLVED,
				 C.ACCEPT_UNIT,C.CASE_STATE,C.RECORD_SRC,C.LATEST_POCESS_TIME,C.PROC_KEY,C.CASE_TYPE
					FROM CASE_BASIC C LEFT JOIN
					(SELECT S.CASE_ID,O.POLICE_TYPE
				      FROM CASE_STEP S, ORGANISE O
				      WHERE S.TARGET_ORG_ID = O.ORG_CODE
				      AND S.TARGET_ORG_TYPE = '3'
				      GROUP BY CASE_ID,POLICE_TYPE 
				     ) SO
				    ON C.CASE_ID=SO.CASE_ID
				 WHERE (SO.POLICE_TYPE =1 OR SO.POLICE_TYPE IS NULL)) CB
			</when>				
			<otherwise>
				CASE_BASIC CB 
			</otherwise>
		  </choose>
		,CASE_STATE CS,V_USER_ORGANISE_DISTRICT O
		WHERE CB.PROC_KEY = 'chufaProc'
		AND CB.CASE_ID = CS.CASE_ID
		AND CB.CASE_TYPE =3
		AND CB.INPUTER=O.USER_ID
		<include refid="yisongQuery" />
	</select>
	
	<select id="queryNoExportDataList" parameterType="map" resultMap="ResultMapWithBLOBs">
		SELECT #{districtCode}||CASE_ID AS CASE_ID,CASE_NO, CASE_NAME, INPUTER, INPUT_TIME, INPUT_UNIT, AMOUNT_INVOLVED, ACCEPT_UNIT, 
    		   CASE_STATE, RECORD_SRC, LATEST_POCESS_TIME, PROC_KEY, CASE_TYPE,CASE_DETAIL_NAME
		  FROM CASE_BASIC C
		 WHERE EXISTS 
		       (SELECT 1 FROM CASE_MODIFIED_INFO WHERE EXP_STATE = 'N'
		       AND CASE_ID =  KEY_VALUE
		       AND TABLE_NAME = #{tableName})
	</select>
	
		<!--???????????????? -->
	<select id="getyisiCaseCount" parameterType="map" resultType="java.lang.Integer">
		SELECT COUNT(1)
		FROM CASE_BASIC CB,CASE_STATE CST,PENALTY_CASE_EXT
		PCE,(
		SELECT
		distinct CI.CASE_ID
		FROM
		CASE_ACCUSE_RULE_RELATION ci
		WHERE
		not exists
		(
		SELECT
		i.id
		FROM
		ACCUSE_RULE i
		WHERE
		i.ID = CI.RULE_ID
		)) cis
		WHERE CB.PROC_KEY = 'chufaProc'
		AND
		CB.CASE_ID = CST.CASE_ID
		AND CB.CASE_ID = PCE.CASE_ID(+)
		AND
		CB.CASE_TYPE IN (1,2)
		and cis.CASE_ID = CB.CASE_ID
		<include refid="penaltyCaseField" />
	</select>
	<!-- ???????????????? -->
	<select id="getyisiCaseList" parameterType="map" resultMap="PenaltyCaseMap">
		SELECT
		CB.CASE_ID,CB.CASE_NO,CB.CASE_NAME,CB.INPUTER,CB.INPUT_TIME,PCE.CHUFA_TIME,
		CB.AMOUNT_INVOLVED,CB.ACCEPT_UNIT,
		CB.CASE_STATE,CB.RECORD_SRC,CB.LATEST_POCESS_TIME,CB.PROC_KEY,CST.CHUFA_STATE
		FROM CASE_BASIC CB,CASE_STATE CST,PENALTY_CASE_EXT PCE,(
		SELECT
		distinct CI.CASE_ID
		FROM
		case_accuse_rule_relation ci
		WHERE
		not exists
		(
		SELECT
		i.id
		FROM
		ACCUSE_RULE i
		WHERE
		and i.id = CI.RULE_ID
		)) cis
		WHERE CB.PROC_KEY = 'chufaProc'
		AND
		CB.CASE_ID = CST.CASE_ID
		AND CB.CASE_ID = PCE.CASE_ID(+)
		AND
		CB.CASE_TYPE IN (1,2)
		and cis.CASE_ID = CB.CASE_ID
		<include refid="penaltyCaseField" />
		ORDER BY CB.LATEST_POCESS_TIME DESC,CB.CASE_ID ASC
	</select>

	<!--????????????? -->
	<select id="getlianCaseCount" parameterType="map" resultType="java.lang.Integer">
		SELECT COUNT(1)
		FROM CASE_BASIC CB,CASE_STATE CST,PENALTY_CASE_EXT PCE
		WHERE CB.PROC_KEY = 'chufaProc'
		AND CB.CASE_ID = CST.CASE_ID
		AND
		CB.CASE_ID = PCE.CASE_ID(+)
		AND CB.CASE_TYPE IN (1,2)
		<include refid="penaltyCaseField" />
		<include refid="lianCaseField" />
	</select>
	<!-- ????????????? -->
	<select id="getlianCaseList" parameterType="map" resultMap="PenaltyCaseMap">
		SELECT
		CB.CASE_ID,CB.CASE_NO,CB.CASE_NAME,CB.INPUTER,CB.INPUT_TIME,PCE.CHUFA_TIME,
		CB.AMOUNT_INVOLVED,CB.ACCEPT_UNIT,
		CB.CASE_STATE,CB.RECORD_SRC,CB.LATEST_POCESS_TIME,CB.PROC_KEY,CST.CHUFA_STATE
		FROM CASE_BASIC CB,CASE_STATE CST,PENALTY_CASE_EXT PCE
		WHERE
		CB.PROC_KEY = 'chufaProc'
		AND CB.CASE_ID = CST.CASE_ID
		AND CB.CASE_ID =
		PCE.CASE_ID(+)
		AND CB.CASE_TYPE IN (1,2)
		<include refid="penaltyCaseField" />
		<include refid="lianCaseField" />
		ORDER BY CB.LATEST_POCESS_TIME DESC,CB.CASE_ID ASC
	</select>

	<sql id="lianCaseField">
		<trim>and 
		(CB.case_state != '26' or (1=2
			<choose>
				<when test="minAmountInvolved !=null and maxAmountInvolved !=null">
						<![CDATA[ or ( c.amount_involved >= #{minAmountInvolved,jdbcType=DECIMAL}
								and c.amount_involved <= #{maxAmountInvolved,jdbcType=DECIMAL} )
						]]>
				</when>
				<when test="minAmountInvolved !=null">
						<![CDATA[ or c.amount_involved >= #{minAmountInvolved,jdbcType=DECIMAL} ]]>
				</when>
				<when test="maxAmountInvolved !=null">
						<![CDATA[ or c.amount_involved <= #{maxAmountInvolved,jdbcType=DECIMAL} ]]>
				</when>
			</choose>
			<choose>
				<when test="minCaseInputTime !=null and maxCaseInputTime !=null">
						<![CDATA[ or ( c.input_time >= #{minCaseInputTime,jdbcType=TIMESTAMP}
								 and c.input_time < (#{maxCaseInputTime,jdbcType=TIMESTAMP} +   interval   '1'  day) )
						]]>
				</when>
				<when test="minCaseInputTime !=null">
						<![CDATA[ or c.input_time >= #{minCaseInputTime,jdbcType=TIMESTAMP}]]>
				</when>
				<when test="maxCaseInputTime !=null">
						<![CDATA[ or c.input_time < (#{maxCaseInputTime,jdbcType=TIMESTAMP} +   interval   '1'  day)]]>
				</when>
			</choose>
			<if test="isDiscussCase!=null">
				or pce.is_descuss=#{isDiscussCase}
			</if>
			<if test="chufaTimes!=null">
					<![CDATA[ or pce.chufa_times >=#{chufaTimes} ]]>
			</if>
			<if test="isSeriousCase!=null">
				or pce.is_serious_case=#{isSeriousCase}
			</if>
			<if test="isBeyondEighty!=null">
				or pce.is_beyond_eighty=#{isBeyondEighty}
			</if>
			<if test="isLowerLimitMoney!=null">
				or c.IS_LOWER_LIMIT_MONEY=#{isLowerLimitMoney}
			</if>
			<if test="isIdentify!=null and isIdentify==1">
					<![CDATA[or c.IDENTIFY_TYPE <6 ]]>
			</if>
			<if test="isIdentify!=null and isIdentify==0">
					<![CDATA[or c.IDENTIFY_TYPE =6 ]]>
			</if>
			 ))
		</trim>
	</sql>
	
	<select id="getyisiFaCaseCount" parameterType="map" resultType="java.lang.Integer">
		SELECT COUNT(DISTINCT CC.CASE_ID)
	    FROM
	    (SELECT CB1.CASE_ID,CB1.CASE_NO,CB1.CASE_NAME,CB1.ORG_CODE,CB1.ORG_PATH
	    FROM
	    (SELECT
	    CB.CASE_ID,CB.CASE_NO,CB.CASE_NAME,CB.INPUTER,CB.INPUT_TIME,PCE.CHUFA_TIME,CB.ANFA_ADDRESS,CB.ANFA_TIME,
	    CB.AMOUNT_INVOLVED,O.ORG_CODE,O.ORG_NAME,PCE.IDENTIFY_TYPE,
	    CB.CASE_STATE,CB.RECORD_SRC,CB.LATEST_POCESS_TIME,CB.PROC_KEY,CST.CHUFA_STATE,PCE.GOODS_INVOLVED,
	    CX.IDS_NO,CX."NAME" AS XIANYIREN_NAME,CC."NAME" AS COMPANY_NAME,O.DISTRICT_CODE,O.ORG_PATH
	    FROM CASE_BASIC CB,CASE_STATE CST,PENALTY_CASE_FORM PCE,CASE_XIANYIREN CX,CASE_COMPANY CC,USER_ U,ORGANISE O
	    WHERE
	    CB.PROC_KEY = 'chufaProc' 
	    AND CB.CASE_ID = CST.CASE_ID
	    AND CB.CASE_ID
	    =PCE.CASE_ID(+)
	    AND CB.CASE_ID = CX.CASE_ID(+)
	    AND CB.CASE_ID= CC.CASE_ID(+)
	     AND CB.CASE_TYPE IS NULL
	    AND CB.INPUTER = U.USER_ID
	    AND U.ORG_ID = O.ORG_CODE
	    AND CB.CASE_STATE = 2
	    ) CB1,
	    (SELECT
	    CB.CASE_ID,CB.CASE_NO,CB.CASE_NAME,CB.INPUTER,CB.INPUT_TIME,PCE.CHUFA_TIME,CB.ANFA_ADDRESS,CB.ANFA_TIME,
	    CB.AMOUNT_INVOLVED,O.ORG_CODE,O.ORG_NAME,PCE.identify_type,
	    CB.CASE_STATE,CB.RECORD_SRC,CB.LATEST_POCESS_TIME,CB.PROC_KEY,CST.CHUFA_STATE,PCE.GOODS_INVOLVED,
	    CX.IDS_NO,CX."NAME" AS XIANYIREN_NAME,CC."NAME" AS COMPANY_NAME,O.DISTRICT_CODE
	    FROM CASE_BASIC CB,CASE_STATE CST,PENALTY_CASE_FORM PCE,CASE_XIANYIREN CX,CASE_COMPANY CC,USER_ U,ORGANISE O
	    WHERE
	    CB.PROC_KEY = 'chufaProc'
	    AND CB.CASE_ID = CST.CASE_ID
	    AND CB.CASE_ID =PCE.CASE_ID(+)
	    AND CB.CASE_ID = CX.CASE_ID(+)
	    AND CB.CASE_ID= CC.CASE_ID(+)
	    AND CB.CASE_TYPE IS NULL
	    AND CB.INPUTER = U.USER_ID
	    AND U.ORG_ID = O.ORG_CODE  
	    AND CB.CASE_STATE = 2  
	    ) CB2
	    WHERE CB1.CASE_ID != CB2.CASE_ID 
	    AND CB1.INPUTER = CB2.INPUTER
	    <include refid="yisiFaCaseField" />
	    )CC
	    WHERE 1=1
		<if test="caseName != null and caseName != ''">
		    AND CC.CASE_NAME LIKE CONCAT('%',CONCAT(#{caseName},'%'))
		 </if>
		 <if test="caseNo != null and caseNo != ''">
		    AND CC.CASE_NO LIKE CONCAT('%',CONCAT(#{caseNo},'%'))
		 </if>		
	</select>
	<resultMap extends="ResultMapWithBLOBs" id="yisiFaResultMap" type="com.ksource.liangfa.domain.CaseBasic">
		<result column="CHUFA_TIME" property="chufaTime" />
		<result column="ANFA_ADDRESS" property="anfaAddress" />
		<result column="ANFA_ADDRESS_NAME" property="anfaAddressName" />
		<result column="ANFA_TIME" property="anfaTime" />
		<result column="XIANYIREN_NAME" property="xianyirenName" />
		<result column="COMPANY_NAME" property="companyName" />
		<result column="ORG_NAME" property="orgName" />
		<result column="DISTRICT_CODE" property="districtCode" />
		<result column="GOODS_INVOLVED" property="goodsInvolved" />
	</resultMap>
	<select id="getyisiFaCaseList" parameterType="map" resultMap="yisiFaResultMap">
	    SELECT CC.CASE_ID,CC.CASE_NO,CC.CASE_NAME,CC.INPUTER,CC.INPUT_TIME,CC.CHUFA_TIME,CC.ANFA_ADDRESS,CC.ANFA_ADDRESS_NAME,
	    CC.ANFA_TIME,CC.AMOUNT_INVOLVED,CC.ORG_NAME,CC.IDENTIFY_TYPE,CC.CASE_STATE,CC.GOODS_INVOLVED,CC.XIANYIREN_NAME,CC.COMPANY_NAME,
	    CC.DISTRICT_CODE
	    FROM 
	    (SELECT DISTINCT
	    CB1.CASE_ID,CB1.CASE_NO,CB1.CASE_NAME,CB1.INPUTER,CB1.INPUT_TIME,CB1.CHUFA_TIME,CB1.ANFA_ADDRESS,CB1.ANFA_ADDRESS_NAME,
	    CB1.ANFA_TIME,CB1.AMOUNT_INVOLVED,CB1.ORG_CODE,CB1.ORG_NAME,CB1.IDENTIFY_TYPE,CB1.ORG_PATH,
	    CB1.CASE_STATE,CB1.GOODS_INVOLVED,CB1.XIANYIREN_NAME,CB1.COMPANY_NAME,CB1.DISTRICT_CODE
	    FROM
	    (SELECT
	    CB.CASE_ID,CB.CASE_NO,CB.CASE_NAME,CB.INPUTER,CB.INPUT_TIME,PCE.CHUFA_TIME,CB.ANFA_ADDRESS,
	    (SELECT DISTRICT_NAME FROM DISTRICT WHERE DISTRICT_CODE=CB.ANFA_ADDRESS)AS ANFA_ADDRESS_NAME,
	    CB.ANFA_TIME,CB.AMOUNT_INVOLVED,O.ORG_CODE,O.ORG_NAME,PCE.identify_type,CB.CASE_STATE,PCE.GOODS_INVOLVED,
	    CX.IDS_NO,CX."NAME" AS XIANYIREN_NAME,CC."NAME" AS COMPANY_NAME,O.DISTRICT_CODE,O.ORG_PATH
	    FROM CASE_BASIC CB,CASE_STATE CST,PENALTY_CASE_FORM PCE,CASE_XIANYIREN CX,CASE_COMPANY CC,USER_ U,ORGANISE O
	    WHERE
	    CB.PROC_KEY = 'chufaProc'
	    AND CB.CASE_ID = CST.CASE_ID
	    AND CB.CASE_ID=PCE.CASE_ID(+)
	    AND CB.CASE_ID = CX.CASE_ID(+)
	    AND CB.CASE_ID= CC.CASE_ID(+)
	    AND CB.CASE_TYPE IS NULL
	    AND CB.INPUTER = U.USER_ID
	    AND U.ORG_ID = O.ORG_CODE
	    AND CB.CASE_STATE = 2
	    ) CB1,
	    (SELECT
	    CB.CASE_ID,CB.CASE_NO,CB.CASE_NAME,CB.INPUTER,CB.INPUT_TIME,PCE.CHUFA_TIME,CB.ANFA_ADDRESS,
	    CB.ANFA_TIME,CB.AMOUNT_INVOLVED,O.ORG_CODE,O.ORG_NAME,PCE.IDENTIFY_TYPE,CB.CASE_STATE,PCE.GOODS_INVOLVED,
	    CX.IDS_NO,CX."NAME" AS XIANYIREN_NAME,CC."NAME" AS COMPANY_NAME,O.DISTRICT_CODE
	    FROM CASE_BASIC CB,CASE_STATE CST,PENALTY_CASE_FORM PCE,CASE_XIANYIREN CX,CASE_COMPANY CC,USER_ U,ORGANISE O
	    WHERE
	    CB.PROC_KEY = 'chufaProc'
	    AND CB.CASE_ID = CST.CASE_ID
	    AND CB.CASE_ID =PCE.CASE_ID(+)
	    AND CB.CASE_ID = CX.CASE_ID(+)
	    AND CB.CASE_ID= CC.CASE_ID(+)
	    AND CB.CASE_TYPE IS NULL
	    AND CB.INPUTER = U.USER_ID
	    AND U.ORG_ID = O.ORG_CODE   
	    AND CB.CASE_STATE = 2 
	    ) CB2
	    WHERE CB1.CASE_ID != CB2.CASE_ID 
	    AND CB1.INPUTER = CB2.INPUTER
	    <include refid="yisiFaCaseField" />
	    ORDER BY CB1.INPUTER,CB1.ANFA_TIME DESC,CB1.ANFA_ADDRESS ASC)CC
	    WHERE 1=1
	    
	    <if test="caseName != null and caseName != ''">
	        AND CC.CASE_NAME LIKE CONCAT('%',CONCAT(#{caseName},'%'))
	     </if>
	     <if test="caseNo != null and caseNo != ''">
	        AND CC.CASE_NO LIKE CONCAT('%',CONCAT(#{caseNo},'%'))
	     </if>
	</select>
	
	<sql id="yisiFaCaseField">
		<trim>
			<if test="orgPath!=null and orgPath !='' and orgPath != '-1'">
				AND CB1.ORG_PATH LIKE CONCAT(#{orgPath},'%')
			</if>
            <if test="orgId !=null and orgId !='' ">
                AND CB1.ORG_CODE = #{orgId}
            </if>
			<if test="districtCode !=null and districtCode !='' ">
				AND CB1.DISTRICT_CODE LIKE CONCAT('%',concat(#{districtCode},'%'))
			</if>
			<choose>
				<when test="startMoney != null and endMoney != null ">
			      <![CDATA[
			       	AND  CB1.AMOUNT_INVOLVED >= #{startMoney,jdbcType=DECIMAL} AND CB1.AMOUNT_INVOLVED  <= (#{endMoney,jdbcType=DECIMAL})
			       	AND  CB2.AMOUNT_INVOLVED >= #{startMoney,jdbcType=DECIMAL} AND CB2.AMOUNT_INVOLVED  <= (#{endMoney,jdbcType=DECIMAL})
			       	]]>
				</when>
				<when test="endMoney != null ">
			      <![CDATA[
				      	AND  CB1.AMOUNT_INVOLVED  <= (#{endMoney,jdbcType=DECIMAL})
				      	AND  CB2.AMOUNT_INVOLVED  <= (#{endMoney,jdbcType=DECIMAL})
				   ]]>
				</when>
				<when test="startMoney != null and amountInvolved==null">
			      <![CDATA[
				      	AND  CB1.AMOUNT_INVOLVED >= #{startMoney,jdbcType=DECIMAL}
				      	AND  CB2.AMOUNT_INVOLVED >= #{startMoney,jdbcType=DECIMAL}
				  ]]>
				</when>
			</choose>
	        <if test="address != null and address != ''">
	        	AND	CB1.ANFA_ADDRESS = CB2.ANFA_ADDRESS
	        	AND CB1.ANFA_ADDRESS IS NOT NULL
	        </if>
			<if test="shijian != null and shijian != ''">
				AND	CB1.ANFA_TIME = CB2.ANFA_TIME
	        	AND CB1.ANFA_TIME IS NOT NULL				
			</if>
			<if test="wupin != null and wupin != ''">
				AND CB1.GOODS_INVOLVED = CB2.GOODS_INVOLVED 
				AND CB1.GOODS_INVOLVED IS NOT NULL
			</if>
			<if test="jianding != null and jianding != ''">
				AND CB1.IDENTIFY_TYPE = CB2.IDENTIFY_TYPE 
				AND CB1.IDENTIFY_TYPE IS NOT NULL 
				AND CB1.IDENTIFY_TYPE != 6
			</if>			
			<if test="shijian != null ">
				AND	CB1.CHUFA_TIME = CB2.CHUFA_TIME
			</if>
			<if test="dangshiren !=null and dangshiren != '' ">
				AND CB1.XIANYIREN_NAME = CB2.XIANYIREN_NAME
			</if>	
			<if test="danwei !=null and danwei !='' ">
				AND CB1.COMPANY_NAME = CB2.COMPANY_NAME
			</if>
			<choose>
				<when test="minCaseInputTime !=null and maxCaseInputTime !=null">
					<![CDATA[ 
					AND ( CB1.INPUT_TIME >= #{minCaseInputTime,jdbcType=TIMESTAMP} AND CB1.INPUT_TIME < (#{maxCaseInputTime,jdbcType=TIMESTAMP} + INTERVAL '1' DAY) )
					AND ( CB2.INPUT_TIME >= #{minCaseInputTime,jdbcType=TIMESTAMP} AND CB2.INPUT_TIME < (#{maxCaseInputTime,jdbcType=TIMESTAMP} + INTERVAL '1' DAY) )
					]]>
				</when>
				<when test="minCaseInputTime !=null">
					<![CDATA[ AND CB1.INPUT_TIME >= #{minCaseInputTime,jdbcType=TIMESTAMP}]]>
					<![CDATA[ AND CB2.INPUT_TIME >= #{minCaseInputTime,jdbcType=TIMESTAMP}]]>
				</when>
				<when test="maxCaseInputTime !=null">
					<![CDATA[ AND CB1.INPUT_TIME < (#{maxCaseInputTime,jdbcType=TIMESTAMP} + INTERVAL '1' DAY)]]>
					<![CDATA[ AND CB2.INPUT_TIME < (#{maxCaseInputTime,jdbcType=TIMESTAMP} + INTERVAL '1' DAY)]]>						
				</when>
			</choose>
			<choose>
				<when test="startTime !=null and endTime !=null">
					<![CDATA[ 
						AND ( CB1.INPUT_TIME >= #{startTime,jdbcType=TIMESTAMP} AND CB1.INPUT_TIME < (#{endTime,jdbcType=TIMESTAMP} + INTERVAL '1' DAY) )
						AND ( CB2.INPUT_TIME >= #{startTime,jdbcType=TIMESTAMP} AND CB2.INPUT_TIME < (#{endTime,jdbcType=TIMESTAMP} + INTERVAL '1' DAY) )
					]]>
				</when>
				<when test="startTime !=null">
					<![CDATA[ AND CB1.INPUT_TIME >= #{startTime,jdbcType=TIMESTAMP}]]>
					<![CDATA[ AND CB2.INPUT_TIME >= #{startTime,jdbcType=TIMESTAMP}]]>
				</when>
				<when test="endTime !=null">
					<![CDATA[ AND CB1.INPUT_TIME < (#{endTime,jdbcType=TIMESTAMP} + INTERVAL '1' DAY)]]>
					<![CDATA[ AND CB2.INPUT_TIME < (#{endTime,jdbcType=TIMESTAMP} + INTERVAL '1' DAY)]]>						
				</when>
			</choose>	
			<if test="yearCode !=null and yearCode !=''"> 
				AND  TO_CHAR(CB1.INPUT_TIME,'yyyy')=${yearCode}
				AND  TO_CHAR(CB2.INPUT_TIME,'yyyy')=${yearCode}
			</if>
			<if test="quarterCode !=null and quarterCode !=''">
				AND TO_CHAR(CB1.INPUT_TIME,'Q')=${quarterCode}
				AND TO_CHAR(CB2.INPUT_TIME,'Q')=${quarterCode}
			</if>
			<if test="monthCode !=null and monthCode !=''"> 
				AND TO_CHAR(CB1.INPUT_TIME,'MM')=${monthCode}
				AND TO_CHAR(CB2.INPUT_TIME,'MM')=${monthCode}
			</if>
		</trim>
	</sql>
	
	
	<select id="getDaibuAndQisuCaseCount" parameterType="map" resultType="java.lang.Integer">
		SELECT COUNT(DISTINCT CB.CASE_ID)
    	FROM 
    	<choose>
			<when test="policeType==2">
				(SELECT C.CASE_ID,C.CASE_NO,C.CASE_NAME,C.INPUTER,C.INPUT_TIME,C.AMOUNT_INVOLVED,
				 C.ACCEPT_UNIT,C.CASE_STATE,C.RECORD_SRC,C.LATEST_POCESS_TIME,C.PROC_KEY,C.CASE_TYPE
					FROM CASE_BASIC C,
					(SELECT S.CASE_ID
				      FROM CASE_STEP S, ORGANISE O
				      WHERE S.TARGET_ORG_ID = O.ORG_CODE
				      AND S.TARGET_ORG_TYPE = '3'
				      AND O.POLICE_TYPE=2
				      GROUP BY CASE_ID 
				     ) SO
				 WHERE C.CASE_ID=SO.CASE_ID) CB
			</when>
			<when test="policeType==1">
				(SELECT C.CASE_ID,C.CASE_NO,C.CASE_NAME,C.INPUTER,C.INPUT_TIME,C.AMOUNT_INVOLVED,
				 C.ACCEPT_UNIT,C.CASE_STATE,C.RECORD_SRC,C.LATEST_POCESS_TIME,C.PROC_KEY,C.CASE_TYPE
				 FROM CASE_BASIC C LEFT JOIN 
				   (SELECT S.CASE_ID,o.police_type FROM CASE_STEP S, ORGANISE O
				    WHERE S.TARGET_ORG_ID = O.ORG_CODE
				    AND S.TARGET_ORG_TYPE = '3'
				    GROUP BY CASE_ID,O.POLICE_TYPE) SO
				    on C.CASE_ID = SO.CASE_ID 
				 WHERE (SO.POLICE_TYPE = 1 OR SO.POLICE_TYPE IS NULL)) CB
			</when>
			<otherwise>
				CASE_BASIC CB 
			</otherwise>
		  </choose>
    	,CASE_STATE CS,PENALTY_CASE_FORM PCE,CASE_XIANYIREN K
    	WHERE CB.CASE_ID=CS.CASE_ID
    	AND CB.CASE_ID=PCE.CASE_ID(+)
   		AND CB.CASE_ID=K.CASE_ID
		<if test="districtId!=null and districtId!='' ">
			AND EXISTS (
       		SELECT U.USER_ID FROM V_USER_ORGANISE_DISTRICT U WHERE 
           	U.USER_ID=CB.INPUTER AND U.DISTRICT_CODE LIKE #{districtId}||'%' 
			)
		</if>
		<if test="shortDistrictId!=null and shortDistrictId!='' ">
			AND EXISTS (
       		SELECT U.USER_ID FROM V_USER_ORGANISE_DISTRICT U WHERE 
           	U.USER_ID=CB.INPUTER AND U.DISTRICT_CODE LIKE #{shortDistrictId}||'%'
			)
		</if>
        <if test="districtCode!=null and districtCode!='' ">
            AND EXISTS (
            SELECT 1 FROM V_USER_ORGANISE_DISTRICT U WHERE 
            U.USER_ID=CB.INPUTER AND U.DISTRICT_CODE LIKE #{districtCode}||'%'
            )
        </if>		
		<if test="industryType!=null">
			  AND EXISTS (
        		SELECT U.USER_ID FROM V_USER_ORGANISE_DISTRICT U WHERE 
            	U.USER_ID=CB.INPUTER AND U.INDUSTRY_TYPE= #{industryType}
				)
		</if>
		<if test="orgPath!=null">
			AND EXISTS (
        		SELECT U.USER_ID FROM V_USER_ORGANISE_DISTRICT U WHERE 
            	U.USER_ID=CB.INPUTER AND U.ORG_PATH LIKE #{orgPath} ||'%'
				)
		</if>
		<if test="caseNo != null">
			AND CB.CASE_NO LIKE CONCAT(CONCAT('%',#{caseNo}),'%')
		</if>
		<if test="caseName != null">
			AND CB.CASE_NAME LIKE CONCAT(CONCAT('%',#{caseName}),'%')
		</if>
		<if test="isDqdj != null and isDqdj!='' ">
  			AND PCE.IS_DQDJ =#{isDqdj}
		</if>
		<if test="tiqingdaibuState!= null">
			AND (K.DAIBU_STATE=2 OR K.DAIBU_STATE=3)
		</if>
		<if test="tiqingqisuState!= null">
			AND K.TIQINGQISU_STATE=2
		</if>
		<if test="procKey!=null">
			   AND CB.PROC_KEY=#{procKey}
		</if>
		<if test="startTime != null and startTime!='' and startTime!='null'">
			<![CDATA[
			   AND CB.INPUT_TIME >= TO_DATE(#{startTime},'yyyy-MM')
			 	]]>
		</if>
		<if test="endTime != null and endTime!='' and endTime!='null'">
			 <![CDATA[
			     AND CB.INPUT_TIME  < TO_DATE(#{endTime},'yyyy-MM') + INTERVAL '1' MONTH
			 	]]>
		</if>
		<if test="startTimeApp != null and startTimeApp!='' and startTimeApp!='null'">
			<![CDATA[
			   AND CB.INPUT_TIME >= TO_DATE(#{startTimeApp},'yyyy-MM-dd')
			 	]]>
		</if>
		<if test="endTimeApp != null and endTimeApp!='' and endTimeApp!='null'">
			 <![CDATA[
			     AND CB.INPUT_TIME  < TO_DATE(#{endTimeApp},'yyyy-MM-dd') + INTERVAL '1' DAY
			 	]]>
		</if>
		<if test="yearCode!= null and yearCode!='null' and yearCode!=''">
			AND TO_CHAR(CB.INPUT_TIME,'yyyy') = #{yearCode}
		</if>
		<if test="quarterCode!= null and quarterCode!='null' and quarterCode!=''">
			<if test="quarterCode==1">
				AND TO_CHAR(CB.INPUT_TIME,'MM') &gt;= 01
				AND TO_CHAR(CB.INPUT_TIME,'MM') &lt;= 03
			</if>
			<if test="quarterCode==2">
				AND TO_CHAR(CB.INPUT_TIME,'MM') &gt;= 04
				AND TO_CHAR(CB.INPUT_TIME,'MM') &lt;= 06
			</if>
			<if test="quarterCode==3">
				AND TO_CHAR(CB.INPUT_TIME,'MM') &gt;= 07
				AND TO_CHAR(CB.INPUT_TIME,'MM') &lt;= 09
			</if>
			<if test="quarterCode==4">
				AND TO_CHAR(CB.INPUT_TIME,'MM') &gt;= 10
				AND TO_CHAR(CB.INPUT_TIME,'MM') &lt;= 12
			</if>
		</if>
		<if test="monthCode!= null and monthCode!='null' and monthCode!=''">
			AND TO_CHAR(CB.INPUT_TIME,'yyyyMM') = #{monthCode}
		</if>
	</select>
	<select id="getDaibuAndQisuCaseList" parameterType="map" resultMap="PenaltyCaseMap">
		SELECT DISTINCT CB.CASE_ID,
           CB.CASE_NO,
           CB.CASE_NAME,
           CB.CASE_STATE,
           PCE.CHUFA_TIME,
           CB.INPUT_TIME,
           CB.LATEST_POCESS_TIME,
           CB.PROC_KEY,
           (SELECT ORG_NAME FROM ORGANISE WHERE ORG_CODE=CB.INPUT_UNIT)as orgName
    	FROM 
    	<choose>
			<when test="policeType==2">
				(SELECT C.CASE_ID,C.CASE_NO,C.CASE_NAME,C.INPUTER,C.INPUT_TIME,C.AMOUNT_INVOLVED,
				 C.ACCEPT_UNIT,C.CASE_STATE,C.RECORD_SRC,C.LATEST_POCESS_TIME,C.PROC_KEY,C.CASE_TYPE
					FROM CASE_BASIC C,
					(SELECT S.CASE_ID
				      FROM CASE_STEP S, ORGANISE O
				      WHERE S.TARGET_ORG_ID = O.ORG_CODE
				      AND S.TARGET_ORG_TYPE = '3'
				      AND O.POLICE_TYPE=2
				      GROUP BY CASE_ID 
				     ) SO
				 WHERE C.CASE_ID=SO.CASE_ID) CB
			</when>
			<when test="policeType==1">
				 (SELECT C.CASE_ID,C.CASE_NO,C.CASE_NAME,C.INPUTER,C.INPUT_TIME,C.AMOUNT_INVOLVED,
				 C.ACCEPT_UNIT,C.CASE_STATE,C.RECORD_SRC,C.LATEST_POCESS_TIME,C.PROC_KEY,C.CASE_TYPE
				 FROM CASE_BASIC C LEFT JOIN 
				   (SELECT S.CASE_ID,o.police_type FROM CASE_STEP S, ORGANISE O
				    WHERE S.TARGET_ORG_ID = O.ORG_CODE
				    AND S.TARGET_ORG_TYPE = '3'
				    GROUP BY CASE_ID,O.POLICE_TYPE) SO
				    on C.CASE_ID = SO.CASE_ID 
				 WHERE (SO.POLICE_TYPE = 1 OR SO.POLICE_TYPE IS NULL)) CB
			</when>
			<otherwise>
				CASE_BASIC CB 
			</otherwise>
		  </choose>
    	,CASE_STATE CS,PENALTY_CASE_FORM PCE,CASE_XIANYIREN K
    	WHERE CB.CASE_ID=CS.CASE_ID
    	AND CB.CASE_ID=PCE.CASE_ID(+)
   		AND CB.CASE_ID=K.CASE_ID
		<if test="districtId!=null and districtId!='' ">
			AND EXISTS (
       		SELECT U.USER_ID FROM V_USER_ORGANISE_DISTRICT U WHERE 
           	U.USER_ID=CB.INPUTER AND U.DISTRICT_CODE LIKE #{districtId}||'%'
			)
		</if>
		<if test="shortDistrictId!=null and shortDistrictId!='' ">
			AND EXISTS (
       		SELECT U.USER_ID FROM V_USER_ORGANISE_DISTRICT U WHERE 
           	U.USER_ID=CB.INPUTER AND U.DISTRICT_CODE LIKE #{shortDistrictId}||'%'
			)
		</if>
        <if test="districtCode!=null and districtCode!='' ">
            AND EXISTS (
            SELECT 1 FROM V_USER_ORGANISE_DISTRICT U WHERE 
            U.USER_ID=CB.INPUTER AND U.DISTRICT_CODE LIKE #{districtCode}||'%'
            )
        </if>		
		<if test="industryType!=null">
			  AND EXISTS (
        		SELECT U.USER_ID FROM V_USER_ORGANISE_DISTRICT U WHERE 
            	U.USER_ID=CB.INPUTER AND U.INDUSTRY_TYPE= #{industryType}
				)
		</if>
		<if test="orgPath!=null">
			AND EXISTS (
        		SELECT U.USER_ID FROM V_USER_ORGANISE_DISTRICT U WHERE 
            	U.USER_ID=CB.INPUTER AND U.ORG_PATH LIKE #{orgPath} ||'%'
				)
		</if>
		<if test="caseNo != null">
			AND CB.CASE_NO LIKE CONCAT(CONCAT('%',#{caseNo}),'%')
		</if>
		<if test="caseName != null">
			AND CB.CASE_NAME LIKE CONCAT(CONCAT('%',#{caseName}),'%')
		</if>
		<if test="isDqdj != null and isDqdj!='' ">
  			AND PCE.IS_DQDJ =#{isDqdj}
		</if>
		<if test="tiqingdaibuState!= null">
			AND (K.DAIBU_STATE=2 OR K.DAIBU_STATE=3)
		</if>
		<if test="tiqingqisuState!= null">
			AND K.TIQINGQISU_STATE=2
		</if>
		<if test="procKey!=null">
			   AND CB.PROC_KEY=#{procKey}
		</if>
		<if test="startTime != null and startTime!='' and startTime!='null'">
			<![CDATA[
			   AND CB.INPUT_TIME >= TO_DATE(#{startTime},'yyyy-MM')
			 	]]>
		</if>
		<if test="endTime != null and endTime!='' and endTime!='null'">
			 <![CDATA[
			     AND CB.INPUT_TIME  < TO_DATE(#{endTime},'yyyy-MM') + INTERVAL '1' MONTH
			 	]]>
		</if>
		<if test="startTimeApp != null and startTimeApp!='' and startTimeApp!='null'">
			<![CDATA[
			   AND CB.INPUT_TIME >= TO_DATE(#{startTimeApp},'yyyy-MM-dd')
			 	]]>
		</if>
		<if test="endTimeApp != null and endTimeApp!='' and endTimeApp!='null'">
			 <![CDATA[
			     AND CB.INPUT_TIME  < TO_DATE(#{endTimeApp},'yyyy-MM-dd') + INTERVAL '1' DAY
			 	]]>
		</if>
		<!-- ??????????(?????)??????? -->
		<if test="yearCode!= null and yearCode!='null' and yearCode!=''">
			AND TO_CHAR(CB.INPUT_TIME,'yyyy') = #{yearCode}
		</if>
		<if test="quarterCode!= null and quarterCode!='null' and quarterCode!=''">
			<if test="quarterCode==1">
				AND TO_CHAR(CB.INPUT_TIME,'MM') &gt;= 01
				AND TO_CHAR(CB.INPUT_TIME,'MM') &lt;= 03
			</if>
			<if test="quarterCode==2">
				AND TO_CHAR(CB.INPUT_TIME,'MM') &gt;= 04
				AND TO_CHAR(CB.INPUT_TIME,'MM') &lt;= 06
			</if>
			<if test="quarterCode==3">
				AND TO_CHAR(CB.INPUT_TIME,'MM') &gt;= 07
				AND TO_CHAR(CB.INPUT_TIME,'MM') &lt;= 09
			</if>
			<if test="quarterCode==4">
				AND TO_CHAR(CB.INPUT_TIME,'MM') &gt;= 10
				AND TO_CHAR(CB.INPUT_TIME,'MM') &lt;= 12
			</if>
		</if>
		<if test="monthCode!= null and monthCode!='null' and monthCode!=''">
			AND TO_CHAR(CB.INPUT_TIME,'yyyyMM') = #{monthCode}
		</if>
		ORDER BY CB.LATEST_POCESS_TIME DESC
	</select>
	
	
	<select id="getDaibuCaseCountByOrg" parameterType="map" resultType="java.lang.Integer">
		SELECT COUNT(DISTINCT CB.CASE_ID)
    	FROM 
    	<choose>
			<when test="policeType==2">
				(SELECT C.CASE_ID,C.CASE_NO,C.CASE_NAME,C.INPUTER,C.INPUT_TIME,C.AMOUNT_INVOLVED,
				 C.ACCEPT_UNIT,C.CASE_STATE,C.RECORD_SRC,C.LATEST_POCESS_TIME,C.PROC_KEY,C.CASE_TYPE
					FROM CASE_BASIC C,
					(SELECT S.CASE_ID
				      FROM CASE_STEP S, ORGANISE O
				      WHERE S.TARGET_ORG_ID = O.ORG_CODE
				      AND S.TARGET_ORG_TYPE = '3'
				      AND O.POLICE_TYPE=2
				      GROUP BY CASE_ID 
				     ) SO
				 WHERE C.CASE_ID=SO.CASE_ID) CB
			</when>
			<when test="policeType==1">
				(SELECT C.CASE_ID,C.CASE_NO,C.CASE_NAME,C.INPUTER,C.INPUT_TIME,C.AMOUNT_INVOLVED,
				 C.ACCEPT_UNIT,C.CASE_STATE,C.RECORD_SRC,C.LATEST_POCESS_TIME,C.PROC_KEY,C.CASE_TYPE 
				 FROM CASE_BASIC C LEFT JOIN 
				   (SELECT S.CASE_ID,O.POLICE_TYPE FROM CASE_STEP S, ORGANISE O
				    WHERE S.TARGET_ORG_ID = O.ORG_CODE
				    AND S.TARGET_ORG_TYPE = '3'
				    GROUP BY CASE_ID,O.POLICE_TYPE) SO
				    ON C.CASE_ID = SO.CASE_ID
				 WHERE (SO.POLICE_TYPE = 1 OR SO.POLICE_TYPE IS NULL)) CB
			</when>
			<otherwise>
				CASE_BASIC CB 
			</otherwise>
		  </choose>
    	,CASE_STATE CS,PENALTY_CASE_FORM PCE,CASE_XIANYIREN K,V_USER_ORGANISE_DISTRICT U
    	WHERE CB.CASE_ID=CS.CASE_ID
    	AND CB.CASE_ID=PCE.CASE_ID(+)
   		AND CB.CASE_ID=K.CASE_ID
   		AND CB.INPUTER=U.USER_ID
    	<if test="districtId!=null and districtId!='' ">
			AND U.DISTRICT_CODE LIKE #{districtId} ||'%' 
   		 </if>
   		 <if test="orgCode!=null and orgCode!='' ">
   		 	AND CB.INPUTER IN (SELECT A.USER_ID FROM USER_ A WHERE 
        		A.ORG_ID =#{orgCode}
				)
   		 </if>
   		 <if test="industryType!=null and industryType!='' ">
   		 	AND U.INDUSTRY_TYPE = #{industryType}
   		 </if>
		 <if test="orgPath!=null">
			  AND U.ORG_PATH LIKE #{orgPath} ||'%'
		</if>
		<if test="procKey!=null">
			   AND CB.PROC_KEY=#{procKey}
		</if>
			AND K.DAIBU_STATE=3
			AND CS.DAIBU_STATE=2
		<if test="caseNo != null">
			AND CB.CASE_NO LIKE CONCAT(CONCAT('%',#{caseNo}),'%')
		</if>
		<if test="caseName != null">
			AND CB.CASE_NAME LIKE CONCAT(CONCAT('%',#{caseName}),'%')
		</if>
		<if test="isDqdj != null and isDqdj!='' ">
  			AND PCE.IS_DQDJ =#{isDqdj}
		</if>
		<if test="startTime != null and startTime!='' and startTime!='null'">
			<![CDATA[
			   AND CB.INPUT_TIME >= TO_DATE(#{startTime},'yyyy-MM')
			 	]]>
		</if>
		<if test="endTime != null and endTime!='' and endTime!='null'">
			 <![CDATA[
			     AND CB.INPUT_TIME  < TO_DATE(#{endTime},'yyyy-MM') + INTERVAL '1' MONTH
			 	]]>
		</if>
		<if test="yearCode!= null and yearCode!='null' and yearCode!=''">
			AND TO_CHAR(CB.INPUT_TIME,'yyyy') = #{yearCode}
		</if>
		<if test="quarterCode!= null and quarterCode!='null' and quarterCode!=''">
			<if test="quarterCode==1">
				AND TO_CHAR(CB.INPUT_TIME,'MM') &gt;= 01
				AND TO_CHAR(CB.INPUT_TIME,'MM') &lt;= 03
			</if>
			<if test="quarterCode==2">
				AND TO_CHAR(CB.INPUT_TIME,'MM') &gt;= 04
				AND TO_CHAR(CB.INPUT_TIME,'MM') &lt;= 06
			</if>
			<if test="quarterCode==3">
				AND TO_CHAR(CB.INPUT_TIME,'MM') &gt;= 07
				AND TO_CHAR(CB.INPUT_TIME,'MM') &lt;= 09
			</if>
			<if test="quarterCode==4">
				AND TO_CHAR(CB.INPUT_TIME,'MM') &gt;= 10
				AND TO_CHAR(CB.INPUT_TIME,'MM') &lt;= 12
			</if>
		</if>
		<if test="monthCode!= null and monthCode!='null' and monthCode!=''">
			AND TO_CHAR(CB.INPUT_TIME,'yyyyMM') = #{monthCode}
		</if>
	</select>
	<select id="getDaibuCaseListByOrg" parameterType="map" resultMap="PenaltyCaseMap">
		SELECT DISTINCT CB.CASE_ID,
           CB.CASE_NO,
           CB.CASE_NAME,
           CB.CASE_STATE,
           PCE.CHUFA_TIME,
           CB.INPUT_TIME,
           CB.LATEST_POCESS_TIME,
           CB.PROC_KEY,
           U.ORG_NAME
    	FROM 
    	<choose>
			<when test="policeType==2">
				(SELECT C.CASE_ID,C.CASE_NO,C.CASE_NAME,C.INPUTER,C.INPUT_TIME,C.AMOUNT_INVOLVED,
				 C.ACCEPT_UNIT,C.CASE_STATE,C.RECORD_SRC,C.LATEST_POCESS_TIME,C.PROC_KEY,C.CASE_TYPE
					FROM CASE_BASIC C,
					(SELECT S.CASE_ID
				      FROM CASE_STEP S, ORGANISE O
				      WHERE S.TARGET_ORG_ID = O.ORG_CODE
				      AND S.TARGET_ORG_TYPE = '3'
				      AND O.POLICE_TYPE=2
				      GROUP BY CASE_ID 
				     ) SO
				 WHERE C.CASE_ID=SO.CASE_ID) CB
			</when>
			<when test="policeType==1">
				 (SELECT C.CASE_ID,C.CASE_NO,C.CASE_NAME,C.INPUTER,C.INPUT_TIME,C.AMOUNT_INVOLVED,
				 C.ACCEPT_UNIT,C.CASE_STATE,C.RECORD_SRC,C.LATEST_POCESS_TIME,C.PROC_KEY,C.CASE_TYPE 
				 FROM CASE_BASIC C LEFT JOIN 
				   (SELECT S.CASE_ID,o.police_type FROM CASE_STEP S, ORGANISE O
				    WHERE S.TARGET_ORG_ID = O.ORG_CODE
				    AND S.TARGET_ORG_TYPE = '3'
				    GROUP BY CASE_ID,O.POLICE_TYPE) SO
				    on C.CASE_ID = SO.CASE_ID
				 WHERE (SO.POLICE_TYPE = 1 OR SO.POLICE_TYPE IS NULL)) CB
			</when>
			<otherwise>
				CASE_BASIC CB 
			</otherwise>
		  </choose>
    	,CASE_STATE CS,PENALTY_CASE_FORM PCE,CASE_XIANYIREN K,V_USER_ORGANISE_DISTRICT U
    	WHERE CB.CASE_ID=CS.CASE_ID
    	AND CB.CASE_ID=PCE.CASE_ID(+)
   		AND CB.CASE_ID=K.CASE_ID
   		AND CB.INPUTER=U.USER_ID
		<if test="districtId!=null and districtId!='' ">
			AND U.DISTRICT_CODE LIKE #{districtId} ||'%'
   		 </if>
   		 <if test="orgCode!=null and orgCode!='' ">
   		 	AND CB.INPUTER IN (SELECT A.USER_ID FROM USER_ A WHERE 
        		A.ORG_ID =#{orgCode}
				)
   		 </if>
   		 <if test="industryType!=null and industryType!='' ">
   		 	AND U.INDUSTRY_TYPE = #{industryType}
   		 </if>
		 <if test="orgPath!=null">
			  AND U.ORG_PATH LIKE #{orgPath} ||'%'
		</if>
		<if test="procKey!=null">
			   AND CB.PROC_KEY=#{procKey}
		</if>
			AND K.DAIBU_STATE=3
			AND CS.DAIBU_STATE=2
		<if test="caseNo != null">
			AND CB.CASE_NO LIKE CONCAT(CONCAT('%',#{caseNo}),'%')
		</if>
		<if test="caseName != null">
			AND CB.CASE_NAME LIKE CONCAT(CONCAT('%',#{caseName}),'%')
		</if>
		<if test="isDqdj != null and isDqdj!='' ">
  			AND PCE.IS_DQDJ =#{isDqdj}
		</if>
		<if test="startTime != null and startTime!='' and startTime!='null'">
			<![CDATA[
			   AND CB.INPUT_TIME >= TO_DATE(#{startTime},'yyyy-MM')
			 	]]>
		</if>
		<if test="endTime != null and endTime!='' and endTime!='null'">
			 <![CDATA[
			     AND CB.INPUT_TIME  < TO_DATE(#{endTime},'yyyy-MM') + INTERVAL '1' MONTH
			 	]]>
		</if>
		<if test="yearCode!= null and yearCode!='null' and yearCode!=''">
			AND TO_CHAR(CB.INPUT_TIME,'yyyy') = #{yearCode}
		</if>
		<if test="quarterCode!= null and quarterCode!='null' and quarterCode!=''">
			<if test="quarterCode==1">
				AND TO_CHAR(CB.INPUT_TIME,'MM') &gt;= 01
				AND TO_CHAR(CB.INPUT_TIME,'MM') &lt;= 03
			</if>
			<if test="quarterCode==2">
				AND TO_CHAR(CB.INPUT_TIME,'MM') &gt;= 04
				AND TO_CHAR(CB.INPUT_TIME,'MM') &lt;= 06
			</if>
			<if test="quarterCode==3">
				AND TO_CHAR(CB.INPUT_TIME,'MM') &gt;= 07
				AND TO_CHAR(CB.INPUT_TIME,'MM') &lt;= 09
			</if>
			<if test="quarterCode==4">
				AND TO_CHAR(CB.INPUT_TIME,'MM') &gt;= 10
				AND TO_CHAR(CB.INPUT_TIME,'MM') &lt;= 12
			</if>
		</if>
		<if test="monthCode!= null and monthCode!='null' and monthCode!=''">
			AND TO_CHAR(CB.INPUT_TIME,'yyyyMM') = #{monthCode}
		</if>
		ORDER BY CB.LATEST_POCESS_TIME DESC
	</select>
	
	
	<select id="getDaibuAndQisuCaseCountByOrg" parameterType="map" resultType="java.lang.Integer">
		SELECT COUNT(DISTINCT CB.CASE_ID)
    	FROM 
    	<choose>
			<when test="policeType==2">
				(SELECT C.CASE_ID,C.CASE_NO,C.CASE_NAME,C.INPUTER,C.INPUT_TIME,C.AMOUNT_INVOLVED,
				 C.ACCEPT_UNIT,C.CASE_STATE,C.RECORD_SRC,C.LATEST_POCESS_TIME,C.PROC_KEY,C.CASE_TYPE
					FROM CASE_BASIC C,
					(SELECT S.CASE_ID
				      FROM CASE_STEP S, ORGANISE O
				      WHERE S.TARGET_ORG_ID = O.ORG_CODE
				      AND S.TARGET_ORG_TYPE = '3'
				      AND O.POLICE_TYPE=2
				      GROUP BY CASE_ID 
				     ) SO
				 WHERE C.CASE_ID=SO.CASE_ID) CB
			</when>
			<when test="policeType==1">
				(SELECT C.CASE_ID,C.CASE_NO,C.CASE_NAME,C.INPUTER,C.INPUT_TIME,C.AMOUNT_INVOLVED,
				 C.ACCEPT_UNIT,C.CASE_STATE,C.RECORD_SRC,C.LATEST_POCESS_TIME,C.PROC_KEY,C.CASE_TYPE
				 FROM CASE_BASIC C LEFT JOIN 
				   (SELECT S.CASE_ID,O.POLICE_TYPE FROM CASE_STEP S, ORGANISE O
				    WHERE S.TARGET_ORG_ID = O.ORG_CODE
				    AND S.TARGET_ORG_TYPE = '3'
				    GROUP BY CASE_ID,O.POLICE_TYPE) SO
				    ON C.CASE_ID = SO.CASE_ID
				 WHERE (SO.POLICE_TYPE = 1 OR SO.POLICE_TYPE IS NULL)) CB
			</when>
			<otherwise>
				CASE_BASIC CB 
			</otherwise>
		  </choose>
    	,CASE_STATE CS,PENALTY_CASE_FORM PCE,CASE_XIANYIREN K,V_USER_ORGANISE_DISTRICT U
    	WHERE CB.CASE_ID=CS.CASE_ID
    	AND CB.CASE_ID=PCE.CASE_ID(+)
   		AND CB.CASE_ID=K.CASE_ID
   		AND CB.INPUTER=U.USER_ID
		<if test="districtId!=null and districtId!='' ">
			AND U.DISTRICT_CODE LIKE #{districtId} ||'%' 
   		 </if>
   		 <if test="orgCode!=null and orgCode!='' ">
   		 	AND CB.INPUTER IN (SELECT A.USER_ID FROM USER_ A WHERE 
        		A.ORG_ID =#{orgCode}
				)
   		 </if>
   		 <if test="industryType!=null and industryType!='' ">
   		 	AND U.INDUSTRY_TYPE = #{industryType}
   		 </if>
		 <if test="orgPath!=null">
			  AND U.ORG_PATH LIKE #{orgPath} ||'%'
		</if>
		<if test="tiqingdaibuState!= null">
			AND (K.DAIBU_STATE=2 OR K.DAIBU_STATE=3)
		</if>
		<if test="tiqingqisuState!= null">
			AND K.TIQINGQISU_STATE=2
		</if>
		<if test="procKey!=null">
			   AND CB.PROC_KEY=#{procKey}
		</if>
		<if test="caseNo != null">
			AND CB.CASE_NO LIKE CONCAT(CONCAT('%',#{caseNo}),'%')
		</if>
		<if test="caseName != null">
			AND CB.CASE_NAME LIKE CONCAT(CONCAT('%',#{caseName}),'%')
		</if>
		<if test="isDqdj != null and isDqdj!='' ">
  			AND PCE.IS_DQDJ =#{isDqdj}
		</if>
		<if test="startTime != null and startTime!='' and startTime!='null'">
			<![CDATA[
			   AND CB.INPUT_TIME >= TO_DATE(#{startTime},'yyyy-MM')
			 	]]>
		</if>
		<if test="endTime != null and endTime!='' and endTime!='null'">
			 <![CDATA[
			     AND CB.INPUT_TIME  < TO_DATE(#{endTime},'yyyy-MM') + INTERVAL '1' MONTH
			 	]]>
		</if>
		<if test="yearCode!= null and yearCode!='null' and yearCode!=''">
			AND TO_CHAR(CB.INPUT_TIME,'yyyy') = #{yearCode}
		</if>
		<if test="quarterCode!= null and quarterCode!='null' and quarterCode!=''">
			<if test="quarterCode==1">
				AND TO_CHAR(CB.INPUT_TIME,'MM') &gt;= 01
				AND TO_CHAR(CB.INPUT_TIME,'MM') &lt;= 03
			</if>
			<if test="quarterCode==2">
				AND TO_CHAR(CB.INPUT_TIME,'MM') &gt;= 04
				AND TO_CHAR(CB.INPUT_TIME,'MM') &lt;= 06
			</if>
			<if test="quarterCode==3">
				AND TO_CHAR(CB.INPUT_TIME,'MM') &gt;= 07
				AND TO_CHAR(CB.INPUT_TIME,'MM') &lt;= 09
			</if>
			<if test="quarterCode==4">
				AND TO_CHAR(CB.INPUT_TIME,'MM') &gt;= 10
				AND TO_CHAR(CB.INPUT_TIME,'MM') &lt;= 12
			</if>
		</if>
		<if test="monthCode!= null and monthCode!='null' and monthCode!=''">
			AND TO_CHAR(CB.INPUT_TIME,'yyyyMM') = #{monthCode}
		</if>
	</select>
	<select id="getDaibuAndQisuCaseListByOrg" parameterType="map" resultMap="PenaltyCaseMap">
		SELECT DISTINCT CB.CASE_ID,
           CB.CASE_NO,
           CB.CASE_NAME,
           CB.CASE_STATE,
           PCE.CHUFA_TIME,
           CB.INPUT_TIME,
           CB.LATEST_POCESS_TIME,
           CB.PROC_KEY,
           U.ORG_NAME
    	FROM 
    	<choose>
			<when test="policeType==2">
				(SELECT C.CASE_ID,C.CASE_NO,C.CASE_NAME,C.INPUTER,C.INPUT_TIME,C.AMOUNT_INVOLVED,
				 C.ACCEPT_UNIT,C.CASE_STATE,C.RECORD_SRC,C.LATEST_POCESS_TIME,C.PROC_KEY,C.CASE_TYPE
					FROM CASE_BASIC C,
					(SELECT S.CASE_ID
				      FROM CASE_STEP S, ORGANISE O
				      WHERE S.TARGET_ORG_ID = O.ORG_CODE
				      AND S.TARGET_ORG_TYPE = '3'
				      AND O.POLICE_TYPE=2
				      GROUP BY CASE_ID 
				     ) SO
				 WHERE C.CASE_ID=SO.CASE_ID) CB
			</when>
			<when test="policeType==1">
				 (SELECT C.CASE_ID,C.CASE_NO,C.CASE_NAME,C.INPUTER,C.INPUT_TIME,C.AMOUNT_INVOLVED,
				 C.ACCEPT_UNIT,C.CASE_STATE,C.RECORD_SRC,C.LATEST_POCESS_TIME,C.PROC_KEY,C.CASE_TYPE
				 FROM CASE_BASIC C LEFT JOIN 
				   (SELECT S.CASE_ID,o.police_type FROM CASE_STEP S, ORGANISE O
				    WHERE S.TARGET_ORG_ID = O.ORG_CODE
				    AND S.TARGET_ORG_TYPE = '3'
				    GROUP BY CASE_ID,O.POLICE_TYPE) SO
				    on C.CASE_ID = SO.CASE_ID
				 WHERE (SO.POLICE_TYPE = 1 OR SO.POLICE_TYPE IS NULL)) CB
			</when>
			<otherwise>
				CASE_BASIC CB 
			</otherwise>
		  </choose>
    	,CASE_STATE CS,PENALTY_CASE_FORM PCE,CASE_XIANYIREN K,V_USER_ORGANISE_DISTRICT U
    	WHERE CB.CASE_ID=CS.CASE_ID
    	AND CB.CASE_ID=PCE.CASE_ID(+)
   		AND CB.CASE_ID=K.CASE_ID
   		AND CB.INPUTER=U.USER_ID
		<if test="districtId!=null and districtId!='' ">
			AND U.DISTRICT_CODE LIKE #{districtId} ||'%'
   		 </if>
   		 <if test="orgCode!=null and orgCode!='' ">
   		 	AND CB.INPUTER IN (SELECT A.USER_ID FROM USER_ A WHERE 
        		A.ORG_ID =#{orgCode}
				)
   		 </if>
   		 <if test="industryType!=null and industryType!='' ">
   		 	AND U.INDUSTRY_TYPE = #{industryType}
   		 </if>
		 <if test="orgPath!=null">
			  AND U.ORG_PATH LIKE #{orgPath} ||'%'
		</if>
		<if test="tiqingdaibuState!= null">
			AND (K.DAIBU_STATE=2 OR K.DAIBU_STATE=3)
		</if>
		<if test="tiqingqisuState!= null">
			AND K.TIQINGQISU_STATE=2
		</if>
		<if test="procKey!=null">
			   AND CB.PROC_KEY=#{procKey}
		</if>
		<if test="caseNo != null">
			AND CB.CASE_NO LIKE CONCAT(CONCAT('%',#{caseNo}),'%')
		</if>
		<if test="caseName != null">
			AND CB.CASE_NAME LIKE CONCAT(CONCAT('%',#{caseName}),'%')
		</if>
		<if test="isDqdj != null and isDqdj!='' ">
  			AND PCE.IS_DQDJ =#{isDqdj}
		</if>
		<if test="startTime != null and startTime!='' and startTime!='null'">
			<![CDATA[
			   AND CB.INPUT_TIME >= TO_DATE(#{startTime},'yyyy-MM')
			 	]]>
		</if>
		<if test="endTime != null and endTime!='' and endTime!='null'">
			 <![CDATA[
			     AND CB.INPUT_TIME  < TO_DATE(#{endTime},'yyyy-MM') + INTERVAL '1' MONTH
			 	]]>
		</if>
		<if test="yearCode!= null and yearCode!='null' and yearCode!=''">
			AND TO_CHAR(CB.INPUT_TIME,'yyyy') = #{yearCode}
		</if>
		<if test="quarterCode!= null and quarterCode!='null' and quarterCode!=''">
			<if test="quarterCode==1">
				AND TO_CHAR(CB.INPUT_TIME,'MM') &gt;= 01
				AND TO_CHAR(CB.INPUT_TIME,'MM') &lt;= 03
			</if>
			<if test="quarterCode==2">
				AND TO_CHAR(CB.INPUT_TIME,'MM') &gt;= 04
				AND TO_CHAR(CB.INPUT_TIME,'MM') &lt;= 06
			</if>
			<if test="quarterCode==3">
				AND TO_CHAR(CB.INPUT_TIME,'MM') &gt;= 07
				AND TO_CHAR(CB.INPUT_TIME,'MM') &lt;= 09
			</if>
			<if test="quarterCode==4">
				AND TO_CHAR(CB.INPUT_TIME,'MM') &gt;= 10
				AND TO_CHAR(CB.INPUT_TIME,'MM') &lt;= 12
			</if>
		</if>
		<if test="monthCode!= null and monthCode!='null' and monthCode!=''">
			AND TO_CHAR(CB.INPUT_TIME,'yyyyMM') = #{monthCode}
		</if>
		ORDER BY CB.LATEST_POCESS_TIME DESC
	</select>
	
	
	<resultMap id="caseAccuseMap" type="com.ksource.liangfa.domain.CaseBasic">
        <result column="ACCUSE_ID" jdbcType="VARCHAR" property="accuseId" />
        <result column="ACCUSE_NAME" jdbcType="VARCHAR" property="accuseName" />
        <result column="CLAUSE" jdbcType="VARCHAR" property="clause" />
        <result column="CASE_NO" jdbcType="VARCHAR" property="caseNo" />
        <result column="CASE_ID" jdbcType="VARCHAR" property="caseId" />
        <result column="CASE_NAME" jdbcType="VARCHAR" property="caseName" />
        <result column="INPUT_UNIT_NAME" jdbcType="VARCHAR" property="inputUnitName" />
        <result column="INPUT_TIME" jdbcType="VARCHAR" property="inputTime" />
    </resultMap>

	<select id="findCaseAccuseList" parameterType="map" resultMap="caseAccuseMap">
		<if test="accuseType != null and accuseType == 'yisong' ">
			SELECT CA.ACCUSE_ID AS ACCUSE_ID,A.NAME AS ACCUSE_NAME,A.CLAUSE,C.CASE_NO,C.CASE_ID,C.CASE_NAME,
			C.INPUT_TIME,U.ORG_NAME AS INPUT_UNIT_NAME
        	FROM CASE_ACCUSE CA,ACCUSE_INFO A,
        	<choose>
				<when test="policeType==2">
					(SELECT CC.CASE_ID,CC.CASE_NO,CC.CASE_NAME,CC.INPUTER,CC.INPUT_TIME,CC.AMOUNT_INVOLVED,
					 CC.ACCEPT_UNIT,CC.CASE_STATE,CC.RECORD_SRC,CC.LATEST_POCESS_TIME,CC.PROC_KEY,CC.CASE_TYPE
						FROM CASE_BASIC CC,
						(SELECT S.CASE_ID
					      FROM CASE_STEP S, ORGANISE O
					      WHERE S.TARGET_ORG_ID = O.ORG_CODE
					      AND S.TARGET_ORG_TYPE = '3'
					      AND O.POLICE_TYPE=2
					      GROUP BY CASE_ID 
					     ) SO
					 WHERE CC.CASE_ID=SO.CASE_ID) C
				</when>
				<when test="policeType==1">
					(SELECT CC.CASE_ID,CC.CASE_NO,CC.CASE_NAME,CC.INPUTER,CC.INPUT_TIME,CC.AMOUNT_INVOLVED,
							CC.ACCEPT_UNIT,CC.CASE_STATE,CC.RECORD_SRC,CC.LATEST_POCESS_TIME,CC.PROC_KEY,CC.CASE_TYPE
						FROM CASE_BASIC CC,
						(SELECT S.CASE_ID,MAX(O.POLICE_TYPE)AS POLICE_TYPE
					      FROM CASE_STEP S, ORGANISE O
					      WHERE S.TARGET_ORG_ID = O.ORG_CODE
					      AND S.TARGET_ORG_TYPE = '3'
					      GROUP BY CASE_ID
					     ) SO
					  WHERE CC.CASE_ID=SO.CASE_ID 
	   				  AND (SO.POLICE_TYPE=1 OR SO.POLICE_TYPE IS NULL)) C
				</when>
				<otherwise>
					CASE_BASIC C 
				</otherwise>
		  	</choose>
        	,V_USER_ORGANISE_DISTRICT U
        	WHERE  CA.CASE_ID=C.CASE_ID  AND CA.ACCUSE_ID=A.ID AND C.INPUTER=U.USER_ID  
        	AND C.PROC_KEY ='chufaProc' AND CA.ZM_TYPE=1
			<if test="districtId!=null and districtId!='' ">
	   		 	AND U.DISTRICT_CODE LIKE #{districtId} ||'%'
	   		 </if>
	   		 <if test="orgCode!=null and orgCode!='' ">
	   		 	AND U.ORG_CODE =#{orgCode} 
	   		 </if>
	   		 <if test="industryType!=null and industryType!='' ">
	   		 	AND U.INDUSTRY_TYPE = #{industryType}
	   		 </if>
			<if test="yearCode!= null and yearCode!='null' and yearCode!=''">
				AND TO_CHAR(C.INPUT_TIME,'yyyy') = #{yearCode}
			</if>
			<if test="quarterCode!= null and quarterCode!='null' and quarterCode!=''">
				<if test="quarterCode==1">
					AND TO_CHAR(C.INPUT_TIME,'MM') &gt;= 01
					AND TO_CHAR(C.INPUT_TIME,'MM') &lt;= 03
				</if>
				<if test="quarterCode==2">
					AND TO_CHAR(C.INPUT_TIME,'MM') &gt;= 04
					AND TO_CHAR(C.INPUT_TIME,'MM') &lt;= 06
				</if>
				<if test="quarterCode==3">
					AND TO_CHAR(C.INPUT_TIME,'MM') &gt;= 07
					AND TO_CHAR(C.INPUT_TIME,'MM') &lt;= 09
				</if>
				<if test="quarterCode==4">
					AND TO_CHAR(C.INPUT_TIME,'MM') &gt;= 10
					AND TO_CHAR(C.INPUT_TIME,'MM') &lt;= 12
				</if>
			</if>
			<if test="monthCode!= null and monthCode!='null' and monthCode!=''">
				AND TO_CHAR(C.INPUT_TIME,'yyyyMM') = #{monthCode}
			</if>
			
			<if test="startTime != null and startTime!='' and startTime!='null'">
				<![CDATA[
				   AND C.INPUT_TIME >= TO_DATE(#{startTime},'yyyy-MM')
				 	]]>
			</if>
			<if test="endTime != null and endTime!='' and endTime!='null'">
				 <![CDATA[
				     AND C.INPUT_TIME  < TO_DATE(#{endTime},'yyyy-MM')+ INTERVAL '1'  MONTH
				 	]]>
			</if>
			AND U.INDUSTRY_TYPE IS NOT NULL 
			ORDER BY ACCUSE_ID
		</if>
		<if test="accuseType != null and accuseType == 'lian' ">
		   SELECT A.ACCUSE_ID AS ACCUSE_ID,A.NAME AS ACCUSE_NAME,A.CLAUSE,A.CASE_NO,A.CASE_ID,A.CASE_NAME,A.ORG_CODE,A.INPUT_UNIT_NAME,A.INPUT_TIME,A.INDUSTRY_TYPE 
              FROM 
            (SELECT CA.ACCUSE_ID,A.NAME,A.CLAUSE,C.INPUT_TIME,U.DISTRICT_CODE,C.CASE_NO,
            C.CASE_ID,C.CASE_NAME,U.ORG_CODE,U.INDUSTRY_TYPE,U.ORG_NAME AS INPUT_UNIT_NAME    
            FROM CASE_ACCUSE CA,ACCUSE_INFO A,
            <choose>
				<when test="policeType==2">
					(SELECT CC.CASE_ID,CC.CASE_NO,CC.CASE_NAME,CC.INPUTER,CC.INPUT_TIME,CC.AMOUNT_INVOLVED,
					 CC.ACCEPT_UNIT,CC.CASE_STATE,CC.RECORD_SRC,CC.LATEST_POCESS_TIME,CC.PROC_KEY,CC.CASE_TYPE
						FROM CASE_BASIC CC,
						(SELECT S.CASE_ID
					      FROM CASE_STEP S, ORGANISE O
					      WHERE S.TARGET_ORG_ID = O.ORG_CODE
					      AND S.TARGET_ORG_TYPE = '3'
					      AND O.POLICE_TYPE=2
					      GROUP BY CASE_ID 
					     ) SO
					 WHERE CC.CASE_ID=SO.CASE_ID) c
				</when>
				<when test="policeType==1">
					(SELECT CC.CASE_ID,CC.CASE_NO,CC.CASE_NAME,CC.INPUTER,CC.INPUT_TIME,CC.AMOUNT_INVOLVED,
							CC.ACCEPT_UNIT,CC.CASE_STATE,CC.RECORD_SRC,CC.LATEST_POCESS_TIME,CC.PROC_KEY,CC.CASE_TYPE
						FROM CASE_BASIC CC,
						(SELECT S.CASE_ID,MAX(O.POLICE_TYPE)AS POLICE_TYPE
					      FROM CASE_STEP S, ORGANISE O
					      WHERE S.TARGET_ORG_ID = O.ORG_CODE
					      AND S.TARGET_ORG_TYPE = '3'
					      GROUP BY CASE_ID
					     ) SO
					  WHERE CC.CASE_ID=SO.CASE_ID 
	   				  AND (SO.POLICE_TYPE=1 OR SO.POLICE_TYPE IS NULL)) C
				</when>
				<otherwise>
					CASE_BASIC c 
				</otherwise>
		  	</choose>
            ,CASE_STATE S,V_USER_ORGANISE_DISTRICT U
            WHERE CA.CASE_ID=C.CASE_ID AND C.CASE_ID=S.CASE_ID AND C.INPUTER=U.USER_ID AND CA.ACCUSE_ID=A.ID 
            AND C.PROC_KEY ='chufaProc' AND S.LIAN_STATE&gt;=3
            UNION  ALL
            SELECT CA.ACCUSE_ID,A.NAME,A.CLAUSE,C.INPUT_TIME,U.DISTRICT_CODE,C.CASE_NO,
            C.CASE_ID,C.CASE_NAME,U.ORG_CODE,U.INDUSTRY_TYPE,U.ORG_NAME AS INPUT_UNIT_NAME      
            FROM XIANYIREN_ACCUSE CA,ACCUSE_INFO A,
            <choose>
				<when test="policeType==2">
					(SELECT CC.CASE_ID,CC.CASE_NO,CC.CASE_NAME,CC.INPUTER,CC.INPUT_TIME,CC.AMOUNT_INVOLVED,
					 CC.ACCEPT_UNIT,CC.CASE_STATE,CC.RECORD_SRC,CC.LATEST_POCESS_TIME,CC.PROC_KEY,CC.CASE_TYPE
						FROM CASE_BASIC CC,
						(SELECT S.CASE_ID
					      FROM CASE_STEP S, ORGANISE O
					      WHERE S.TARGET_ORG_ID = O.ORG_CODE
					      AND S.TARGET_ORG_TYPE = '3'
					      AND O.POLICE_TYPE=2
					      GROUP BY CASE_ID 
					     ) SO
					 WHERE CC.CASE_ID=SO.CASE_ID) C
				</when>
				<when test="policeType==1">
					(SELECT CC.CASE_ID,CC.CASE_NO,CC.CASE_NAME,CC.INPUTER,CC.INPUT_TIME,CC.AMOUNT_INVOLVED,
							CC.ACCEPT_UNIT,CC.CASE_STATE,CC.RECORD_SRC,CC.LATEST_POCESS_TIME,CC.PROC_KEY,CC.CASE_TYPE
						FROM CASE_BASIC CC,
						(SELECT S.CASE_ID,MAX(O.POLICE_TYPE)AS POLICE_TYPE
					      FROM CASE_STEP S, ORGANISE O
					      WHERE S.TARGET_ORG_ID = O.ORG_CODE
					      AND S.TARGET_ORG_TYPE = '3'
					      GROUP BY CASE_ID
					     ) SO
					  WHERE CC.CASE_ID=SO.CASE_ID 
	   				  AND (SO.POLICE_TYPE=1 OR SO.POLICE_TYPE IS NULL)) C
				</when>
				<otherwise>
					CASE_BASIC C 
				</otherwise>
		  	</choose>
            ,V_USER_ORGANISE_DISTRICT U
            WHERE CA.CASE_ID=C.CASE_ID AND CA.ACCUSE_ID=A.ID AND C.INPUTER=U.USER_ID
             AND C.PROC_KEY ='chufaProc' AND CA.ZM_TYPE&gt;=1) a
            WHERE 1=1
			<if test="districtId!=null and districtId!='' ">
	   		 	AND A.DISTRICT_CODE LIKE #{districtId} ||'%'
	   		 </if>
	   		 <if test="orgCode!=null and orgCode!='' ">
	   		 	AND A.ORG_CODE =#{orgCode} 
	   		 </if>
	   		 <if test="industryType!=null and industryType!='' ">
	   		 	AND A.INDUSTRY_TYPE = #{industryType}
	   		 </if>
			<if test="yearCode!= null and yearCode!='null' and yearCode!=''">
				AND TO_CHAR(A.INPUT_TIME,'yyyy') = #{yearCode}
			</if>
			<if test="quarterCode!= null and quarterCode!='null' and quarterCode!=''">
				<if test="quarterCode==1">
					AND TO_CHAR(A.INPUT_TIME,'MM') &gt;= 01
					AND TO_CHAR(A.INPUT_TIME,'MM') &lt;= 03
				</if>
				<if test="quarterCode==2">
					AND TO_CHAR(A.INPUT_TIME,'MM') &gt;= 04
					AND TO_CHAR(A.INPUT_TIME,'MM') &lt;= 06
				</if>
				<if test="quarterCode==3">
					AND TO_CHAR(A.INPUT_TIME,'MM') &gt;= 07
					AND TO_CHAR(A.INPUT_TIME,'MM') &lt;= 09
				</if>
				<if test="quarterCode==4">
					AND TO_CHAR(A.INPUT_TIME,'MM') &gt;= 10
					AND TO_CHAR(A.INPUT_TIME,'MM') &lt;= 12
				</if>
			</if>
			<if test="monthCode!= null and monthCode!='null' and monthCode!=''">
				AND TO_CHAR(A.INPUT_TIME,'yyyyMM') = #{monthCode}
			</if>
			
			<if test="startTime != null and startTime!='' and startTime!='null'">
				<![CDATA[
				   AND A.INPUT_TIME >= to_date(#{startTime},'yyyy-MM')
				 	]]>
			</if>
			<if test="endTime != null and endTime!='' and endTime!='null'">
				 <![CDATA[
				     AND A.INPUT_TIME  < TO_DATE(#{endTime},'yyyy-MM')+ INTERVAL '1' MONTH
				 	]]>
			</if>
			AND A.INDUSTRY_TYPE IS NOT NULL 
			ORDER BY A.ACCUSE_ID
		</if>
		<if test="accuseType != null and accuseType == 'pibu' ">
			SELECT CA.ACCUSE_ID,A.NAME ACCUSE_NAME,A.CLAUSE,C.CASE_NO,C.CASE_ID,C.CASE_NAME,C.INPUT_TIME,
			U.ORG_NAME AS INPUT_UNIT_NAME   
		    FROM XIANYIREN_ACCUSE CA,ACCUSE_INFO A,
		  	<choose>
			<when test="policeType==2">
				(SELECT CC.CASE_ID,CC.CASE_NO,CC.CASE_NAME,CC.INPUTER,CC.INPUT_TIME,CC.AMOUNT_INVOLVED,
				 CC.ACCEPT_UNIT,CC.CASE_STATE,CC.RECORD_SRC,CC.LATEST_POCESS_TIME,CC.PROC_KEY,CC.CASE_TYPE
					FROM CASE_BASIC CC,
					(SELECT S.CASE_ID
				      FROM CASE_STEP S, ORGANISE O
				      WHERE S.TARGET_ORG_ID = O.ORG_CODE
				      AND S.TARGET_ORG_TYPE = '3'
				      AND O.POLICE_TYPE=2
				      GROUP BY CASE_ID 
				     ) SO
				 WHERE CC.CASE_ID=SO.CASE_ID) C
			</when>
			<when test="policeType==1">
				(SELECT CC.CASE_ID,CC.CASE_NO,CC.CASE_NAME,CC.INPUTER,CC.INPUT_TIME,CC.AMOUNT_INVOLVED,
						CC.ACCEPT_UNIT,CC.CASE_STATE,CC.RECORD_SRC,CC.LATEST_POCESS_TIME,CC.PROC_KEY,CC.CASE_TYPE
					FROM CASE_BASIC CC,
					(SELECT S.CASE_ID,MAX(O.POLICE_TYPE)AS POLICE_TYPE
				      FROM CASE_STEP S, ORGANISE O
				      WHERE S.TARGET_ORG_ID = O.ORG_CODE
				      AND S.TARGET_ORG_TYPE = '3'
				      GROUP BY CASE_ID
				     ) SO
				  WHERE CC.CASE_ID=SO.CASE_ID 
   				  AND (SO.POLICE_TYPE=1 OR SO.POLICE_TYPE IS NULL)) C
			</when>
			<otherwise>
				CASE_BASIC C 
			</otherwise>
		  </choose>
	        ,V_USER_ORGANISE_DISTRICT U,CASE_XIANYIREN X
	        WHERE CA.CASE_ID=C.CASE_ID AND CA.ACCUSE_ID=A.ID AND C.INPUTER=U.USER_ID 
	        AND CA.XIANYIREN_ID=X.XIANYIREN_ID
	        AND C.PROC_KEY ='chufaProc'
	        AND (CA.ZM_TYPE=2 OR (X.DAIBU_STATE = 3 AND CA.ZM_TYPE = 1))
			<if test="districtId!=null and districtId!='' ">
	   		 	AND U.DISTRICT_CODE LIKE #{districtId} ||'%'
	   		 </if>
	   		 <if test="orgCode!=null and orgCode!='' ">
	   		 	AND U.ORG_CODE =#{orgCode} 
	   		 </if>
	   		 <if test="industryType!=null and industryType!='' ">
	   		 	AND U.INDUSTRY_TYPE = #{industryType}
	   		 </if>
			<if test="yearCode!= null and yearCode!='null' and yearCode!=''">
				AND TO_CHAR(C.INPUT_TIME,'yyyy') = #{yearCode}
			</if>
			<if test="quarterCode!= null and quarterCode!='null' and quarterCode!=''">
				<if test="quarterCode==1">
					AND TO_CHAR(C.INPUT_TIME,'MM') &gt;= 01
					AND TO_CHAR(C.INPUT_TIME,'MM') &lt;= 03
				</if>
				<if test="quarterCode==2">
					AND TO_CHAR(C.INPUT_TIME,'MM') &gt;= 04
					AND TO_CHAR(C.INPUT_TIME,'MM') &lt;= 06
				</if>
				<if test="quarterCode==3">
					AND TO_CHAR(C.INPUT_TIME,'MM') &gt;= 07
					AND TO_CHAR(C.INPUT_TIME,'MM') &lt;= 09
				</if>
				<if test="quarterCode==4">
					AND TO_CHAR(C.INPUT_TIME,'MM') &gt;= 10
					AND TO_CHAR(C.INPUT_TIME,'MM') &lt;= 12
				</if>
			</if>
			<if test="monthCode!= null and monthCode!='null' and monthCode!=''">
				AND TO_CHAR(C.INPUT_TIME,'yyyyMM') = #{monthCode}
			</if>
			
			<if test="startTime != null and startTime!='' and startTime!='null'">
				<![CDATA[
				   AND C.INPUT_TIME >= TO_DATE(#{startTime},'yyyy-MM')
				 	]]>
			</if>
			<if test="endTime != null and endTime!='' and endTime!='null'">
				 <![CDATA[
				     AND C.INPUT_TIME  < TO_DATE(#{endTime},'yyyy-MM')+ INTERVAL '1' MONTH
				 	]]>
			</if>
			AND U.INDUSTRY_TYPE IS NOT NULL 
			ORDER BY ACCUSE_ID
		</if>
		<if test="accuseType != null and accuseType == 'qisu' ">
			SELECT CA.ACCUSE_ID AS ACCUSE_ID,A.NAME AS ACCUSE_NAME,A.CLAUSE,C.CASE_NO,C.CASE_ID,C.CASE_NAME,C.INPUT_TIME,
			U.ORG_NAME AS INPUT_UNIT_NAME      
		    FROM XIANYIREN_ACCUSE CA,ACCUSE_INFO A,
		    <choose>
				<when test="policeType==2">
					(SELECT CC.CASE_ID,CC.CASE_NO,CC.CASE_NAME,CC.INPUTER,CC.INPUT_TIME,CC.AMOUNT_INVOLVED,
					 CC.ACCEPT_UNIT,CC.CASE_STATE,CC.RECORD_SRC,CC.LATEST_POCESS_TIME,CC.PROC_KEY,CC.CASE_TYPE
						FROM CASE_BASIC CC,
						(SELECT S.CASE_ID
					      FROM CASE_STEP S, ORGANISE O
					      WHERE S.TARGET_ORG_ID = O.ORG_CODE
					      AND S.TARGET_ORG_TYPE = '3'
					      AND O.POLICE_TYPE=2
					      GROUP BY CASE_ID 
					     ) SO
					 WHERE CC.CASE_ID=SO.CASE_ID) C
				</when>
				<when test="policeType==1">
					(SELECT CC.CASE_ID,CC.CASE_NO,CC.CASE_NAME,CC.INPUTER,CC.INPUT_TIME,CC.AMOUNT_INVOLVED,
							CC.ACCEPT_UNIT,CC.CASE_STATE,CC.RECORD_SRC,CC.LATEST_POCESS_TIME,CC.PROC_KEY,CC.CASE_TYPE
						FROM CASE_BASIC CC,
						(SELECT S.CASE_ID,MAX(O.POLICE_TYPE)AS POLICE_TYPE
					      FROM CASE_STEP S, ORGANISE O
					      WHERE S.TARGET_ORG_ID = O.ORG_CODE
					      AND S.TARGET_ORG_TYPE = '3'
					      GROUP BY CASE_ID
					     ) SO
					  WHERE CC.CASE_ID=SO.CASE_ID 
	   				  AND (SO.POLICE_TYPE=1 OR SO.POLICE_TYPE IS NULL)) C
				</when>
				<otherwise>
					CASE_BASIC C 
				</otherwise>
		  	</choose>
	        ,V_USER_ORGANISE_DISTRICT U
	        WHERE CA.CASE_ID=C.CASE_ID AND CA.ACCUSE_ID=A.ID AND C.INPUTER=U.USER_ID  
	        AND C.PROC_KEY ='chufaProc'
	        AND CA.ZM_TYPE=4
			<if test="districtId!=null and districtId!='' ">
	   		 	AND U.DISTRICT_CODE LIKE #{districtId} ||'%'
	   		 </if>
	   		 <if test="orgCode!=null and orgCode!='' ">
	   		 	AND U.ORG_CODE =#{orgCode} 
	   		 </if>
	   		 <if test="industryType!=null and industryType!='' ">
	   		 	AND U.INDUSTRY_TYPE = #{industryType}
	   		 </if>
			<if test="yearCode!= null and yearCode!='null' and yearCode!=''">
				AND TO_CHAR(C.INPUT_TIME,'yyyy') = #{yearCode}
			</if>
			<if test="quarterCode!= null and quarterCode!='null' and quarterCode!=''">
				<if test="quarterCode==1">
					AND TO_CHAR(C.INPUT_TIME,'MM') &gt;= 01
					AND TO_CHAR(C.INPUT_TIME,'MM') &lt;= 03
				</if>
				<if test="quarterCode==2">
					AND TO_CHAR(C.INPUT_TIME,'MM') &gt;= 04
					AND TO_CHAR(C.INPUT_TIME,'MM') &lt;= 06
				</if>
				<if test="quarterCode==3">
					AND TO_CHAR(C.INPUT_TIME,'MM') &gt;= 07
					AND TO_CHAR(C.INPUT_TIME,'MM') &lt;= 09
				</if>
				<if test="quarterCode==4">
					AND TO_CHAR(C.INPUT_TIME,'MM') &gt;= 10
					AND TO_CHAR(C.INPUT_TIME,'MM') &lt;= 12
				</if>
			</if>
			<if test="monthCode!= null and monthCode!='null' and monthCode!=''">
				AND TO_CHAR(C.INPUT_TIME,'yyyyMM') = #{monthCode}
			</if>
			
			<if test="startTime != null and startTime!='' and startTime!='null'">
				<![CDATA[
				   AND C.INPUT_TIME >= TO_DATE(#{startTime},'yyyy-MM')
				 	]]>
			</if>
			<if test="endTime != null and endTime!='' and endTime!='null'">
				 <![CDATA[
				     AND C.INPUT_TIME  < TO_DATE(#{endTime},'yyyy-MM')+ INTERVAL '1' MONTH
				 	]]>
			</if>
			AND U.INDUSTRY_TYPE IS NOT NULL 
			ORDER BY ACCUSE_ID
		</if>
		<if test="accuseType != null and accuseType == 'panjue' ">
			SELECT CA.ACCUSE_ID AS ACCUSE_ID,A.NAME AS ACCUSE_NAME,A.CLAUSE,C.CASE_NO,C.CASE_ID,C.CASE_NAME,C.INPUT_TIME,
			U.ORG_NAME AS INPUT_UNIT_NAME      
		    FROM XIANYIREN_ACCUSE CA,ACCUSE_INFO A,
		   <choose>
				<when test="policeType==2">
					(SELECT CC.CASE_ID,CC.CASE_NO,CC.CASE_NAME,CC.INPUTER,CC.INPUT_TIME,CC.AMOUNT_INVOLVED,
					 CC.ACCEPT_UNIT,CC.CASE_STATE,CC.RECORD_SRC,CC.LATEST_POCESS_TIME,CC.PROC_KEY,CC.CASE_TYPE
						FROM CASE_BASIC CC,
						(SELECT S.CASE_ID
					      FROM CASE_STEP S, ORGANISE O
					      WHERE S.TARGET_ORG_ID = O.ORG_CODE
					      AND S.TARGET_ORG_TYPE = '3'
					      AND O.POLICE_TYPE=2
					      GROUP BY CASE_ID 
					     ) SO
					 WHERE CC.CASE_ID=SO.CASE_ID) C
				</when>
				<when test="policeType==1">
					(SELECT CC.CASE_ID,CC.CASE_NO,CC.CASE_NAME,CC.INPUTER,CC.INPUT_TIME,CC.AMOUNT_INVOLVED,
							CC.ACCEPT_UNIT,CC.CASE_STATE,CC.RECORD_SRC,CC.LATEST_POCESS_TIME,CC.PROC_KEY,CC.CASE_TYPE
						FROM CASE_BASIC CC,
						(SELECT S.CASE_ID,MAX(O.POLICE_TYPE)AS POLICE_TYPE
					      FROM CASE_STEP S, ORGANISE O
					      WHERE S.TARGET_ORG_ID = O.ORG_CODE
					      AND S.TARGET_ORG_TYPE = '3'
					      GROUP BY CASE_ID
					     ) SO
					  WHERE CC.CASE_ID=SO.CASE_ID 
		  				  AND (SO.POLICE_TYPE=1 OR SO.POLICE_TYPE IS NULL)) C
				</when>
				<otherwise>
					CASE_BASIC C 
				</otherwise>
		  	</choose>
	        ,V_USER_ORGANISE_DISTRICT U
	        WHERE CA.CASE_ID=C.CASE_ID AND CA.ACCUSE_ID=A.ID AND C.INPUTER=U.USER_ID 
	        AND C.PROC_KEY ='chufaProc'
	        AND CA.ZM_TYPE&gt;=5
			<if test="districtId!=null and districtId!='' ">
	   		 	AND U.DISTRICT_CODE LIKE #{districtId} ||'%'
	   		 </if>
	   		 <if test="orgCode!=null and orgCode!='' ">
	   		 	AND U.ORG_CODE =#{orgCode} 
	   		 </if>
	   		 <if test="industryType!=null and industryType!='' ">
	   		 	AND U.INDUSTRY_TYPE = #{industryType}
	   		 </if>
			<if test="yearCode!= null and yearCode!='null' and yearCode!=''">
				AND TO_CHAR(C.INPUT_TIME,'yyyy') = #{yearCode}
			</if>
			<if test="quarterCode!= null and quarterCode!='null' and quarterCode!=''">
				<if test="quarterCode==1">
					AND TO_CHAR(C.INPUT_TIME,'MM') &gt;= 01
					AND TO_CHAR(C.INPUT_TIME,'MM') &lt;= 03
				</if>
				<if test="quarterCode==2">
					AND TO_CHAR(C.INPUT_TIME,'MM') &gt;= 04
					AND TO_CHAR(C.INPUT_TIME,'MM') &lt;= 06
				</if>
				<if test="quarterCode==3">
					AND TO_CHAR(C.INPUT_TIME,'MM') &gt;= 07
					AND TO_CHAR(C.INPUT_TIME,'MM') &lt;= 09
				</if>
				<if test="quarterCode==4">
					AND TO_CHAR(C.INPUT_TIME,'MM') &gt;= 10
					AND TO_CHAR(C.INPUT_TIME,'MM') &lt;= 12
				</if>
			</if>
			<if test="monthCode!= null and monthCode!='null' and monthCode!=''">
				AND TO_CHAR(C.INPUT_TIME,'yyyyMM') = #{monthCode}
			</if>
			
			<if test="startTime != null and startTime!='' and startTime!='null'">
				<![CDATA[
				   AND C.INPUT_TIME >= TO_DATE(#{startTime},'yyyy-MM')
				 	]]>
			</if>
			<if test="endTime != null and endTime!='' and endTime!='null'">
				 <![CDATA[
				     AND C.INPUT_TIME  < TO_DATE(#{endTime},'yyyy-MM')+ INTERVAL '1' MONTH
				 	]]>
			</if>
			AND U.INDUSTRY_TYPE IS NOT NULL 
			ORDER BY ACCUSE_ID
		</if>
  </select>
  <select id="findCaseAccuseCount" parameterType="map" resultType="java.lang.Integer">
		<if test="accuseType != null and accuseType == 'yisong' ">
		  	SELECT COUNT(1)
        	FROM CASE_ACCUSE CA,ACCUSE_INFO A,
        	<choose>
				<when test="policeType==2">
					(SELECT CC.CASE_ID,CC.CASE_NO,CC.CASE_NAME,CC.INPUTER,CC.INPUT_TIME,CC.AMOUNT_INVOLVED,
					 CC.ACCEPT_UNIT,CC.CASE_STATE,CC.RECORD_SRC,CC.LATEST_POCESS_TIME,CC.PROC_KEY,CC.CASE_TYPE
						FROM CASE_BASIC CC,
						(SELECT S.CASE_ID
					      FROM CASE_STEP S, ORGANISE O
					      WHERE S.TARGET_ORG_ID = O.ORG_CODE
					      AND S.TARGET_ORG_TYPE = '3'
					      AND O.POLICE_TYPE=2
					      GROUP BY CASE_ID 
					     ) SO
					 WHERE CC.CASE_ID=SO.CASE_ID) C
				</when>
				<when test="policeType==1">
					(SELECT CC.CASE_ID,CC.CASE_NO,CC.CASE_NAME,CC.INPUTER,CC.INPUT_TIME,CC.AMOUNT_INVOLVED,
							CC.ACCEPT_UNIT,CC.CASE_STATE,CC.RECORD_SRC,CC.LATEST_POCESS_TIME,CC.PROC_KEY,CC.CASE_TYPE
						FROM CASE_BASIC CC,
						(SELECT S.CASE_ID,MAX(O.POLICE_TYPE)AS POLICE_TYPE
					      FROM CASE_STEP S, ORGANISE O
					      WHERE S.TARGET_ORG_ID = O.ORG_CODE
					      AND S.TARGET_ORG_TYPE = '3'
					      GROUP BY CASE_ID
					     ) SO
					  WHERE CC.CASE_ID=SO.CASE_ID 
		  				  AND (SO.POLICE_TYPE=1 OR SO.POLICE_TYPE IS NULL)) C
				</when>
				<otherwise>
					CASE_BASIC C 
				</otherwise>
		  	</choose> 
        	,V_USER_ORGANISE_DISTRICT U
        	WHERE  CA.CASE_ID=C.CASE_ID  AND CA.ACCUSE_ID=A.ID AND C.INPUTER=U.USER_ID  
        	AND C.PROC_KEY ='chufaProc' AND CA.ZM_TYPE=1
			<if test="districtId!=null and districtId!='' ">
	   		 	AND U.DISTRICT_CODE LIKE #{districtId} ||'%'
	   		 </if>
	   		 <if test="orgCode!=null and orgCode!='' ">
	   		 	AND U.ORG_CODE =#{orgCode} 
	   		 </if>
	   		 <if test="industryType!=null and industryType!='' ">
	   		 	AND U.INDUSTRY_TYPE = #{industryType}
	   		 </if>
			<if test="yearCode!= null and yearCode!='null' and yearCode!=''">
				AND TO_CHAR(C.INPUT_TIME,'yyyy') = #{yearCode}
			</if>
			<if test="quarterCode!= null and quarterCode!='null' and quarterCode!=''">
				<if test="quarterCode==1">
					AND TO_CHAR(C.INPUT_TIME,'MM') &gt;= 01
					AND TO_CHAR(C.INPUT_TIME,'MM') &lt;= 03
				</if>
				<if test="quarterCode==2">
					AND TO_CHAR(C.INPUT_TIME,'MM') &gt;= 04
					AND TO_CHAR(C.INPUT_TIME,'MM') &lt;= 06
				</if>
				<if test="quarterCode==3">
					AND TO_CHAR(C.INPUT_TIME,'MM') &gt;= 07
					AND TO_CHAR(C.INPUT_TIME,'MM') &lt;= 09
				</if>
				<if test="quarterCode==4">
					AND TO_CHAR(C.INPUT_TIME,'MM') &gt;= 10
					AND TO_CHAR(C.INPUT_TIME,'MM') &lt;= 12
				</if>
			</if>
			<if test="monthCode!= null and monthCode!='null' and monthCode!=''">
				AND TO_CHAR(C.INPUT_TIME,'yyyyMM') = #{monthCode}
			</if>
			
			<if test="startTime != null and startTime!='' and startTime!='null'">
				<![CDATA[
				   AND C.INPUT_TIME >= TO_DATE(#{startTime},'yyyy-MM')
				 	]]>
			</if>
			<if test="endTime != null and endTime!='' and endTime!='null'">
				 <![CDATA[
				     AND C.INPUT_TIME  < TO_DATE(#{endTime},'yyyy-MM')+ INTERVAL '1' MONTH
				 	]]>
			</if>
			AND U.INDUSTRY_TYPE IS NOT NULL 
	        ORDER BY ACCUSE_ID
		</if>
		<if test="accuseType != null and accuseType == 'lian' ">
			SELECT COUNT(1)  
            FROM 
	        (SELECT CA.ACCUSE_ID,A.NAME,A.CLAUSE,C.INPUT_TIME,U.DISTRICT_CODE,C.CASE_NO,
	        C.CASE_ID,U.ORG_CODE,U.INDUSTRY_TYPE    
	        FROM CASE_ACCUSE CA,ACCUSE_INFO A,
	       	<choose>
			<when test="policeType==2">
				(SELECT CC.CASE_ID,CC.CASE_NO,CC.CASE_NAME,CC.INPUTER,CC.INPUT_TIME,CC.AMOUNT_INVOLVED,
				 CC.ACCEPT_UNIT,CC.CASE_STATE,CC.RECORD_SRC,CC.LATEST_POCESS_TIME,CC.PROC_KEY,CC.CASE_TYPE
					FROM CASE_BASIC CC,
					(SELECT S.CASE_ID
				      FROM CASE_STEP S, ORGANISE O
				      WHERE S.TARGET_ORG_ID = O.ORG_CODE
				      AND S.TARGET_ORG_TYPE = '3'
				      AND O.POLICE_TYPE=2
				      GROUP BY CASE_ID 
				     ) SO
				 WHERE CC.CASE_ID=SO.CASE_ID) C
			</when>
			<when test="policeType==1">
				(SELECT CC.CASE_ID,CC.CASE_NO,CC.CASE_NAME,CC.INPUTER,CC.INPUT_TIME,CC.AMOUNT_INVOLVED,
						CC.ACCEPT_UNIT,CC.CASE_STATE,CC.RECORD_SRC,CC.LATEST_POCESS_TIME,CC.PROC_KEY,CC.CASE_TYPE
					FROM CASE_BASIC CC,
					(SELECT S.CASE_ID,MAX(O.POLICE_TYPE)AS POLICE_TYPE
				      FROM CASE_STEP S, ORGANISE O
				      WHERE S.TARGET_ORG_ID = O.ORG_CODE
				      AND S.TARGET_ORG_TYPE = '3'
				      GROUP BY CASE_ID
				     ) SO
				  WHERE CC.CASE_ID=SO.CASE_ID 
   				  AND (SO.POLICE_TYPE=1 OR SO.POLICE_TYPE IS NULL)) C
			</when>
			<otherwise>
				CASE_BASIC C 
			</otherwise>
		  </choose>
          ,CASE_STATE S,V_USER_ORGANISE_DISTRICT U
          WHERE CA.CASE_ID=C.CASE_ID AND C.CASE_ID=S.CASE_ID AND C.INPUTER=U.USER_ID AND CA.ACCUSE_ID=A.ID 
          AND C.PROC_KEY ='chufaProc' AND S.LIAN_STATE&gt;=3
          UNION  ALL
          SELECT CA.ACCUSE_ID,A.NAME,A.CLAUSE,C.INPUT_TIME,U.DISTRICT_CODE,C.CASE_NO,C.CASE_ID,U.ORG_CODE,U.INDUSTRY_TYPE      
          FROM XIANYIREN_ACCUSE CA,ACCUSE_INFO A,
	        <choose>
				<when test="policeType==2">
					(SELECT CC.CASE_ID,CC.CASE_NO,CC.CASE_NAME,CC.INPUTER,CC.INPUT_TIME,CC.AMOUNT_INVOLVED,
					 CC.ACCEPT_UNIT,CC.CASE_STATE,CC.RECORD_SRC,CC.LATEST_POCESS_TIME,CC.PROC_KEY,CC.CASE_TYPE
						FROM CASE_BASIC CC,
						(SELECT S.CASE_ID
					      FROM CASE_STEP S, ORGANISE O
					      WHERE S.TARGET_ORG_ID = O.ORG_CODE
					      AND S.TARGET_ORG_TYPE = '3'
					      AND O.POLICE_TYPE=2
					      GROUP BY CASE_ID 
					     ) SO
					 WHERE CC.CASE_ID=SO.CASE_ID) C
				</when>
				<when test="policeType==1">
					(SELECT CC.CASE_ID,CC.CASE_NO,CC.CASE_NAME,CC.INPUTER,CC.INPUT_TIME,CC.AMOUNT_INVOLVED,
							CC.ACCEPT_UNIT,CC.CASE_STATE,CC.RECORD_SRC,CC.LATEST_POCESS_TIME,CC.PROC_KEY,CC.CASE_TYPE
						FROM CASE_BASIC CC,
						(SELECT S.CASE_ID,MAX(O.POLICE_TYPE)AS POLICE_TYPE
					      FROM CASE_STEP S, ORGANISE O
					      WHERE S.TARGET_ORG_ID = O.ORG_CODE
					      AND S.TARGET_ORG_TYPE = '3'
					      GROUP BY CASE_ID
					     ) SO
					  WHERE CC.CASE_ID=SO.CASE_ID 
	   				  AND (SO.POLICE_TYPE=1 OR SO.POLICE_TYPE IS NULL)) C
				</when>
				<otherwise>
					CASE_BASIC C 
				</otherwise>
		  	</choose>
            ,V_USER_ORGANISE_DISTRICT U
            WHERE CA.CASE_ID=C.CASE_ID AND CA.ACCUSE_ID=A.ID AND C.INPUTER=U.USER_ID
             AND C.PROC_KEY ='chufaProc' AND CA.ZM_TYPE&gt;=1) A
            WHERE 1=1
			<if test="districtId!=null and districtId!='' ">
	   		 	AND A.DISTRICT_CODE LIKE #{districtId} ||'%'
	   		 </if>
	   		 <if test="orgCode!=null and orgCode!='' ">
	   		 	AND A.ORG_CODE =#{orgCode} 
	   		 </if>
	   		 <if test="industryType!=null and industryType!='' ">
	   		 	AND A.INDUSTRY_TYPE = #{industryType}
	   		 </if>
			<if test="yearCode!= null and yearCode!='null' and yearCode!=''">
				AND TO_CHAR(a.INPUT_TIME,'yyyy') = #{yearCode}
			</if>
			<if test="quarterCode!= null and quarterCode!='null' and quarterCode!=''">
				<if test="quarterCode==1">
					AND TO_CHAR(A.INPUT_TIME,'MM') &gt;= 01
					AND TO_CHAR(A.INPUT_TIME,'MM') &lt;= 03
				</if>
				<if test="quarterCode==2">
					AND TO_CHAR(A.INPUT_TIME,'MM') &gt;= 04
					AND TO_CHAR(A.INPUT_TIME,'MM') &lt;= 06
				</if>
				<if test="quarterCode==3">
					AND TO_CHAR(A.INPUT_TIME,'MM') &gt;= 07
					AND TO_CHAR(A.INPUT_TIME,'MM') &lt;= 09
				</if>
				<if test="quarterCode==4">
					AND TO_CHAR(A.INPUT_TIME,'MM') &gt;= 10
					AND TO_CHAR(A.INPUT_TIME,'MM') &lt;= 12
				</if>
			</if>
			<if test="monthCode!= null and monthCode!='null' and monthCode!=''">
				AND TO_CHAR(A.INPUT_TIME,'yyyyMM') = #{monthCode}
			</if>
			
			<if test="startTime != null and startTime!='' and startTime!='null'">
				<![CDATA[
				   AND A.INPUT_TIME >= TO_DATE(#{startTime},'yyyy-MM')
				 	]]>
			</if>
			<if test="endTime != null and endTime!='' and endTime!='null'">
				 <![CDATA[
				     AND A.INPUT_TIME  < TO_DATE(#{endTime},'yyyy-MM')+ INTERVAL '1' MONTH
				 	]]>
			</if>
			AND A.INDUSTRY_TYPE IS NOT NULL 
	        ORDER BY A.ACCUSE_ID
		</if>
		<if test="accuseType != null and accuseType == 'pibu' ">
			SELECT COUNT(1)   
		    FROM XIANYIREN_ACCUSE CA,ACCUSE_INFO A,
		    <choose>
				<when test="policeType==2">
					(SELECT CC.CASE_ID,CC.CASE_NO,CC.CASE_NAME,CC.INPUTER,CC.INPUT_TIME,CC.AMOUNT_INVOLVED,
					 CC.ACCEPT_UNIT,CC.CASE_STATE,CC.RECORD_SRC,CC.LATEST_POCESS_TIME,CC.PROC_KEY,CC.CASE_TYPE
						FROM CASE_BASIC CC,
						(SELECT S.CASE_ID
					      FROM CASE_STEP S, ORGANISE O
					      WHERE S.TARGET_ORG_ID = O.ORG_CODE
					      AND S.TARGET_ORG_TYPE = '3'
					      AND O.POLICE_TYPE=2
					      GROUP BY CASE_ID 
					     ) SO
					 WHERE CC.CASE_ID=SO.CASE_ID) C
				</when>
				<when test="policeType==1">
					(SELECT CC.CASE_ID,CC.CASE_NO,CC.CASE_NAME,CC.INPUTER,CC.INPUT_TIME,CC.AMOUNT_INVOLVED,
					CC.ACCEPT_UNIT,CC.CASE_STATE,CC.RECORD_SRC,CC.LATEST_POCESS_TIME,CC.PROC_KEY,CC.CASE_TYPE
					FROM CASE_BASIC CC,
					(SELECT S.CASE_ID,MAX(O.POLICE_TYPE)AS POLICE_TYPE
				      FROM CASE_STEP S, ORGANISE O
				      WHERE S.TARGET_ORG_ID = O.ORG_CODE
				      AND S.TARGET_ORG_TYPE = '3'
				      GROUP BY CASE_ID
				     ) SO
				  WHERE CC.CASE_ID=SO.CASE_ID 
	  				  AND (SO.POLICE_TYPE=1 OR SO.POLICE_TYPE IS NULL)) C
				</when>
				<otherwise>
					CASE_BASIC C 
				</otherwise>
			</choose>
		    ,V_USER_ORGANISE_DISTRICT U,CASE_XIANYIREN X
	        WHERE CA.CASE_ID=C.CASE_ID AND CA.ACCUSE_ID=A.ID AND C.INPUTER=U.USER_ID 
	        AND CA.XIANYIREN_ID=X.XIANYIREN_ID
	        AND C.PROC_KEY ='chufaProc'
	        AND (CA.ZM_TYPE=2 OR (X.DAIBU_STATE = 3 AND CA.ZM_TYPE = 1))
			<if test="districtId!=null and districtId!='' ">
	   		 	AND U.DISTRICT_CODE LIKE #{districtId} ||'%'
	   		 </if>
	   		 <if test="orgCode!=null and orgCode!='' ">
	   		 	AND u.ORG_CODE =#{orgCode} 
	   		 </if>
	   		 <if test="industryType!=null and industryType!='' ">
	   		 	AND U.INDUSTRY_TYPE = #{industryType}
	   		 </if>
			<if test="yearCode!= null and yearCode!='null' and yearCode!=''">
				AND TO_CHAR(C.INPUT_TIME,'yyyy') = #{yearCode}
			</if>
			<if test="quarterCode!= null and quarterCode!='null' and quarterCode!=''">
				<if test="quarterCode==1">
					AND TO_CHAR(C.INPUT_TIME,'MM') &gt;= 01
					AND TO_CHAR(C.INPUT_TIME,'MM') &lt;= 03
				</if>
				<if test="quarterCode==2">
					AND TO_CHAR(C.INPUT_TIME,'MM') &gt;= 04
					AND TO_CHAR(C.INPUT_TIME,'MM') &lt;= 06
				</if>
				<if test="quarterCode==3">
					AND TO_CHAR(C.INPUT_TIME,'MM') &gt;= 07
					AND TO_CHAR(C.INPUT_TIME,'MM') &lt;= 09
				</if>
				<if test="quarterCode==4">
					AND TO_CHAR(C.INPUT_TIME,'MM') &gt;= 10
					AND TO_CHAR(C.INPUT_TIME,'MM') &lt;= 12
				</if>
			</if>
			<if test="monthCode!= null and monthCode!='null' and monthCode!=''">
				AND TO_CHAR(C.INPUT_TIME,'yyyyMM') = #{monthCode}
			</if>
			
			<if test="startTime != null and startTime!='' and startTime!='null'">
				<![CDATA[
				   AND C.INPUT_TIME >= TO_DATE(#{startTime},'yyyy-MM')
				 	]]>
			</if>
			<if test="endTime != null and endTime!='' and endTime!='null'">
				 <![CDATA[
				     AND C.INPUT_TIME  < TO_DATE(#{endTime},'yyyy-MM')+ INTERVAL '1' MONTH
				 	]]>
			</if>
			AND U.INDUSTRY_TYPE IS NOT NULL 
			ORDER BY ACCUSE_ID
		</if>
		<if test="accuseType != null and accuseType == 'qisu' ">
			SELECT COUNT(1)    
		    FROM XIANYIREN_ACCUSE CA,ACCUSE_INFO A,
		    <choose>
				<when test="policeType==2">
					(SELECT CC.CASE_ID,CC.CASE_NO,CC.CASE_NAME,CC.INPUTER,CC.INPUT_TIME,CC.AMOUNT_INVOLVED,
					 CC.ACCEPT_UNIT,CC.CASE_STATE,CC.RECORD_SRC,CC.LATEST_POCESS_TIME,CC.PROC_KEY,CC.CASE_TYPE
						FROM CASE_BASIC CC,
						(SELECT S.CASE_ID
					      FROM CASE_STEP S, ORGANISE O
					      WHERE S.TARGET_ORG_ID = O.ORG_CODE
					      AND S.TARGET_ORG_TYPE = '3'
					      AND O.POLICE_TYPE=2
					      GROUP BY CASE_ID 
					     ) SO
					 WHERE CC.CASE_ID=SO.CASE_ID) C
				</when>
				<when test="policeType==1">
					(SELECT CC.CASE_ID,CC.CASE_NO,CC.CASE_NAME,CC.INPUTER,CC.INPUT_TIME,CC.AMOUNT_INVOLVED,
						CC.ACCEPT_UNIT,CC.CASE_STATE,CC.RECORD_SRC,CC.LATEST_POCESS_TIME,CC.PROC_KEY,CC.CASE_TYPE
					FROM CASE_BASIC CC,
					(SELECT S.CASE_ID,MAX(O.POLICE_TYPE)AS POLICE_TYPE
				      FROM CASE_STEP S, ORGANISE O
				      WHERE S.TARGET_ORG_ID = O.ORG_CODE
				      AND S.TARGET_ORG_TYPE = '3'
				      GROUP BY CASE_ID
				     ) SO
				  WHERE CC.CASE_ID=SO.CASE_ID 
   				  AND (SO.POLICE_TYPE=1 OR SO.POLICE_TYPE IS NULL)) C
				</when>
				<otherwise>
					CASE_BASIC C 
				</otherwise>
			</choose>
	        ,V_USER_ORGANISE_DISTRICT U
	        WHERE CA.CASE_ID=C.CASE_ID AND CA.ACCUSE_ID=A.ID AND C.INPUTER=U.USER_ID  
	        AND C.PROC_KEY ='chufaProc'
	        AND CA.ZM_TYPE=4
			<if test="districtId!=null and districtId!='' ">
	   		 	AND U.DISTRICT_CODE LIKE #{districtId} ||'%'
	   		 </if>
	   		 <if test="orgCode!=null and orgCode!='' ">
	   		 	AND U.ORG_CODE =#{orgCode} 
	   		 </if>
	   		 <if test="industryType!=null and industryType!='' ">
	   		 	AND U.INDUSTRY_TYPE = #{industryType}
	   		 </if>
			<if test="yearCode!= null and yearCode!='null' and yearCode!=''">
				AND TO_CHAR(C.INPUT_TIME,'yyyy') = #{yearCode}
			</if>
			<if test="quarterCode!= null and quarterCode!='null' and quarterCode!=''">
				<if test="quarterCode==1">
					AND TO_CHAR(C.INPUT_TIME,'MM') &gt;= 01
					AND TO_CHAR(C.INPUT_TIME,'MM') &lt;= 03
				</if>
				<if test="quarterCode==2">
					AND TO_CHAR(C.INPUT_TIME,'MM') &gt;= 04
					AND TO_CHAR(C.INPUT_TIME,'MM') &lt;= 06
				</if>
				<if test="quarterCode==3">
					AND TO_CHAR(C.INPUT_TIME,'MM') &gt;= 07
					AND TO_CHAR(C.INPUT_TIME,'MM') &lt;= 09
				</if>
				<if test="quarterCode==4">
					AND TO_CHAR(C.INPUT_TIME,'MM') &gt;= 10
					AND TO_CHAR(C.INPUT_TIME,'MM') &lt;= 12
				</if>
			</if>
			<if test="monthCode!= null and monthCode!='null' and monthCode!=''">
				AND TO_CHAR(C.INPUT_TIME,'yyyyMM') = #{monthCode}
			</if>
			
			<if test="startTime != null and startTime!='' and startTime!='null'">
				<![CDATA[
				   AND C.INPUT_TIME >= TO_DATE(#{startTime},'yyyy-MM')
				 	]]>
			</if>
			<if test="endTime != null and endTime!='' and endTime!='null'">
				 <![CDATA[
				     AND C.INPUT_TIME  < TO_DATE(#{endTime},'yyyy-MM')+ INTERVAL '1' MONTH
				 	]]>
			</if>
			AND U.INDUSTRY_TYPE IS NOT NULL 
			ORDER BY ACCUSE_ID
		</if>
		<if test="accuseType != null and accuseType == 'panjue' ">
			SELECT COUNT(1)   
	        FROM XIANYIREN_ACCUSE CA,ACCUSE_INFO A,
	        <choose>
				<when test="policeType==2">
					(SELECT CC.CASE_ID,CC.CASE_NO,CC.CASE_NAME,CC.INPUTER,CC.INPUT_TIME,CC.AMOUNT_INVOLVED,
					 CC.ACCEPT_UNIT,CC.CASE_STATE,CC.RECORD_SRC,CC.LATEST_POCESS_TIME,CC.PROC_KEY,CC.CASE_TYPE
						FROM CASE_BASIC CC,
						(SELECT S.CASE_ID
					      FROM CASE_STEP S, ORGANISE O
					      WHERE S.TARGET_ORG_ID = O.ORG_CODE
					      AND S.TARGET_ORG_TYPE = '3'
					      AND O.POLICE_TYPE=2
					      GROUP BY CASE_ID 
					     ) SO
					 WHERE CC.CASE_ID=SO.CASE_ID) C
				</when>
				<when test="policeType==1">
					(SELECT CC.CASE_ID,CC.CASE_NO,CC.CASE_NAME,CC.INPUTER,CC.INPUT_TIME,CC.AMOUNT_INVOLVED,
					CC.ACCEPT_UNIT,CC.CASE_STATE,CC.RECORD_SRC,CC.LATEST_POCESS_TIME,CC.PROC_KEY,CC.CASE_TYPE
					FROM CASE_BASIC CC,
					(SELECT S.CASE_ID,MAX(O.POLICE_TYPE)AS POLICE_TYPE
				      FROM CASE_STEP S, ORGANISE O
				      WHERE S.TARGET_ORG_ID = O.ORG_CODE
				      AND S.TARGET_ORG_TYPE = '3'
				      GROUP BY CASE_ID
				     ) SO
				  WHERE CC.CASE_ID=SO.CASE_ID 
	  				  AND (SO.POLICE_TYPE=1 OR SO.POLICE_TYPE IS NULL)) C
				</when>
				<otherwise>
					CASE_BASIC C 
				</otherwise>
			 </choose>
	        ,V_USER_ORGANISE_DISTRICT U
	        WHERE CA.CASE_ID=C.CASE_ID AND CA.ACCUSE_ID=A.ID AND C.INPUTER=U.USER_ID 
	        AND C.PROC_KEY ='chufaProc'
	        AND CA.ZM_TYPE&gt;=5
			<if test="districtId!=null and districtId!='' ">
	   		 	AND U.DISTRICT_CODE LIKE #{districtId} ||'%'
	   		 </if>
	   		 <if test="orgCode!=null and orgCode!='' ">
	   		 	AND U.ORG_CODE =#{orgCode} 
	   		 </if>
	   		 <if test="industryType!=null and industryType!='' ">
	   		 	AND U.INDUSTRY_TYPE = #{industryType}
	   		 </if>
			<if test="yearCode!= null and yearCode!='null' and yearCode!=''">
				AND TO_CHAR(C.INPUT_TIME,'yyyy') = #{yearCode}
			</if>
			<if test="quarterCode!= null and quarterCode!='null' and quarterCode!=''">
				<if test="quarterCode==1">
					AND TO_CHAR(C.INPUT_TIME,'MM') &gt;= 01
					AND TO_CHAR(C.INPUT_TIME,'MM') &lt;= 03
				</if>
				<if test="quarterCode==2">
					AND TO_CHAR(C.INPUT_TIME,'MM') &gt;= 04
					AND TO_CHAR(C.INPUT_TIME,'MM') &lt;= 06
				</if>
				<if test="quarterCode==3">
					AND TO_CHAR(C.INPUT_TIME,'MM') &gt;= 07
					AND TO_CHAR(C.INPUT_TIME,'MM') &lt;= 09
				</if>
				<if test="quarterCode==4">
					AND TO_CHAR(C.INPUT_TIME,'MM') &gt;= 10
					AND TO_CHAR(C.INPUT_TIME,'MM') &lt;= 12
				</if>
			</if>
			<if test="monthCode!= null and monthCode!='null' and monthCode!=''">
				AND TO_CHAR(C.INPUT_TIME,'yyyyMM') = #{monthCode}
			</if>
			
			<if test="startTime != null and startTime!='' and startTime!='null'">
				<![CDATA[
				   AND C.INPUT_TIME >= TO_DATE(#{startTime},'yyyy-MM')
				 	]]>
			</if>
			<if test="endTime != null and endTime!='' and endTime!='null'">
				 <![CDATA[
				     AND C.INPUT_TIME  < TO_DATE(#{endTime},'yyyy-MM')+ INTERVAL '1' MONTH
				 	]]>
			</if>
			AND U.INDUSTRY_TYPE IS NOT NULL 
			ORDER BY ACCUSE_ID
		</if>
	</select>	



	<select id="getStateListByIndustry" parameterType="map" resultMap="PenaltyCaseMap">
		SELECT CB.CASE_ID,
           CB.CASE_NO,
           CB.CASE_NAME,
           CB.CASE_STATE,
           PCE.CHUFA_TIME,
           CB.INPUT_TIME,
           CB.LATEST_POCESS_TIME,
           CB.PROC_KEY,
           U.ORG_NAME
   		 FROM 
   		 <choose>
			<when test="policeType==2">
				(SELECT C.CASE_ID,C.CASE_NO,C.CASE_NAME,C.INPUTER,C.INPUT_TIME,C.AMOUNT_INVOLVED,C.IS_SUSPECTED_CRIMINAL,
				 C.ACCEPT_UNIT,C.CASE_STATE,C.RECORD_SRC,C.LATEST_POCESS_TIME,C.PROC_KEY,C.CASE_TYPE,C.IDENTIFY_TYPE,
				 C.IS_LOWER_LIMIT_MONEY
					FROM CASE_BASIC C,
					(SELECT S.CASE_ID
				      FROM CASE_STEP S, ORGANISE O
				      WHERE S.TARGET_ORG_ID = O.ORG_CODE
				      AND S.TARGET_ORG_TYPE = '3'
				      AND O.POLICE_TYPE=2
				      GROUP BY CASE_ID 
				     ) SO
				 WHERE C.CASE_ID=SO.CASE_ID) CB
			</when>
			<when test="policeType==1">
				 (SELECT C.CASE_ID,C.CASE_NO,C.CASE_NAME,C.INPUTER,C.INPUT_TIME,C.AMOUNT_INVOLVED,C.IS_SUSPECTED_CRIMINAL,
				 C.ACCEPT_UNIT,C.CASE_STATE,C.RECORD_SRC,C.LATEST_POCESS_TIME,C.PROC_KEY,C.CASE_TYPE,C.IDENTIFY_TYPE,
				 C.IS_LOWER_LIMIT_MONEY
				 FROM CASE_BASIC C left join 
				   (SELECT S.CASE_ID,o.police_type FROM CASE_STEP S, ORGANISE O
				    WHERE S.TARGET_ORG_ID = O.ORG_CODE
				    AND S.TARGET_ORG_TYPE = '3'
				    GROUP BY CASE_ID,O.POLICE_TYPE) SO
				    on C.CASE_ID = SO.CASE_ID
				 WHERE (SO.POLICE_TYPE = 1 OR SO.POLICE_TYPE IS NULL)) CB
			</when>
			<otherwise>
				CASE_BASIC CB 
			</otherwise>
		  </choose>
   		 ,CASE_STATE CS,PENALTY_CASE_FORM PCE,V_USER_ORGANISE_DISTRICT U
    	 WHERE CB.CASE_ID=CS.CASE_ID
    	 AND CB.CASE_ID=PCE.CASE_ID(+)
   		 AND CB.INPUTER=U.USER_ID
		<if test="districtId!=null and districtId!='' ">
			AND U.DISTRICT_CODE  LIKE #{districtId}||'%'
		</if>
		<if test="shortDistrictId!=null and shortDistrictId!='' ">
			AND U.DISTRICT_CODE LIKE #{shortDistrictId}||'%'
		</if>
		<if test="industryType!=null">
			  AND U.INDUSTRY_TYPE= #{industryType}
		</if>
		AND U.INDUSTRY_TYPE IS NOT NULL
		<if test="orgPath!=null">
			  AND U.ORG_PATH LIKE #{orgPath} ||'%'
		</if>
		<if test="caseNo != null">
			AND CB.CASE_NO LIKE CONCAT(CONCAT('%',#{caseNo}),'%')
		</if>
		<if test="caseName != null">
			AND CB.CASE_NAME LIKE CONCAT(CONCAT('%',#{caseName}),'%')
		</if>
		<if test="isDqdj != null and isDqdj!='' ">
  			AND PCE.IS_DQDJ =#{isDqdj}
		</if>
		<choose>
			<when test="chufaState!=null">
				AND CS.CHUFA_STATE=#{chufaState}
			</when>
			<when test="yisongState!=null">
				AND CS.YISONG_STATE = #{yisongState}
			</when>
			<when test="lianState!=null and lianState==3">
				AND CS.LIAN_STATE&gt;=#{lianState}
			</when>
			<when test="lianState!=null and lianState==2">
				AND CS.LIAN_STATE=#{lianState}
			</when>
			<when test="lianState!=null and lianState==1">
				AND CS.LIAN_STATE=#{lianState}
			</when>
			<when test="lianState!=null and lianState==4">
				AND CS.LIAN_STATE=#{lianState}
			</when>
			<when test="daibuState!=null">
				AND CS.DAIBU_STATE=#{daibuState}
			</when>
			<when test="qisuState!=null">
				AND CS.QISU_STATE=#{qisuState}
			</when>
			<when test="panjueState!=null">
				AND CS.PANJUE_STATE=#{panjueState}
			</when>
			<when test="jieanState!=null">
				AND CS.JIEAN_STATE=#{jieanState}
			</when>
			<when test="yisongDouState!=null">
				AND CS.YISONG_STATE IN (2,3)
			</when>
			<when test="reqExplainState!=null">
				AND CS.REQ_EXPLAIN_STATE=#{reqExplainState}
			</when>
			<when test="caseState!=null">
				AND CB.CASE_STATE=#{caseState}
			</when>
			<when test="caseType!=null">
				AND CB.CASE_TYPE=#{caseType}
			</when>
			<when test="xingzhenglianState!=null">
				AND CS.XINGZHENGLIAN_STATE=#{xingzhenglianState}
			</when>	
			<when test="detentionState!=null">
		       AND CS.DETENTION_STATE=#{detentionState}
		     </when>
		     <when test="lianSupState!=null">
				<![CDATA[AND CS.LIAN_SUP_STATE>=1]]>
			</when>	
		</choose>
		<if test="startTime != null and startTime!='' and startTime!='null'">
			<![CDATA[
			   AND CB.INPUT_TIME >= TO_DATE(#{startTime},'yyyy-MM')
			 	]]>
		</if>
		<if test="endTime != null and endTime!='' and endTime!='null'">
			 <![CDATA[
			     AND CB.INPUT_TIME  < TO_DATE(#{endTime},'yyyy-MM') + INTERVAL '1' MONTH
			 	]]>
		</if>
		<if test="yearCode!= null and yearCode!='null' and yearCode!=''">
			AND TO_CHAR(CB.INPUT_TIME,'yyyy') = #{yearCode}
		</if>
		<!-- regionStatsFilter START -->
		<if test="industry_Type !=null">
			AND U.INDUSTRY_TYPE IS NOT NULL
		</if>
		<if test="chufatimescount !=null">
			AND PCE.CHUFA_TIMES&gt;#{chufatimescount}
		</if>
		<if test="beyondeightycount !=null">
			AND PCE.IS_BEYOND_EIGHTY=#{beyondeightycount}
		</if>
		<if test="identifycount !=null">
			AND PCE.IDENTIFY_TYPE != #{identifycount} AND PCE.IDENTIFY_TYPE IS NOT NULL
		</if>
		<if test="lowerlimitmoneycount !=null">
			AND PCE.IS_LOWER_LIMIT_MONEY=#{lowerlimitmoneycount}
		</if>
		<if test="descusscount !=null">
			AND PCE.IS_DESCUSS=#{descusscount}
		</if>
		<if test="seriouscasecount !=null">
			AND PCE.IS_SERIOUS_CASE=#{seriouscasecount}
		</if>
		<if test="casecount !=null">
			AND CB.IS_SUSPECTED_CRIMINAL=1
		</if>
		<if test="penalty_num !=null">
			AND CS.CHUFA_STATE=2 
		</if>
		<!-- regionStatsFilter END -->
		<if test="quarterCode!= null and quarterCode!='null' and quarterCode!=''">
			<if test="quarterCode==1">
				AND TO_CHAR(CB.INPUT_TIME,'MM') &gt;= 01
				AND TO_CHAR(CB.INPUT_TIME,'MM') &lt;= 03
			</if>
			<if test="quarterCode==2">
				AND TO_CHAR(CB.INPUT_TIME,'MM') &gt;= 04
				AND TO_CHAR(CB.INPUT_TIME,'MM') &lt;= 06
			</if>
			<if test="quarterCode==3">
				AND TO_CHAR(CB.INPUT_TIME,'MM') &gt;= 07
				AND TO_CHAR(CB.INPUT_TIME,'MM') &lt;= 09
			</if>
			<if test="quarterCode==4">
				AND TO_CHAR(CB.INPUT_TIME,'MM') &gt;= 10
				AND TO_CHAR(CB.INPUT_TIME,'MM') &lt;= 12
			</if>
		</if>
		<if test="monthCode!= null and monthCode!='null' and monthCode!=''">
			AND TO_CHAR(CB.INPUT_TIME,'yyyyMM') = #{monthCode}
		</if>
		ORDER BY CB.LATEST_POCESS_TIME DESC,CB.CASE_ID
	</select>
	<select id="getStateCountByIndustry" parameterType="map" resultType="java.lang.Integer">
		 SELECT COUNT(CB.CASE_ID) 
		 FROM 
		 <choose>
			<when test="policeType==2">
				(SELECT C.CASE_ID,C.CASE_NO,C.CASE_NAME,C.INPUTER,C.INPUT_TIME,C.AMOUNT_INVOLVED,C.IS_SUSPECTED_CRIMINAL,
				 C.ACCEPT_UNIT,C.CASE_STATE,C.RECORD_SRC,C.LATEST_POCESS_TIME,C.PROC_KEY,C.CASE_TYPE,C.IDENTIFY_TYPE,
				 C.IS_LOWER_LIMIT_MONEY
					FROM CASE_BASIC C,
					(SELECT S.CASE_ID
				      FROM CASE_STEP S, ORGANISE O
				      WHERE S.TARGET_ORG_ID = O.ORG_CODE
				      AND S.TARGET_ORG_TYPE = '3'
				      AND O.POLICE_TYPE=2
				      GROUP BY CASE_ID 
				     ) SO
				 WHERE C.CASE_ID=SO.CASE_ID) CB
			</when>
			<when test="policeType==1">
				 (SELECT C.CASE_ID,C.CASE_NO,C.CASE_NAME,C.INPUTER,C.INPUT_TIME,C.AMOUNT_INVOLVED,C.IS_SUSPECTED_CRIMINAL,
				 C.ACCEPT_UNIT,C.CASE_STATE,C.RECORD_SRC,C.LATEST_POCESS_TIME,C.PROC_KEY,C.CASE_TYPE,C.IDENTIFY_TYPE,
				 C.IS_LOWER_LIMIT_MONEY
				 FROM CASE_BASIC C LEFT JOIN 
				   (SELECT S.CASE_ID,O.POLICE_TYPE FROM CASE_STEP S, ORGANISE O
				    WHERE S.TARGET_ORG_ID = O.ORG_CODE
				    AND S.TARGET_ORG_TYPE = '3'
				    GROUP BY CASE_ID,O.POLICE_TYPE) SO
				    on C.CASE_ID = SO.CASE_ID
				 WHERE (SO.POLICE_TYPE = 1 OR SO.POLICE_TYPE IS NULL)) CB
			</when>
			<otherwise>
				CASE_BASIC CB 
			</otherwise>
		  </choose>
		 ,CASE_STATE CS,V_USER_ORGANISE_DISTRICT U,PENALTY_CASE_FORM PCE
    	 WHERE CB.CASE_ID=CS.CASE_ID
    	 AND CB.CASE_ID=PCE.CASE_ID(+)
   		 AND CB.INPUTER=U.USER_ID
		<if test="districtId!=null and districtId!='' ">
			AND U.DISTRICT_CODE LIKE #{districtId}||'%' 
		</if>
		<if test="shortDistrictId!=null and shortDistrictId!='' ">
			AND U.DISTRICT_CODE LIKE #{shortDistrictId}||'%'
		</if>
		<if test="industryType!=null">
			  AND U.INDUSTRY_TYPE= #{industryType}
		</if>
		AND U.INDUSTRY_TYPE IS NOT NULL
		<if test="orgPath!=null">
			  AND U.ORG_PATH LIKE #{orgPath} ||'%'
		</if>
		<if test="caseNo != null">
			AND CB.CASE_NO LIKE CONCAT(CONCAT('%',#{caseNo}),'%')
		</if>
		<if test="caseName != null">
			AND CB.CASE_NAME LIKE CONCAT(CONCAT('%',#{caseName}),'%')
		</if>
		<if test="isDqdj != null and isDqdj!='' ">
  			AND PCE.IS_DQDJ =#{isDqdj}
		</if>
		<choose>
			<when test="chufaState!=null">
				AND CS.CHUFA_STATE=#{chufaState}
			</when>
			<when test="yisongState!=null">
				AND CS.YISONG_STATE = #{yisongState}
			</when>
			<when test="lianState!=null and lianState==3">
				AND CS.LIAN_STATE&gt;=#{lianState}
			</when>
			<when test="lianState!=null and lianState==2">
				AND CS.LIAN_STATE=#{lianState}
			</when>
			<when test="lianState!=null and lianState==1">
				AND CS.LIAN_STATE=#{lianState}
			</when>
			<when test="lianState!=null and lianState==4">
				AND CS.LIAN_STATE=#{lianState}
			</when>
			<when test="daibuState!=null">
				AND CS.DAIBU_STATE=#{daibuState}
			</when>
			<when test="qisuState!=null">
				AND CS.QISU_STATE=#{qisuState}
			</when>
			<when test="panjueState!=null">
				AND CS.PANJUE_STATE=#{panjueState}
			</when>
			<when test="jieanState!=null">
				AND CS.JIEAN_STATE=#{jieanState}
			</when>
			<when test="yisongDouState!=null">
				AND CS.YISONG_STATE IN (2,3)
			</when>
			<when test="reqExplainState!=null">
				AND CS.REQ_EXPLAIN_STATE=#{reqExplainState}
			</when>
			<when test="caseState!=null">
				AND CB.CASE_STATE=#{caseState}
			</when>
			<when test="caseType!=null">
				AND CB.CASE_TYPE=#{caseType}
			</when>
			<when test="xingzhenglianState!=null">
				AND CS.XINGZHENGLIAN_STATE=#{xingzhenglianState}
			</when>
			<when test="detentionState!=null">
				AND CS.DETENTION_STATE=#{detentionState}
			</when>
			<when test="lianSupState!=null">
				<![CDATA[AND CS.LIAN_SUP_STATE>=1]]>
			</when>			
		</choose>
		<if test="startTime != null and startTime!='' and startTime!='null'">
			<![CDATA[
			   AND CB.INPUT_TIME >= TO_DATE(#{startTime},'yyyy-MM')
			 	]]>
		</if>
		<if test="endTime != null and endTime!='' and endTime!='null'">
			 <![CDATA[
			     AND CB.INPUT_TIME  < TO_DATE(#{endTime},'yyyy-MM') + INTERVAL '1' MONTH
			 	]]>
		</if>
		<if test="yearCode!= null and yearCode!='null' and yearCode!=''">
			AND TO_CHAR(CB.INPUT_TIME,'yyyy') = #{yearCode}
		</if>
		<if test="quarterCode!= null and quarterCode!='null' and quarterCode!=''">
			<if test="quarterCode==1">
				AND TO_CHAR(CB.INPUT_TIME,'MM') &gt;= 01
				AND TO_CHAR(CB.INPUT_TIME,'MM') &lt;= 03
			</if>
			<if test="quarterCode==2">
				AND TO_CHAR(CB.INPUT_TIME,'MM') &gt;= 04
				AND TO_CHAR(CB.INPUT_TIME,'MM') &lt;= 06
			</if>
			<if test="quarterCode==3">
				AND TO_CHAR(CB.INPUT_TIME,'MM') &gt;= 07
				AND TO_CHAR(CB.INPUT_TIME,'MM') &lt;= 09
			</if>
			<if test="quarterCode==4">
				AND TO_CHAR(CB.INPUT_TIME,'MM') &gt;= 10
				AND TO_CHAR(CB.INPUT_TIME,'MM') &lt;= 12
			</if>
		</if>
		<if test="monthCode!= null and monthCode!='null' and monthCode!=''">
			AND TO_CHAR(CB.INPUT_TIME,'yyyyMM') = #{monthCode}
		</if>
		<!-- regionStatsFilter START -->
		<if test="industry_Type !=null">
			AND U.INDUSTRY_TYPE IS NOT NULL
		</if>
		<if test="chufatimescount !=null">
			AND PCE.CHUFA_TIMES&gt;1
		</if>
		<if test="beyondeightycount !=null">
			AND PCE.IS_BEYOND_EIGHTY=#{beyondeightycount}
		</if>
		<if test="identifycount !=null">
			AND PCE.IDENTIFY_TYPE != #{identifycount} AND PCE.IDENTIFY_TYPE IS NOT NULL
		</if>
		<if test="lowerlimitmoneycount !=null">
			AND PCE.IS_LOWER_LIMIT_MONEY=#{lowerlimitmoneycount}
		</if>
		<if test="descusscount !=null">
			AND PCE.IS_DESCUSS=#{descusscount}
		</if>
		<if test="seriouscasecount !=null">
			AND PCE.IS_SERIOUS_CASE=#{seriouscasecount}
		</if>
		<if test="casecount !=null">
			AND CB.IS_SUSPECTED_CRIMINAL=1  
		</if>
		<if test="penalty_num !=null">
			AND CS.CHUFA_STATE=2 
		</if>
		
		<!-- regionStatsFilter END -->
	</select>

<!-- ??????????????????????? ??????????? -->
	<select id="getDaibuAndQisuCaseCountByIndustry" parameterType="map" resultType="java.lang.Integer">
		SELECT COUNT(DISTINCT CB.CASE_ID)
    	FROM 
    	<choose>
			<when test="policeType==2">
				(SELECT C.CASE_ID,C.CASE_NO,C.CASE_NAME,C.INPUTER,C.INPUT_TIME,C.AMOUNT_INVOLVED,
				 C.ACCEPT_UNIT,C.CASE_STATE,C.RECORD_SRC,C.LATEST_POCESS_TIME,C.PROC_KEY,C.CASE_TYPE
					FROM CASE_BASIC C,
					(SELECT S.CASE_ID
				      FROM CASE_STEP S, ORGANISE O
				      WHERE S.TARGET_ORG_ID = O.ORG_CODE
				      AND S.TARGET_ORG_TYPE = '3'
				      AND O.POLICE_TYPE=2
				      GROUP BY CASE_ID 
				     ) SO
				 WHERE C.CASE_ID=SO.CASE_ID) CB
			</when>
			<when test="policeType==1">
				(SELECT C.CASE_ID,C.CASE_NO,C.CASE_NAME,C.INPUTER,C.INPUT_TIME,C.AMOUNT_INVOLVED,
				 C.ACCEPT_UNIT,C.CASE_STATE,C.RECORD_SRC,C.LATEST_POCESS_TIME,C.PROC_KEY,C.CASE_TYPE
				 FROM CASE_BASIC C LEFT JOIN 
				   (SELECT S.CASE_ID,o.police_type FROM CASE_STEP S, ORGANISE O
				    WHERE S.TARGET_ORG_ID = O.ORG_CODE
				    AND S.TARGET_ORG_TYPE = '3'
				    GROUP BY CASE_ID,O.POLICE_TYPE) SO
				    on C.CASE_ID = SO.CASE_ID
				 WHERE (SO.POLICE_TYPE = 1 OR SO.POLICE_TYPE IS NULL)) CB
			</when>
			<otherwise>
				CASE_BASIC CB 
			</otherwise>
		  </choose>
    	,CASE_STATE CS,PENALTY_CASE_FORM PCE,CASE_XIANYIREN K
    	WHERE CB.CASE_ID=CS.CASE_ID
    	AND CB.CASE_ID=PCE.CASE_ID(+)
   		AND CB.CASE_ID=K.CASE_ID
		<if test="districtId!=null and districtId!='' ">
			AND EXISTS (
       		SELECT U.USER_ID FROM V_USER_ORGANISE_DISTRICT U WHERE 
           	U.USER_ID=CB.INPUTER AND U.DISTRICT_CODE LIKE #{districtId}||'%' 
			)
		</if>
		<if test="shortDistrictId!=null and shortDistrictId!='' ">
			AND EXISTS (
       		SELECT U.USER_ID FROM V_USER_ORGANISE_DISTRICT U WHERE 
           	U.USER_ID=CB.INPUTER AND U.DISTRICT_CODE LIKE #{shortDistrictId}||'%'
			)
		</if>
		<if test="industryType!=null">
			  AND EXISTS (
        		SELECT U.USER_ID FROM V_USER_ORGANISE_DISTRICT U WHERE 
            	U.USER_ID=CB.INPUTER AND U.INDUSTRY_TYPE= #{industryType}
				)
		</if>
		<if test="orgPath!=null">
			AND EXISTS (
        		SELECT U.USER_ID FROM V_USER_ORGANISE_DISTRICT U WHERE 
            	U.USER_ID=CB.INPUTER AND U.ORG_PATH LIKE #{orgPath} ||'%'
				)
		</if>
		AND EXISTS (
        		SELECT U.USER_ID FROM V_USER_ORGANISE_DISTRICT U WHERE 
            	U.USER_ID=CB.INPUTER AND U.INDUSTRY_TYPE IS NOT NULL
				)
		<if test="caseNo != null">
			AND CB.CASE_NO LIKE CONCAT(CONCAT('%',#{caseNo}),'%')
		</if>
		<if test="caseName != null">
			AND CB.CASE_NAME LIKE CONCAT(CONCAT('%',#{caseName}),'%')
		</if>
		<if test="isDqdj != null and isDqdj!='' ">
  			AND PCE.IS_DQDJ =#{isDqdj}
		</if>
		<if test="tiqingdaibuState!= null">
			AND (K.DAIBU_STATE=2 OR K.DAIBU_STATE=3)
		</if>
		<if test="tiqingqisuState!= null">
			AND K.TIQINGQISU_STATE=2
		</if>
		<if test="procKey!=null">
			   AND CB.PROC_KEY=#{procKey}
		</if>
		<if test="startTime != null and startTime!='' and startTime!='null'">
			<![CDATA[
			   AND CB.INPUT_TIME >= TO_DATE(#{startTime},'yyyy-MM')
			 	]]>
		</if>
		<if test="endTime != null and endTime!='' and endTime!='null'">
			 <![CDATA[
			     AND CB.INPUT_TIME  < TO_DATE(#{endTime},'yyyy-MM') + INTERVAL '1' MONTH
			 	]]>
		</if>
		<!-- ??????????(?????)??????? -->
		<if test="yearCode!= null and yearCode!='null' and yearCode!=''">
			AND TO_CHAR(CB.INPUT_TIME,'yyyy') = #{yearCode}
		</if>
		<if test="quarterCode!= null and quarterCode!='null' and quarterCode!=''">
			<if test="quarterCode==1">
				AND TO_CHAR(CB.INPUT_TIME,'MM') &gt;= 01
				AND TO_CHAR(CB.INPUT_TIME,'MM') &lt;= 03
			</if>
			<if test="quarterCode==2">
				AND TO_CHAR(CB.INPUT_TIME,'MM') &gt;= 04
				AND TO_CHAR(CB.INPUT_TIME,'MM') &lt;= 06
			</if>
			<if test="quarterCode==3">
				AND TO_CHAR(CB.INPUT_TIME,'MM') &gt;= 07
				AND TO_CHAR(CB.INPUT_TIME,'MM') &lt;= 09
			</if>
			<if test="quarterCode==4">
				AND TO_CHAR(CB.INPUT_TIME,'MM') &gt;= 10
				AND TO_CHAR(CB.INPUT_TIME,'MM') &lt;= 12
			</if>
		</if>
		<if test="monthCode!= null and monthCode!='null' and monthCode!=''">
			AND TO_CHAR(CB.INPUT_TIME,'yyyyMM') = #{monthCode}
		</if>
	</select>
	<select id="getDaibuAndQisuCaseListByIndustry" parameterType="map" resultMap="PenaltyCaseMap">
		SELECT DISTINCT CB.CASE_ID,
           CB.CASE_NO,
           CB.CASE_NAME,
           CB.CASE_STATE,
           PCE.CHUFA_TIME,
           CB.INPUT_TIME,
           CB.LATEST_POCESS_TIME,
           CB.PROC_KEY,
           (SELECT ORG_NAME FROM ORGANISE WHERE ORG_CODE=CB.INPUT_UNIT)as orgName
    	FROM 
    	<choose>
			<when test="policeType==2">
				(SELECT C.CASE_ID,C.CASE_NO,C.CASE_NAME,C.INPUTER,C.INPUT_TIME,C.INPUT_UNIT,C.AMOUNT_INVOLVED,
				 C.ACCEPT_UNIT,C.CASE_STATE,C.RECORD_SRC,C.LATEST_POCESS_TIME,C.PROC_KEY,C.CASE_TYPE
					FROM CASE_BASIC C,
					(SELECT S.CASE_ID
				      FROM CASE_STEP S, ORGANISE O
				      WHERE S.TARGET_ORG_ID = O.ORG_CODE
				      AND S.TARGET_ORG_TYPE = '3'
				      AND O.POLICE_TYPE=2
				      GROUP BY CASE_ID 
				     ) SO
				 WHERE C.CASE_ID=SO.CASE_ID) CB
			</when>
			<when test="policeType==1">
				 (SELECT C.CASE_ID,C.CASE_NO,C.CASE_NAME,C.INPUTER,C.INPUT_TIME,C.INPUT_UNIT,C.AMOUNT_INVOLVED,
				 C.ACCEPT_UNIT,C.CASE_STATE,C.RECORD_SRC,C.LATEST_POCESS_TIME,C.PROC_KEY,C.CASE_TYPE
				 FROM CASE_BASIC C LEFT JOIN 
				   (SELECT S.CASE_ID,O.POLICE_TYPE FROM CASE_STEP S, ORGANISE O
				    WHERE S.TARGET_ORG_ID = O.ORG_CODE
				    AND S.TARGET_ORG_TYPE = '3'
				    GROUP BY CASE_ID,O.POLICE_TYPE) SO
				    ON C.CASE_ID = SO.CASE_ID
				 WHERE (SO.POLICE_TYPE = 1 OR SO.POLICE_TYPE IS NULL)) CB
			</when>
			<otherwise>
				CASE_BASIC CB 
			</otherwise>
		  </choose>
    	,CASE_STATE CS,PENALTY_CASE_FORM PCE,CASE_XIANYIREN K
    	WHERE CB.CASE_ID=CS.CASE_ID
    	AND CB.CASE_ID=PCE.CASE_ID(+)
   		AND CB.CASE_ID=K.CASE_ID
		<if test="districtId!=null and districtId!='' ">
			AND EXISTS (
       		SELECT U.USER_ID FROM V_USER_ORGANISE_DISTRICT U WHERE 
           	U.USER_ID=CB.INPUTER AND U.DISTRICT_CODE LIKE #{districtId}||'%'
			)
		</if>
		<if test="shortDistrictId!=null and shortDistrictId!='' ">
			AND EXISTS (
       		SELECT U.USER_ID FROM V_USER_ORGANISE_DISTRICT U WHERE 
           	U.USER_ID=CB.INPUTER AND U.DISTRICT_CODE LIKE #{shortDistrictId}||'%'
			)
		</if>
		<if test="industryType!=null">
			  AND EXISTS (
        		SELECT U.USER_ID FROM V_USER_ORGANISE_DISTRICT U WHERE 
            	U.USER_ID=CB.INPUTER AND U.INDUSTRY_TYPE= #{industryType}
				)
		</if>
		<if test="orgPath!=null">
			AND EXISTS (
        		SELECT U.USER_ID FROM V_USER_ORGANISE_DISTRICT U WHERE 
            	U.USER_ID=CB.INPUTER AND U.ORG_PATH LIKE #{orgPath} ||'%'
				)
		</if>
		AND EXISTS (
        		SELECT U.USER_ID FROM V_USER_ORGANISE_DISTRICT U WHERE 
            	U.USER_ID=CB.INPUTER AND U.INDUSTRY_TYPE IS NOT NULL
				)
		<if test="caseNo != null">
			AND CB.CASE_NO LIKE CONCAT(CONCAT('%',#{caseNo}),'%')
		</if>
		<if test="caseName != null">
			AND CB.CASE_NAME LIKE CONCAT(CONCAT('%',#{caseName}),'%')
		</if>
		<if test="isDqdj != null and isDqdj!='' ">
  			AND PCE.IS_DQDJ =#{isDqdj}
		</if>
		<if test="tiqingdaibuState!= null">
			AND (K.DAIBU_STATE=2 OR K.DAIBU_STATE=3)
		</if>
		<if test="tiqingqisuState!= null">
			AND K.TIQINGQISU_STATE=2
		</if>
		<if test="procKey!=null">
			   AND CB.PROC_KEY=#{procKey}
		</if>
		<if test="startTime != null and startTime!='' and startTime!='null'">
			<![CDATA[
			   AND CB.INPUT_TIME >= TO_DATE(#{startTime},'yyyy-MM')
			 	]]>
		</if>
		<if test="endTime != null and endTime!='' and endTime!='null'">
			 <![CDATA[
			     AND CB.INPUT_TIME  < TO_DATE(#{endTime},'yyyy-MM') + INTERVAL '1' MONTH
			 	]]>
		</if>
		<!-- ??????????(?????)??????? -->
		<if test="yearCode!= null and yearCode!='null' and yearCode!=''">
			AND TO_CHAR(CB.INPUT_TIME,'yyyy') = #{yearCode}
		</if>
		<if test="quarterCode!= null and quarterCode!='null' and quarterCode!=''">
			<if test="quarterCode==1">
				AND TO_CHAR(CB.INPUT_TIME,'MM') &gt;= 01
				AND TO_CHAR(CB.INPUT_TIME,'MM') &lt;= 03
			</if>
			<if test="quarterCode==2">
				AND TO_CHAR(CB.INPUT_TIME,'MM') &gt;= 04
				AND TO_CHAR(CB.INPUT_TIME,'MM') &lt;= 06
			</if>
			<if test="quarterCode==3">
				AND TO_CHAR(CB.INPUT_TIME,'MM') &gt;= 07
				AND TO_CHAR(CB.INPUT_TIME,'MM') &lt;= 09
			</if>
			<if test="quarterCode==4">
				AND TO_CHAR(CB.INPUT_TIME,'MM') &gt;= 10
				AND TO_CHAR(CB.INPUT_TIME,'MM') &lt;= 12
			</if>
		</if>
		<if test="monthCode!= null and monthCode!='null' and monthCode!=''">
			AND TO_CHAR(CB.INPUT_TIME,'yyyyMM') = #{monthCode}
		</if>
		ORDER BY CB.LATEST_POCESS_TIME DESC
	</select>
	
	
	<select id="getDaibuCaseCountByIndustry" parameterType="map" resultType="java.lang.Integer">
		SELECT COUNT(DISTINCT CB.CASE_ID)
    	FROM 
    	<choose>
			<when test="policeType==2">
				(SELECT C.CASE_ID,C.CASE_NO,C.CASE_NAME,C.INPUTER,C.INPUT_TIME,C.AMOUNT_INVOLVED,
				 C.ACCEPT_UNIT,C.CASE_STATE,C.RECORD_SRC,C.LATEST_POCESS_TIME,C.PROC_KEY,C.CASE_TYPE
					FROM CASE_BASIC C,
					(SELECT S.CASE_ID
				      FROM CASE_STEP S, ORGANISE O
				      WHERE S.TARGET_ORG_ID = O.ORG_CODE
				      AND S.TARGET_ORG_TYPE = '3'
				      AND O.POLICE_TYPE=2
				      GROUP BY CASE_ID 
				     ) SO
				 WHERE C.CASE_ID=SO.CASE_ID) CB
			</when>
			<when test="policeType==1">
				(SELECT C.CASE_ID,C.CASE_NO,C.CASE_NAME,C.INPUTER,C.INPUT_TIME,C.AMOUNT_INVOLVED,
				 C.ACCEPT_UNIT,C.CASE_STATE,C.RECORD_SRC,C.LATEST_POCESS_TIME,C.PROC_KEY,C.CASE_TYPE 
				 FROM CASE_BASIC C LEFT JOIN 
				   (SELECT S.CASE_ID,O.POLICE_TYPE FROM CASE_STEP S, ORGANISE O
				    WHERE S.TARGET_ORG_ID = O.ORG_CODE
				    AND S.TARGET_ORG_TYPE = '3'
				    GROUP BY CASE_ID,O.POLICE_TYPE) SO
				    ON C.CASE_ID = SO.CASE_ID
				 WHERE (SO.POLICE_TYPE = 1 OR SO.POLICE_TYPE IS NULL)) CB
			</when>
			<otherwise>
				CASE_BASIC CB 
			</otherwise>
		  </choose>
    	,CASE_STATE CS,PENALTY_CASE_FORM PCE,CASE_XIANYIREN K
    	WHERE CB.CASE_ID=CS.CASE_ID
    	AND CB.CASE_ID=PCE.CASE_ID(+)
   		AND CB.CASE_ID=K.CASE_ID
		<if test="districtId!=null and districtId!='' ">
			AND EXISTS (
       		SELECT U.USER_ID FROM V_USER_ORGANISE_DISTRICT U WHERE 
           	U.USER_ID=CB.INPUTER AND U.DISTRICT_CODE  LIKE #{districtId}||'%'  
			)
		</if>
		<if test="shortDistrictId!=null and shortDistrictId!='' ">
			AND EXISTS (
       		SELECT U.USER_ID FROM V_USER_ORGANISE_DISTRICT U WHERE 
           	U.USER_ID=CB.INPUTER AND U.DISTRICT_CODE LIKE #{shortDistrictId}||'%'
			)
		</if>
		<if test="industryType!=null">
			  AND EXISTS (
        		SELECT U.USER_ID FROM V_USER_ORGANISE_DISTRICT U WHERE 
            	U.USER_ID=CB.INPUTER AND U.INDUSTRY_TYPE= #{industryType}
				)
		</if>
		<if test="orgPath!=null">
			AND EXISTS (
        		SELECT U.USER_ID FROM V_USER_ORGANISE_DISTRICT U WHERE 
            	U.USER_ID=CB.INPUTER AND U.ORG_PATH LIKE #{orgPath} ||'%'
				)
		</if>
		AND EXISTS (
        		SELECT U.USER_ID FROM V_USER_ORGANISE_DISTRICT U WHERE 
            	U.USER_ID=CB.INPUTER AND U.INDUSTRY_TYPE IS NOT NULL
				)
		<if test="procKey!=null">
			   AND CB.PROC_KEY=#{procKey}
		</if>
			AND K.DAIBU_STATE=3
			AND CS.DAIBU_STATE=2
		<if test="caseNo != null">
			AND CB.CASE_NO LIKE CONCAT(CONCAT('%',#{caseNo}),'%')
		</if>
		<if test="caseName != null">
			AND CB.CASE_NAME LIKE CONCAT(CONCAT('%',#{caseName}),'%')
		</if>
		<if test="isDqdj != null and isDqdj!='' ">
  			AND PCE.IS_DQDJ =#{isDqdj}
		</if>
		<if test="startTime != null and startTime!='' and startTime!='null'">
			<![CDATA[
			   AND CB.INPUT_TIME >= TO_DATE(#{startTime},'yyyy-MM')
			 	]]>
		</if>
		<if test="endTime != null and endTime!='' and endTime!='null'">
			 <![CDATA[
			     AND CB.INPUT_TIME  < TO_DATE(#{endTime},'yyyy-MM') + INTERVAL '1' MONTH
			 	]]>
		</if>
		<if test="yearCode!= null and yearCode!='null' and yearCode!=''">
			AND TO_CHAR(CB.INPUT_TIME,'yyyy') = #{yearCode}
		</if>
		<if test="quarterCode!= null and quarterCode!='null' and quarterCode!=''">
			<if test="quarterCode==1">
				AND TO_CHAR(CB.INPUT_TIME,'MM') &gt;= 01
				AND TO_CHAR(CB.INPUT_TIME,'MM') &lt;= 03
			</if>
			<if test="quarterCode==2">
				AND TO_CHAR(CB.INPUT_TIME,'MM') &gt;= 04
				AND TO_CHAR(CB.INPUT_TIME,'MM') &lt;= 06
			</if>
			<if test="quarterCode==3">
				AND TO_CHAR(CB.INPUT_TIME,'MM') &gt;= 07
				AND TO_CHAR(CB.INPUT_TIME,'MM') &lt;= 09
			</if>
			<if test="quarterCode==4">
				AND TO_CHAR(CB.INPUT_TIME,'MM') &gt;= 10
				AND TO_CHAR(CB.INPUT_TIME,'MM') &lt;= 12
			</if>
		</if>
		<if test="monthCode!= null and monthCode!='null' and monthCode!=''">
			AND TO_CHAR(CB.INPUT_TIME,'yyyyMM') = #{monthCode}
		</if>
	</select>
	<select id="getDaibuCaseListByIndustry" parameterType="map" resultMap="PenaltyCaseMap">
		SELECT DISTINCT CB.CASE_ID,
           CB.CASE_NO,
           CB.CASE_NAME,
           CB.CASE_STATE,
           PCE.CHUFA_TIME,
           CB.INPUT_TIME,
           CB.LATEST_POCESS_TIME,
           CB.PROC_KEY,
           (SELECT ORG_NAME FROM ORGANISE WHERE ORG_CODE=CB.INPUT_UNIT)as orgName
    	FROM 
    	<choose>
			<when test="policeType==2">
				(SELECT C.CASE_ID,C.CASE_NO,C.CASE_NAME,C.INPUTER,C.INPUT_TIME,C.INPUT_UNIT,C.AMOUNT_INVOLVED,
				 C.ACCEPT_UNIT,C.CASE_STATE,C.RECORD_SRC,C.LATEST_POCESS_TIME,C.PROC_KEY,C.CASE_TYPE
					FROM CASE_BASIC C,
					(SELECT S.CASE_ID
				      FROM CASE_STEP S, ORGANISE O
				      WHERE S.TARGET_ORG_ID = O.ORG_CODE
				      AND S.TARGET_ORG_TYPE = '3'
				      AND O.POLICE_TYPE=2
				      GROUP BY CASE_ID 
				     ) SO
				 WHERE C.CASE_ID=SO.CASE_ID) CB
			</when>
			<when test="policeType==1">
				 (SELECT C.CASE_ID,C.CASE_NO,C.CASE_NAME,C.INPUTER,C.INPUT_TIME,C.INPUT_UNIT,C.AMOUNT_INVOLVED,
				 C.ACCEPT_UNIT,C.CASE_STATE,C.RECORD_SRC,C.LATEST_POCESS_TIME,C.PROC_KEY,C.CASE_TYPE 
				 FROM CASE_BASIC C LEFT JOIN 
				   (SELECT S.CASE_ID,O.POLICE_TYPE FROM CASE_STEP S, ORGANISE O
				    WHERE S.TARGET_ORG_ID = O.ORG_CODE
				    AND S.TARGET_ORG_TYPE = '3'
				    GROUP BY CASE_ID,O.POLICE_TYPE) SO
				    on C.CASE_ID = SO.CASE_ID
				 WHERE (SO.POLICE_TYPE = 1 OR SO.POLICE_TYPE IS NULL)) CB
			</when>
			<otherwise>
				CASE_BASIC CB 
			</otherwise>
		  </choose>
    	,CASE_STATE CS,PENALTY_CASE_FORM PCE,CASE_XIANYIREN K
    	WHERE CB.CASE_ID=CS.CASE_ID
    	AND CB.CASE_ID=PCE.CASE_ID(+)
   		AND CB.CASE_ID=K.CASE_ID
		<if test="districtId!=null and districtId!='' ">
			AND EXISTS (
       		SELECT U.USER_ID FROM V_USER_ORGANISE_DISTRICT U WHERE 
           	U.USER_ID=CB.INPUTER AND U.DISTRICT_CODE LIKE #{districtId}||'%' 
			)
		</if>
		<if test="shortDistrictId!=null and shortDistrictId!='' ">
			AND EXISTS (
       		SELECT U.USER_ID FROM V_USER_ORGANISE_DISTRICT U WHERE 
           	U.USER_ID=CB.INPUTER AND U.DISTRICT_CODE LIKE #{shortDistrictId}||'%'
			)
		</if>
		<if test="industryType!=null">
			  AND EXISTS (
        		SELECT U.USER_ID FROM V_USER_ORGANISE_DISTRICT U WHERE 
            	U.USER_ID=CB.INPUTER AND U.INDUSTRY_TYPE= #{industryType}
				)
		</if>
		<if test="orgPath!=null">
			AND EXISTS (
        		SELECT U.USER_ID FROM V_USER_ORGANISE_DISTRICT U WHERE 
            	U.USER_ID=CB.INPUTER AND U.ORG_PATH LIKE #{orgPath} ||'%'
				)
		</if>
		AND EXISTS (
        		SELECT U.USER_ID FROM V_USER_ORGANISE_DISTRICT U WHERE 
            	U.USER_ID=CB.INPUTER AND U.INDUSTRY_TYPE is not null
				)
		<if test="procKey!=null">
			   AND CB.PROC_KEY=#{procKey}
		</if>
			AND K.DAIBU_STATE=3
			AND CS.DAIBU_STATE=2
		<if test="caseNo != null">
			AND CB.CASE_NO LIKE CONCAT(CONCAT('%',#{caseNo}),'%')
		</if>
		<if test="caseName != null">
			AND CB.CASE_NAME LIKE CONCAT(CONCAT('%',#{caseName}),'%')
		</if>
		<if test="isDqdj != null and isDqdj!='' ">
  			AND PCE.IS_DQDJ =#{isDqdj}
		</if>
		<if test="startTime != null and startTime!='' and startTime!='null'">
			<![CDATA[
			   AND CB.INPUT_TIME >= TO_DATE(#{startTime},'yyyy-MM')
			 	]]>
		</if>
		<if test="endTime != null and endTime!='' and endTime!='null'">
			 <![CDATA[
			     AND CB.INPUT_TIME  < TO_DATE(#{endTime},'yyyy-MM') + INTERVAL '1' MONTH
			 	]]>
		</if>
		<if test="yearCode!= null and yearCode!='null' and yearCode!=''">
			AND TO_CHAR(CB.INPUT_TIME,'yyyy') = #{yearCode}
		</if>
		<if test="quarterCode!= null and quarterCode!='null' and quarterCode!=''">
			<if test="quarterCode==1">
				AND TO_CHAR(CB.INPUT_TIME,'MM') &gt;= 01
				AND TO_CHAR(CB.INPUT_TIME,'MM') &lt;= 03
			</if>
			<if test="quarterCode==2">
				AND TO_CHAR(CB.INPUT_TIME,'MM') &gt;= 04
				AND TO_CHAR(CB.INPUT_TIME,'MM') &lt;= 06
			</if>
			<if test="quarterCode==3">
				AND TO_CHAR(CB.INPUT_TIME,'MM') &gt;= 07
				AND TO_CHAR(CB.INPUT_TIME,'MM') &lt;= 09
			</if>
			<if test="quarterCode==4">
				AND TO_CHAR(CB.INPUT_TIME,'MM') &gt;= 10
				AND TO_CHAR(CB.INPUT_TIME,'MM') &lt;= 12
			</if>
		</if>
		<if test="monthCode!= null and monthCode!='null' and monthCode!=''">
			AND TO_CHAR(CB.INPUT_TIME,'yyyyMM') = #{monthCode}
		</if>
		ORDER BY CB.LATEST_POCESS_TIME DESC
	</select>
	
	<resultMap id="allCaseResultMap" type="com.ksource.liangfa.domain.CaseForLucene">
		   <id column="CASE_ID" jdbcType="VARCHAR" property="caseId" />
		    <result column="CASE_NO" jdbcType="VARCHAR" property="caseNo" />
		    <result column="CASE_NAME" jdbcType="VARCHAR" property="caseName" />
		    <result column="INPUTER" jdbcType="VARCHAR" property="inputer" />
		    <result column="INPUT_TIME" jdbcType="TIMESTAMP" property="inputTime" />
		    <result column="INPUT_UNIT" jdbcType="DECIMAL" property="inputUnit" />
		    <result column="AMOUNT_INVOLVED" jdbcType="DECIMAL" property="amountInvolved" />
		    <result column="ACCEPT_UNIT" jdbcType="VARCHAR" property="acceptUnit" />
		    <result column="CASE_STATE" jdbcType="VARCHAR" property="caseState" />
		    <result column="CASE_DETAIL_NAME" jdbcType="CLOB" property="caseDetailName" />
		    <result column="RECORD_SRC" jdbcType="VARCHAR" property="recordSrc" />
		    <result column="LATEST_POCESS_TIME" jdbcType="TIMESTAMP" property="latestPocessTime" />
		    <result column="PROC_KEY" jdbcType="VARCHAR" property="procKey" />
		    <result column="CASE_TYPE" jdbcType="DECIMAL" property="caseType" />
		    <result column="INPUT_TYPE" jdbcType="DECIMAL" property="inputType" />
		    <result column="FIRST_UNIT" jdbcType="VARCHAR" property="firstUnit" />
		    <result column="AMOUNT_INVOLVED_CHUFA" jdbcType="DECIMAL" property="amountInvolvedChufa" />
		    <result column="GOODS_INVOLVED" jdbcType="VARCHAR" property="goodsInvolved" />
		    <result column="GOODS_DISPOSE_RESULT" jdbcType="VARCHAR" property="goodsDisposeResult" />
		    <result column="PARTY_DISPOSE_RESULT" jdbcType="VARCHAR" property="partyDisposeResult" />
		    <result column="IDENTIFY_TYPE" jdbcType="DECIMAL" property="identifyType" />
		    <result column="IDENTIFY_ORG" jdbcType="VARCHAR" property="identifyOrg" />
		    <result column="IDENTIFY_PERSON" jdbcType="VARCHAR" property="identifyPerson" />
		    <result column="IDENTIFY_TIME" jdbcType="TIMESTAMP" property="identifyTime" />
		    <result column="IDENTIFY_RESULT" jdbcType="VARCHAR" property="identifyResult" />
		    <result column="VERSION_NO" jdbcType="DECIMAL" property="versionNo" />
		    <result column="IS_EXECUTION" jdbcType="DECIMAL" property="isExecution" />
		    <result column="COURT_NAME" jdbcType="VARCHAR" property="courtName" />
		    <result column="NO_ACCEPT_REASON" jdbcType="VARCHAR" property="noAcceptReason" />
		    <result column="NO_YISONG_STATE" jdbcType="DECIMAL" property="noYisongState" />
		    <result column="IS_SUGGEST_YISONG" jdbcType="DECIMAL" property="isSuggestYisong" />
		    <result column="SUGGEST_YISONG_JIANCHA" jdbcType="VARCHAR" property="suggestYisongJiancha" />
		    <result column="SUGGEST_YISONG_TIME" jdbcType="TIMESTAMP" property="suggestYisongTime" />
		    <result column="GOODS_COUNT" jdbcType="VARCHAR" property="goodsCount" />
		    <result column="IS_LOWER_LIMIT_MONEY" jdbcType="DECIMAL" property="isLowerLimitMoney" />
		    <result column="IS_SUSPECTED_CRIMINAL" jdbcType="DECIMAL" property="isSuspectedCriminal" />
		    <result column="ANFA_ADDRESS" jdbcType="VARCHAR" property="anfaAddress" />
		    <result column="ANFA_TIME" jdbcType="TIMESTAMP" property="anfaTime" />
		    <result column="IS_DESCUSS" jdbcType="DECIMAL" property="isDescuss" />
		    <result column="IS_BEYOND_EIGHTY" jdbcType="DECIMAL" property="isBeyondEighty" />
		    <result column="IS_SERIOUS_CASE" jdbcType="DECIMAL" property="isSeriousCase" />
		    <result column="CHUFA_TIMES" jdbcType="DECIMAL" property="chufaTimes" />
		    <result column="CHUFA_TIME" jdbcType="TIMESTAMP" property="chufaTime" />    
		   <result column="ORG_NAME" jdbcType="VARCHAR" property="orgName" />
			<collection ofType="string" property="casePartyNameList">
				<result column="case_party_name" />
			</collection>
			<collection ofType="string" property="caseCompanyNameList">
				<result column="case_company_name" />
			</collection>
	</resultMap>
	<select id="findAllCaseForLuceneList" resultMap="allCaseResultMap">
		select A.*,O.ORG_NAME from (select CB.CASE_ID, CB.CASE_NO, CB.CASE_NAME, CB.INPUTER, CB.INPUT_TIME, CB.INPUT_UNIT, 
						CB.AMOUNT_INVOLVED,  CB.CASE_STATE, CB.RECORD_SRC, CB.LATEST_POCESS_TIME, 
						CB.PROC_KEY, CB.CASE_TYPE, CB.INPUT_TYPE, 
						PCE.GOODS_INVOLVED, PCE.GOODS_DISPOSE_RESULT, PCE.IDENTIFY_TYPE, 
						PCE.IDENTIFY_ORG, PCE.IDENTIFY_PERSON, PCE.IDENTIFY_TIME, PCE.IDENTIFY_RESULT, CB.VERSION_NO, 
		    			
		    			PCE.GOODS_COUNT, PCE.IS_LOWER_LIMIT_MONEY, 
		    			CB.IS_SUSPECTED_CRIMINAL,CB.CASE_DETAIL_NAME,
              CB.ANFA_ADDRESS, CB.ANFA_TIME,pce.IS_DESCUSS, 
              pce.IS_BEYOND_EIGHTY, pce.IS_SERIOUS_CASE, pce.CHUFA_TIMES, pce.CHUFA_TIME,
              p.name as case_party_name,cp.name as case_company_name
    from CASE_BASIC CB LEFT JOIN PENALTY_CASE_FORM PCE ON CB.CASE_ID = PCE.CASE_ID
    left join case_party p on cb.case_id = p.case_id
    left join case_company cp on cb.case_id = cp.case_id
     ) A,USER_ U,ORGANISE O
    WHERE A.INPUTER = U.USER_ID
    AND U.ORG_ID = O.ORG_CODE
	</select>
	
<select id="getyisiFaCaseListForLucene" parameterType="map" resultMap="yisiFaResultMap">
		select a.*,b.case_detail_name from (
		SELECT DISTINCT
		CB1.CASE_ID,CB1.CASE_NO,CB1.CASE_NAME,CB1.INPUTER,CB1.INPUT_TIME,CB1.CHUFA_TIME,CB1.ANFA_ADDRESS,CB1.ANFA_TIME,
		CB1.AMOUNT_INVOLVED,CB1.ORG_NAME,CB1.identify_type,
		CB1.CASE_STATE,CB1.GOODS_INVOLVED,CB1.XIANYIREN_NAME,CB1.COMPANY_NAME
		FROM
		(SELECT
		CB.CASE_ID,CB.CASE_NO,CB.CASE_NAME,CB.INPUTER,CB.INPUT_TIME,PCE.CHUFA_TIME,PCE.ANFA_ADDRESS,PCE.ANFA_TIME,
		CB.AMOUNT_INVOLVED,O.ORG_NAME,CB.identify_type,CB.CASE_STATE,CB.GOODS_INVOLVED,
		CX.IDS_NO,CX."NAME" AS XIANYIREN_NAME,CC."NAME" AS COMPANY_NAME
		FROM CASE_BASIC CB,CASE_STATE CST,PENALTY_CASE_EXT PCE,CASE_XIANYIREN CX,CASE_COMPANY CC,USER_ U,ORGANISE O
		WHERE
		CB.PROC_KEY = 'chufaProc'
		AND CB.CASE_ID = CST.CASE_ID
		AND CB.CASE_ID
		=PCE.CASE_ID(+)
		AND CB.CASE_ID = CX.CASE_ID(+)
		AND CB.CASE_ID= CC.CASE_ID(+)
		AND CB.CASE_TYPE IN (1,2)
		AND CB.INPUTER = U.USER_ID
		AND U.ORG_ID = O.ORG_CODE
		<if test="caseName != null and caseName != ''">
		    	AND cb.case_name like concat('%',concat(#{caseName},'%'))
		 </if>		
		) CB1,
		(SELECT
		CB.CASE_ID,CB.CASE_NO,CB.CASE_NAME,CB.INPUTER,CB.INPUT_TIME,PCE.CHUFA_TIME,PCE.ANFA_ADDRESS,PCE.ANFA_TIME,
		CB.AMOUNT_INVOLVED,O.ORG_NAME,CB.identify_type,CB.CASE_STATE,CB.GOODS_INVOLVED,
		CX.IDS_NO,CX."NAME" AS XIANYIREN_NAME,CC."NAME" AS COMPANY_NAME
		FROM CASE_BASIC CB,CASE_STATE CST,PENALTY_CASE_EXT PCE,CASE_XIANYIREN CX,CASE_COMPANY CC,USER_ U,ORGANISE O
		WHERE
		CB.PROC_KEY = 'chufaProc'
		AND CB.CASE_ID = CST.CASE_ID
		AND CB.CASE_ID =PCE.CASE_ID(+)
		AND CB.CASE_ID = CX.CASE_ID(+)
		AND CB.CASE_ID= CC.CASE_ID(+)
		AND CB.CASE_TYPE IN (1,2)
		AND CB.INPUTER = U.USER_ID
		AND U.ORG_ID = O.ORG_CODE
		<if test="caseName != null and caseName != ''">
		    	AND cb.case_name like concat('%',concat(#{caseName},'%'))
		 </if>		
		) CB2
		WHERE cb1.CASE_ID != cb2.CASE_ID 
		and CB1.INPUTER = CB2.INPUTER
		<include refid="yisiFaCaseField" />
		) a left join case_basic b
	on a.case_id = b.case_id
	order by a.INPUTER,a.ANFA_TIME desc,a.anfa_address asc
	</select>
	
	<update id="updateInentify" parameterType="com.ksource.liangfa.domain.CaseBasic">
		update case_basic set
		IDENTIFY_ORG = #{identifyOrg,jdbcType=VARCHAR},
      	IDENTIFY_PERSON = #{identifyPerson,jdbcType=VARCHAR},
      	IDENTIFY_TIME = #{identifyTime,jdbcType=TIMESTAMP},
      	IDENTIFY_RESULT = #{identifyResult,jdbcType=VARCHAR}
      	where CASE_ID = #{caseId,jdbcType=VARCHAR}
	</update>
	
	<resultMap extends="BaseResultMap" id="getjiandulianCaseListResultMap" type="com.ksource.liangfa.domain.CaseBasic">
		<result column="INPUT_ORG_NAME" jdbcType="VARCHAR" property="inputOrgName" />
	</resultMap>
	<select id="getjiandulianCaseCount" parameterType="map" resultType="java.lang.Integer">
		SELECT COUNT(1)
		FROM CASE_BASIC CB,CASE_STATE CST,ORGANISE O
		WHERE CB.PROC_KEY = 'chufaProc'
		AND CB.CASE_ID = CST.CASE_ID
		AND CB.INPUT_UNIT =O.ORG_CODE
		AND (CST.LIAN_STATE = 4 OR (CST.REQ_EXPLAIN_STATE = 1 AND CST.LIAN_STATE = 3))
		<if test="caseNo != null">
			AND INSTR(CB.CASE_NO,#{caseNo})> 0
		</if>
		<if test="caseName != null">
			AND INSTR(CB.CASE_NAME,#{caseName})> 0
		</if>
		<if test="condition != null and condition!='' ">
			AND (INSTR(CB.CASE_NO,#{condition})> 0 OR INSTR(CB.CASE_NAME,#{condition})> 0)
		</if>
		<if test="districtCode!=null and districtCode!='' ">
			AND O.DISTRICT_CODE LIKE #{districtCode}||'%'
		</if>
		<if test="orgPath!=null and orgPath!='' ">
			AND O.ORG_PATH LIKE #{orgPath}||'%'
		</if>
		<if test="startTime != null and startTime!='' and startTime!='null'">
			 <![CDATA[
			   AND CB.INPUT_TIME >= #{startTime,jdbcType=TIMESTAMP}
			 ]]>
		</if>
		<if test="endTime != null and endTime!='' and endTime!='null'">
			 <![CDATA[
			     AND CB.INPUT_TIME  < #{endTime,jdbcType=TIMESTAMP}+ INTERVAL '1' DAY
			 ]]>
		</if>
		<if test="startTimeApp != null and startTimeApp!='' and startTimeApp!='null'">
			<![CDATA[
			   AND CB.INPUT_TIME >= TO_DATE(#{startTimeApp},'yyyy-MM-dd')
			 	]]>
		</if>
		<if test="endTimeApp != null and endTimeApp!='' and endTimeApp!='null'">
			 <![CDATA[
			     AND CB.INPUT_TIME  < TO_DATE(#{endTimeApp},'yyyy-MM-dd') + INTERVAL '1' DAY
			 	]]>
		</if>
	    <if test="industryType!=null and industryType!=''">
	        AND O.INDUSTRY_TYPE=#{industryType}
	    </if>		
	</select>
	<select id="getjiandulianCaseList" parameterType="map" resultMap="getjiandulianCaseListResultMap">
		SELECT CB.CASE_ID,CB.CASE_NO,CB.CASE_NAME,CB.INPUT_TIME,CB.CASE_STATE,CB.LATEST_POCESS_TIME,
		CB.PROC_KEY,O.ORG_NAME AS INPUT_ORG_NAME 
		FROM CASE_BASIC CB,CASE_STATE CST,ORGANISE O
		WHERE
		CB.PROC_KEY = 'chufaProc'
		AND CB.CASE_ID = CST.CASE_ID
		AND CB.INPUT_UNIT =O.ORG_CODE
		AND (CST.LIAN_STATE = 4 OR (CST.REQ_EXPLAIN_STATE = 1 AND CST.LIAN_STATE = 3))
		<if test="caseNo != null">
			AND INSTR(CB.CASE_NO,#{caseNo})> 0
		</if>
		<if test="caseName != null">
			AND INSTR(CB.CASE_NAME,#{caseName})> 0
		</if>
		<if test="condition != null and condition!='' ">
			AND (INSTR(CB.CASE_NO,#{condition})> 0 OR INSTR(CB.CASE_NAME,#{condition})> 0)
		</if>
		<if test="districtCode!=null and districtCode!='' ">
			AND O.DISTRICT_CODE LIKE #{districtCode}||'%'
		</if>
		<if test="orgPath!=null and orgPath!='' ">
			AND O.ORG_PATH LIKE #{orgPath}||'%'
		</if>
		<if test="startTime != null and startTime!='' and startTime!='null'">
			<![CDATA[
			   AND CB.INPUT_TIME >= #{startTime,jdbcType=TIMESTAMP}
			]]>
		</if>
		<if test="endTime != null and endTime!='' and endTime!='null'">
			 <![CDATA[
			     AND CB.INPUT_TIME  < #{endTime,jdbcType=TIMESTAMP}+ INTERVAL '1' DAY
			 ]]>
		</if>
		<if test="startTimeApp != null and startTimeApp!='' and startTimeApp!='null'">
			<![CDATA[
			   AND CB.INPUT_TIME >= TO_DATE(#{startTimeApp},'yyyy-MM-dd')
			 	]]>
		</if>
		<if test="endTimeApp != null and endTimeApp!='' and endTimeApp!='null'">
			 <![CDATA[
			     AND CB.INPUT_TIME  < TO_DATE(#{endTimeApp},'yyyy-MM-dd') + INTERVAL '1' DAY
			 	]]>
		</if>
        <if test="industryType!=null and industryType!=''">
            AND O.INDUSTRY_TYPE=#{industryType}
        </if>		
		ORDER BY O.DISTRICT_CODE ASC,CB.INPUT_TIME DESC
	</select>
	
	
	<resultMap extends="ResultMapWithBLOBs" id="CaseMapByTaskId" type="com.ksource.liangfa.domain.CaseBasic">
		<result column="CHUFA_STATE" jdbcType="VARCHAR" property="chufaState" />
		<result column="CHUFA_TIME" jdbcType="TIMESTAMP" property="chufaTime" />
		<result column="org_name" jdbcType="VARCHAR" property="orgName" />
	</resultMap>
	<select id="getCaseByTaskId" parameterType="map" resultMap="CaseMapByTaskId">
		SELECT
		CB.CASE_ID,CB.CASE_NO,CB.CASE_NAME,CB.INPUTER,CB.INPUT_TIME,
		CB.AMOUNT_INVOLVED,
		CB.CASE_STATE,CB.RECORD_SRC,CB.LATEST_POCESS_TIME,CB.PROC_KEY,CB.CASE_DETAIL_NAME
		FROM CASE_BASIC CB,case_process p,ACT_RU_TASK t
		WHERE CB.PROC_KEY = 'chufaProc'
		and cb.case_id=p.case_id 
		and p.proc_inst_id=t.proc_inst_id_ 
		and t.id_=#{taskId}
	</select>	
	
	<resultMap id="SuspectedCriminalCase" type="com.ksource.liangfa.domain.CaseBasic">
	    <result column="CASE_ID" jdbcType="VARCHAR" property="caseId" />
	    <result column="CASE_NO" jdbcType="VARCHAR" property="caseNo" />
   		<result column="CASE_NAME" jdbcType="VARCHAR" property="caseName" />
   		<collection ofType="string" property="accuseNameList">
   			<result column="ACCUSE_NAME" jdbcType="VARCHAR" />
   		</collection>  		   			 
	</resultMap>
	<select id="querySuspectedCriminalCase" parameterType="com.ksource.liangfa.domain.CaseBasic" resultMap="SuspectedCriminalCase">
		SELECT C.CASE_ID,C.CASE_NO,C.CASE_NAME,T.ACCUSE_NAME 
		FROM  CASE_BASIC C,
		(
		 SELECT CASE_ID,A.NAME AS ACCUSE_NAME FROM CASE_ACCUSE_RULE_RELATION CI,ACCUSE_RULE I,ACCUSE_RULE_RELATION SA,ACCUSE_INFO A
		 WHERE CI.rule_id = I.ID AND CI.rule_id = SA.rule_id AND SA.ACCUSE_ID = A.ID
		 AND SA.ACCUSE_ID != 190
		 ) T
		 WHERE C.CASE_ID = T.CASE_ID
		 <![CDATA[ AND C.CASE_STATE <= 4 ]]>
		 AND C.IS_SUSPECTED_CRIMINAL = 1	
		<if test="startTime != null and startTime!='' and startTime!='null'">
			<![CDATA[
			   AND C.INPUT_TIME >= #{startTime,jdbcType=TIMESTAMP}
			 	]]>
		</if>
		<if test="endTime != null and endTime!='' and endTime!='null'">
			 <![CDATA[
			     AND C.INPUT_TIME  < #{endTime,jdbcType=TIMESTAMP} + INTERVAL '1' DAY
			 	]]>
		</if>
		<if test="districtCode != null and districtCode!='null' and districtCode!=''">
			AND C.INPUTER IN (SELECT U.USER_ID FROM ORGANISE O,USER_ U 
        	WHERE O.ORG_CODE=U.ORG_ID AND O.DISTRICT_CODE LIKE CONCAT(#{districtCode},'%'))
		</if>
	</select>
	
	<resultMap id="filingSupervisionCase" type="com.ksource.liangfa.domain.CaseBasic">
		<result column="CASE_NO" jdbcType="VARCHAR" property="caseNo" />
   		<result column="CASE_NAME" jdbcType="VARCHAR" property="caseName" />
		<result column="IS_LOWER_LIMIT_MONEY" jdbcType="DECIMAL" property="isLowerLimitMoney" />
    	<result column="IS_SUSPECTED_CRIMINAL" jdbcType="DECIMAL" property="isSuspectedCriminal" />
    	<result column="IDENTIFY_TYPE" jdbcType="DECIMAL" property="identifyType" />
	    <result column="IS_DESCUSS" jdbcType="DECIMAL" property="isDescuss" />
	    <result column="IS_BEYOND_EIGHTY" jdbcType="DECIMAL" property="isBeyondEighty" />
	    <result column="IS_SERIOUS_CASE" jdbcType="DECIMAL" property="isSeriousCase" />
	    <result column="CHUFA_TIMES" jdbcType="DECIMAL" property="chufaTimes" />
	</resultMap>
	
	<select id="queryfilingSupervisionCase" parameterType="map" resultMap="filingSupervisionCase">
		SELECT C.CASE_NO,C.CASE_NAME,PCE.IS_LOWER_LIMIT_MONEY,C.IS_SUSPECTED_CRIMINAL,PCE.IDENTIFY_TYPE,
		PCE.IS_DESCUSS,PCE.IS_BEYOND_EIGHTY,PCE.IS_SERIOUS_CASE,PCE.CHUFA_TIMES 
	    FROM  CASE_BASIC C,PENALTY_CASE_FORM PCE,USER_ U,ORGANISE O,CASE_STATE S
	     WHERE C.CASE_ID = PCE.CASE_ID(+)
	     AND C.INPUTER = U.USER_ID
	     AND U.ORG_ID = O.ORG_CODE
	     AND C.CASE_ID = S.CASE_ID
	     AND C.CASE_STATE = 2
	     AND S.YISONG_STATE = 1
      	<if test="districtId != null">
			 AND  O.DISTRICT_CODE LIKE #{districtId}||'%'
		</if>
		<if test="minCaseInputTime !=null">
			<![CDATA[ and c.input_time >= #{minCaseInputTime,jdbcType=TIMESTAMP}]]>
		</if>
		<if test="maxCaseInputTime !=null">
			<![CDATA[ and c.input_time < (#{maxCaseInputTime,jdbcType=TIMESTAMP} +   interval   '1'  day)]]>
		</if>
		 and (1 = 2 
		 		 <if test="isDescuss!=null">
					or pce.is_descuss=#{isDescuss}
				</if>
				<if test="chufaTimes!=null">
					<![CDATA[ or pce.chufa_times > #{chufaTimes} ]]>
				</if>
				<if test="isSeriousCase!=null">
					or pce.is_serious_case=#{isSeriousCase,jdbcType=DECIMAL}
				</if>
				<if test="isBeyondEighty!=null">
					or pce.is_beyond_eighty=#{isBeyondEighty,jdbcType=DECIMAL}
				</if>
				<if test="isLowerLimitMoney!=null">
					or pce.IS_LOWER_LIMIT_MONEY=#{isLowerLimitMoney,jdbcType=DECIMAL}
				</if>
				<if test="isIdentify!=null and isIdentify==1">
					<![CDATA[or pce.IDENTIFY_TYPE <6 ]]>
				</if>
				<if test="isIdentify!=null and isIdentify==0">
					<![CDATA[or pce.IDENTIFY_TYPE =6 ]]>
				</if>
		 )
	 	<if test="isDescussQ != null">
			and pce.IS_DESCUSS = #{isDescussQ,jdbcType=DECIMAL}
		</if>
		<if test="chufaTimesQ != null">
			<![CDATA[ and pce.CHUFA_TIMES > #{chufaTimesQ,jdbcType=DECIMAL} ]]>
		</if>
		<if test="isSeriousCaseQ !=null">
			and pce.is_serious_case=#{isSeriousCaseQ,jdbcType=DECIMAL}
		</if>
		<if test="isBeyondEightyQ !=null">
			and pce.is_beyond_eighty=#{isBeyondEightyQ,jdbcType=DECIMAL}
		</if>
		<if test="isLowerLimitMoneyQ !=null">
			and pce.IS_LOWER_LIMIT_MONEY=#{isLowerLimitMoneyQ,jdbcType=DECIMAL}
		</if>
		<if test="isIdentifyQ !=null and isIdentifyQ ==1">
			<![CDATA[and pce.IDENTIFY_TYPE <6 ]]>
		</if>
		<if test="isIdentifyQ !=null and isIdentifyQ ==0">
			<![CDATA[and pce.IDENTIFY_TYPE =6 ]]>
		</if>		 
	</select>
	
	<select id="queryfilingSupervisionCaseCount" parameterType="map" resultType="int">
		SELECT COUNT(1)
	    FROM  CASE_BASIC C,PENALTY_CASE_FORM PCE,USER_ U,ORGANISE O,CASE_STATE S
	     WHERE C.CASE_ID = PCE.CASE_ID
	     AND C.INPUTER=U.USER_ID
	     AND U.ORG_ID=O.ORG_CODE
	     AND C.CASE_ID = S.CASE_ID 
	     AND C.CASE_STATE = 2
	     AND S.YISONG_STATE = 1
      	<if test="districtId != null">
			 AND  O.DISTRICT_CODE LIKE #{districtId}||'%'
		</if>
		<if test="minCaseInputTime !=null">
			<![CDATA[ and c.input_time >= #{minCaseInputTime,jdbcType=TIMESTAMP}]]>
		</if>
		<if test="maxCaseInputTime !=null">
			<![CDATA[ and c.input_time < (#{maxCaseInputTime,jdbcType=TIMESTAMP} +   interval   '1'  day)]]>
		</if>
		 and (1 = 2 
		 		 <if test="isDescuss!=null">
					or pce.is_descuss=#{isDescuss}
				</if>
				<if test="chufaTimes!=null">
					<![CDATA[ or pce.chufa_times > #{chufaTimes} ]]>
				</if>
				<if test="isSeriousCase!=null">
					or pce.is_serious_case=#{isSeriousCase}
				</if>
				<if test="isBeyondEighty!=null">
					or pce.is_beyond_eighty=#{isBeyondEighty}
				</if>
				<if test="isLowerLimitMoney!=null">
					or pce.IS_LOWER_LIMIT_MONEY=#{isLowerLimitMoney}
				</if>
				<if test="isIdentify!=null and isIdentify==1">
					<![CDATA[or pce.IDENTIFY_TYPE <6 ]]>
				</if>
				<if test="isIdentify!=null and isIdentify==0">
					<![CDATA[or pce.IDENTIFY_TYPE =6 ]]>
				</if>
		 )
	 	<if test="isDescussQ != null">
			and pce.IS_DESCUSS = #{isDescussQ}
		</if>
		<if test="chufaTimesQ != null">
			<![CDATA[ and pce.CHUFA_TIMES > #{chufaTimesQ} ]]>
		</if>
		<if test="isSeriousCaseQ !=null">
			and pce.is_serious_case=#{isSeriousCaseQ}
		</if>
		<if test="isBeyondEightyQ !=null">
			and pce.is_beyond_eighty=#{isBeyondEightyQ}
		</if>
		<if test="isLowerLimitMoneyQ !=null">
			and pce.IS_LOWER_LIMIT_MONEY=#{isLowerLimitMoneyQ}
		</if>
		<if test="isIdentifyQ !=null and isIdentifyQ ==1">
			<![CDATA[and pce.IDENTIFY_TYPE <6 ]]>
		</if>
		<if test="isIdentifyQ !=null and isIdentifyQ ==0">
			<![CDATA[and pce.IDENTIFY_TYPE =6 ]]>
		</if> 		 
	</select>	
	
	<select id="yisongPoliceNotAcceptQueryList" parameterType="map" resultMap="BaseResultMap">
		SELECT CB.CASE_ID,
		CB.CASE_NO,
		CB.CASE_NAME,
		CB.CASE_STATE,
		CB.AMOUNT_INVOLVED,
		CB.INPUT_TIME,
		CB.LATEST_POCESS_TIME
		FROM CASE_BASIC
		CB, USER_ U, ORGANISE O, CASE_STATE CS
		WHERE CB.INPUTER = U.USER_ID
		AND
		U.ORG_ID = O.ORG_CODE
		AND CB.CASE_ID = CS.CASE_ID
		AND CS.YISONG_STATE IN (2,3)
		AND CS.LIAN_STATE=1
		and c.PROC_KEY ='chufaProc'
		<if test="shortDistrictCode != null">
			 AND  O.DISTRICT_CODE LIKE #{shortDistrictCode}||'%'
		</if>
		<if test="startTime != null">
			 <![CDATA[ AND  CB.INPUT_TIME >= #{startTime,jdbcType=TIMESTAMP} ]]>
		</if>
		<if test="endTime != null">
			 <![CDATA[ AND  CB.INPUT_TIME  < (#{endTime,jdbcType=TIMESTAMP} +   interval   '1'  day) ]]>
		</if>
	</select>
	<select id="yisongPoliceNotAcceptQueryCount" parameterType="map" resultType="int">
		SELECT COUNT(*)
		FROM CASE_BASIC CB, USER_ U, ORGANISE O, CASE_STATE CS
		WHERE CB.INPUTER = U.USER_ID
		AND U.ORG_ID = O.ORG_CODE
		AND CB.CASE_ID = CS.CASE_ID
		AND CS.YISONG_STATE IN (2,3)
		AND CS.LIAN_STATE=1
		and c.PROC_KEY ='chufaProc'
		<if test="shortDistrictCode != null">
			 AND  O.DISTRICT_CODE LIKE #{shortDistrictCode}||'%'
		</if>
		<if test="startTime != null">
			 <![CDATA[ AND  CB.INPUT_TIME >= #{startTime,jdbcType=TIMESTAMP} ]]>
		</if>
		<if test="endTime != null">
			 <![CDATA[ AND  CB.INPUT_TIME  < (#{endTime,jdbcType=TIMESTAMP} +   interval   '1'  day) ]]>
		</if>
		
	</select>
	    
	<select id="queryMinCaseInputTime" parameterType="com.ksource.liangfa.domain.CaseBasic" resultType="java.util.Date">
		select min(c.input_time) from case_basic c,case_state s,user_ u,organise o
		where c.case_id=s.case_id and c.inputer=u.user_id
		and u.org_id=o.org_code 
		<if test="chufaState != null ">
			and s.chufa_state=2
		</if>
		<if test="districtId != null ">
			and o.district_code like #{districtId}||'%'
		</if>
		<if test="yisongState != null ">
			and c.CASE_STATE = 10
		</if>
		and c.PROC_KEY ='chufaProc'
	</select> 
	
	<select id="queryCaseCount" parameterType="com.ksource.liangfa.domain.CaseBasic" resultType="int">
        SELECT COUNT(1) 
        FROM CASE_BASIC C,CASE_STATE S,USER_ U,ORGANISE O
        WHERE C.CASE_ID=S.CASE_ID AND C.INPUTER=U.USER_ID
		AND U.ORG_ID=O.ORG_CODE 		
		<if test="chufaState != null ">
			AND S.CHUFA_STATE = 2
		</if>
		<if test="districtId != null ">
			AND O.DISTRICT_CODE LIKE #{districtId}||'%'
		</if>
 		<if test="minCaseInputTime != null">
			<![CDATA[AND  C.INPUT_TIME >= #{minCaseInputTime,jdbcType=TIMESTAMP}]]>
		</if>
		<if test="maxCaseInputTime != null">
			<![CDATA[AND  C.INPUT_TIME  < (#{maxCaseInputTime,jdbcType=TIMESTAMP} +   interval   '1'  day)]]>
		</if>
		<if test="caseState != null and caseState == 4">
			<![CDATA[AND C.CASE_STATE <= 4]]>
		</if>
    </select>
    
    <select id="filterDrillCount" parameterType="map" resultType="int">
	    SELECT COUNT(1) FROM
	    (
	      SELECT TB_FILTERS.CASE_ID,TB_FILTERS.CASE_NO,TB_FILTERS.CASE_NAME,TB_FILTERS.ORG_NAME,TB_FILTERS.INPUT_TIME,TB_FILTERS.LATEST_POCESS_TIME,TB_FILTERS.DISTRICT_CODE,TB_FILTERS.CASE_STATE,
	     	TB_FILTERS.IS_DESCUSS,TB_FILTERS.CHUFA_TIMES,TB_FILTERS.IS_SERIOUS_CASE,TB_FILTERS.IS_BEYOND_EIGHTY,TB_FILTERS.IS_LOWER_LIMIT_MONEY,TB_FILTERS.IDENTIFY_TYPE,
	      (TB_FILTERS.LOWER_MONEY_FILTER+TB_FILTERS.IDENTIFY_FILTER+TB_FILTERS.DESCUSS_FILTER+TB_FILTERS.BEYOND_FILTER+TB_FILTERS.SERIOUS_FILTER+TB_FILTERS.TIMES_FILTER) FILTER_COUNT FROM 
	      (
	        SELECT C.CASE_ID,C.CASE_NO,C.CASE_NAME,O.ORG_NAME,C.INPUT_TIME,C.LATEST_POCESS_TIME,O.DISTRICT_CODE,C.CASE_STATE,
	          PCE.IS_DESCUSS,PCE.CHUFA_TIMES,PCE.IS_SERIOUS_CASE,PCE.IS_BEYOND_EIGHTY,PCE.IS_LOWER_LIMIT_MONEY,PCE.IDENTIFY_TYPE,
	        CASE WHEN PCE.IS_LOWER_LIMIT_MONEY=1 THEN 1 ELSE 0 END LOWER_MONEY_FILTER,
	        CASE WHEN PCE.IDENTIFY_TYPE &lt; 6 THEN 1 ELSE 0 END IDENTIFY_FILTER,
	        CASE WHEN PCE.IS_DESCUSS=1 THEN 1 ELSE 0 END DESCUSS_FILTER,
	        CASE WHEN PCE.IS_BEYOND_EIGHTY=1 THEN 1 ELSE 0 END BEYOND_FILTER,
	        CASE WHEN PCE.IS_SERIOUS_CASE=1 THEN 1 ELSE 0 END SERIOUS_FILTER,
          CASE WHEN PCE.CHUFA_TIMES&gt;1 THEN 1 ELSE 0 END TIMES_FILTER
          FROM CASE_BASIC C,PENALTY_CASE_FORM PCE,CASE_STATE S,ORGANISE O
            WHERE C.INPUT_UNIT =O.ORG_CODE 
              AND C.CASE_ID = PCE.CASE_ID
              AND C.CASE_ID = S.CASE_ID
              AND C.CASE_STATE= 2
              AND S.YISONG_STATE = 1
        ) TB_FILTERS
	    ) TB_COUNT
		<include refid="filterDrillQuery" />    	
    </select>
    <resultMap id="filterDrillListMap" type="com.ksource.liangfa.domain.CaseBasic">
	    <result column="CASE_ID" jdbcType="VARCHAR" property="caseId" />
	    <result column="CASE_NO" jdbcType="VARCHAR" property="caseNo" />
	    <result column="CASE_NAME" jdbcType="VARCHAR" property="caseName" />
	    <result column="ORG_NAME" jdbcType="VARCHAR" property="orgName" />
	    <result column="INPUT_TIME" jdbcType="TIMESTAMP" property="inputTime" />
	    <result column="LATEST_POCESS_TIME" jdbcType="TIMESTAMP" property="latestPocessTime" />
	    <result column="DISTRICT_CODE" jdbcType="VARCHAR" property="districtCode" />
	    <result column="CASE_STATE" jdbcType="VARCHAR" property="caseState" />
        <result column="CHUFA_TIMES" jdbcType="DECIMAL" property="chufaTimes" />
        <result column="IS_SERIOUS_CASE" jdbcType="DECIMAL" property="isSeriousCase" />
        <result column="IS_BEYOND_EIGHTY" jdbcType="DECIMAL" property="isBeyondEighty" />
        <result column="IS_DESCUSS" jdbcType="DECIMAL" property="isDescuss" />
        <result column="IDENTIFY_TYPE" jdbcType="DECIMAL" property="identifyType" />
        <result column="IS_LOWER_LIMIT_MONEY" jdbcType="DECIMAL" property="isLowerLimitMoney" />
    </resultMap>
    <select id="filterDrillList" parameterType="map" resultMap="filterDrillListMap">
	    SELECT * FROM
	    (
	      SELECT TB_FILTERS.CASE_ID,TB_FILTERS.CASE_NO,TB_FILTERS.CASE_NAME,TB_FILTERS.ORG_NAME,TB_FILTERS.INPUT_TIME,TB_FILTERS.LATEST_POCESS_TIME,TB_FILTERS.DISTRICT_CODE,TB_FILTERS.CASE_STATE,
	     	TB_FILTERS.IS_DESCUSS,TB_FILTERS.CHUFA_TIMES,TB_FILTERS.IS_SERIOUS_CASE,TB_FILTERS.IS_BEYOND_EIGHTY,TB_FILTERS.IS_LOWER_LIMIT_MONEY,TB_FILTERS.IDENTIFY_TYPE,
	      (TB_FILTERS.LOWER_MONEY_FILTER+TB_FILTERS.IDENTIFY_FILTER+TB_FILTERS.DESCUSS_FILTER+TB_FILTERS.BEYOND_FILTER+TB_FILTERS.SERIOUS_FILTER+TB_FILTERS.TIMES_FILTER) FILTER_COUNT FROM 
	      (
	        SELECT C.CASE_ID,C.CASE_NO,C.CASE_NAME,O.ORG_NAME,C.INPUT_TIME,C.LATEST_POCESS_TIME,O.DISTRICT_CODE,C.CASE_STATE,
	          PCE.IS_DESCUSS,PCE.CHUFA_TIMES,PCE.IS_SERIOUS_CASE,PCE.IS_BEYOND_EIGHTY,PCE.IS_LOWER_LIMIT_MONEY,PCE.IDENTIFY_TYPE,
	        CASE WHEN PCE.IS_LOWER_LIMIT_MONEY=1 THEN 1 ELSE 0 END LOWER_MONEY_FILTER,
	        CASE WHEN PCE.IDENTIFY_TYPE &lt; 6 THEN 1 ELSE 0 END IDENTIFY_FILTER,
	        CASE WHEN PCE.IS_DESCUSS=1 THEN 1 ELSE 0 END DESCUSS_FILTER,
	        CASE WHEN PCE.IS_BEYOND_EIGHTY=1 THEN 1 ELSE 0 END BEYOND_FILTER,
	        CASE WHEN PCE.IS_SERIOUS_CASE=1 THEN 1 ELSE 0 END SERIOUS_FILTER,
          CASE WHEN PCE.CHUFA_TIMES&gt;1 THEN 1 ELSE 0 END TIMES_FILTER
          FROM CASE_BASIC C,PENALTY_CASE_FORM PCE,CASE_STATE S,ORGANISE O
            WHERE C.INPUT_UNIT =O.ORG_CODE 
              AND C.CASE_ID = PCE.CASE_ID
              AND C.CASE_ID = S.CASE_ID
              AND C.CASE_STATE= 2
              AND S.YISONG_STATE = 1
        ) TB_FILTERS
	    ) TB_COUNT
		<include refid="filterDrillQuery" />
	</select>
	
	<sql id="filterDrillQuery">
		<where>
			<if test="filterNum != null and filterNum != 0">
				AND TB_COUNT.FILTER_COUNT= #{filterNum}
			</if>
			<choose>
			<when test="startTime != null and endTime != null ">
			      <![CDATA[
			       	AND  TB_COUNT.INPUT_TIME >= #{startTime,jdbcType=TIMESTAMP} AND TB_COUNT.INPUT_TIME  < (#{endTime,jdbcType=TIMESTAMP} +   interval   '1'  day)
			       	]]>
			</when>
			<when test="endTime != null">
		      <![CDATA[
			      	AND  TB_COUNT.INPUT_TIME  < (#{endTime,jdbcType=TIMESTAMP} +   interval   '1'  day)
			   ]]>
			</when>
			<when test="startTime != null">
		      <![CDATA[
			      	AND  TB_COUNT.INPUT_TIME >= #{startTime,jdbcType=TIMESTAMP}
			  		]]>
			</when>
			</choose>
			<if test="caseNo!=null and caseNo!=''">
					AND TB_COUNT.CASE_NO LIKE CONCAT(CONCAT('%',#{caseNo,jdbcType=VARCHAR}),'%')
			</if>
			<if test="caseName!=null and caseName!=''">
				AND TB_COUNT.CASE_NAME LIKE CONCAT(CONCAT('%',#{caseName,jdbcType=VARCHAR}),'%')
			</if>
			<if test="districtId != null ">
				and TB_COUNT.district_code like #{districtId}||'%'
			</if>
			and (1 = 2 	
		 		 <if test="isDescuss!=null">
					or TB_COUNT.is_descuss=#{isDescuss}
				</if>
				<if test="chufaTimes!=null">
					<![CDATA[ or TB_COUNT.chufa_times > #{chufaTimes} ]]>
				</if>
				<if test="isSeriousCase!=null">
					or TB_COUNT.is_serious_case=#{isSeriousCase}
				</if>
				<if test="isBeyondEighty!=null">
					or TB_COUNT.is_beyond_eighty=#{isBeyondEighty}
				</if>
				<if test="isLowerLimitMoney!=null">
					or TB_COUNT.IS_LOWER_LIMIT_MONEY=#{isLowerLimitMoney}
				</if>
				<if test="isIdentify!=null and isIdentify==1">
					<![CDATA[or TB_COUNT.IDENTIFY_TYPE <6 ]]>
				</if>
				<if test="isIdentify!=null and isIdentify==0">
					<![CDATA[or TB_COUNT.IDENTIFY_TYPE =6 ]]>
				</if>)
			<if test="isDescussQ != null">
		      and TB_COUNT.IS_DESCUSS = #{isDescussQ}
		    </if>
		    <if test="chufaTimesQ != null">
		      <![CDATA[ and TB_COUNT.CHUFA_TIMES > #{chufaTimesQ} ]]>
		    </if>
		    <if test="isSeriousCaseQ !=null">
		      and TB_COUNT.is_serious_case=#{isSeriousCaseQ}
		    </if>
		    <if test="isBeyondEightyQ !=null">
		      and TB_COUNT.is_beyond_eighty=#{isBeyondEightyQ}
		    </if>
		    <if test="isLowerLimitMoneyQ !=null">
		      and TB_COUNT.IS_LOWER_LIMIT_MONEY=#{isLowerLimitMoneyQ}
		    </if>
		    <if test="isIdentifyQ !=null and isIdentifyQ ==1">
		      <![CDATA[and TB_COUNT.IDENTIFY_TYPE <6 ]]>
		    </if>
		    <if test="isIdentifyQ !=null and isIdentifyQ ==0">
		      <![CDATA[and TB_COUNT.IDENTIFY_TYPE =6 ]]>
		    </if>
			 <if test="yearCode !=null and yearCode !=''">
		            AND  TO_CHAR(TB_COUNT.INPUT_TIME,'yyyy')=${yearCode}
		      </if>
		      <if test="quarterCode !=null and quarterCode !=''">
		            AND TO_CHAR(TB_COUNT.INPUT_TIME,'Q')=${quarterCode}
		      </if>
		      <if test="monthCode !=null and monthCode !=''">
		            AND TO_CHAR(TB_COUNT.INPUT_TIME,'MM')=${monthCode}
		      </if>
		</where>
	</sql>
	
	<!-- ??????????????????????? -->
	<select id="queryCaseInputInfoForIndustry" parameterType="java.util.Map" resultType="java.util.Map">
    SELECT D.DISTRICT_CODE REGION_ID,D.DISTRICT_NAME NAME,NVL(T2.CNT,0) CNT,TO_CHAR(ROUND(NVL(T2.RATIO_PER,0),2),'FM990.00') RATIO_PER FROM 
    (
    SELECT SUBSTR(O.DISTRICT_CODE,1,RDUAL.REGION_LEN+2) REGION_SHORT_ID,RPAD(SUBSTR(O.DISTRICT_CODE,1,RDUAL.REGION_LEN+2),6,'0') REGION_ID,COUNT(1) CNT,(RATIO_TO_REPORT(COUNT(1)) OVER())*100 RATIO_PER 
    FROM CASE_BASIC CB,CASE_STATE CS,ORGANISE O,(SELECT ${regionId} REGION_ID,regexp_replace(${regionId},'(00)+$') SHORT_REGION,LENGTH(regexp_replace(${regionId},'(00)+$')) REGION_LEN FROM DUAL) RDUAL
    WHERE CB.CASE_ID=CS.CASE_ID AND CS.CHUFA_STATE=2 AND CB.INPUT_UNIT=O.ORG_CODE
    <if test="industryType!=null and industryType!=''">
        AND O.INDUSTRY_TYPE=#{industryType}
    </if>
    AND O.DISTRICT_CODE LIKE RDUAL.SHORT_REGION||'%'
    <if test="yearStr!=null and yearStr!=''">
        AND  TO_CHAR(CB.INPUT_TIME,'YYYY')=${yearStr}
    </if>
    <if test="quarterStr!=null and quarterStr!=''">
        AND TO_CHAR(CB.INPUT_TIME,'Q')=${quarterStr}
    </if>
    <if test="monthStr!=null and monthStr!=''">
        AND TO_CHAR(CB.INPUT_TIME,'MM')=${monthStr}
    </if>
    GROUP BY SUBSTR(O.DISTRICT_CODE,1,RDUAL.REGION_LEN+2) 
    ) T2,DISTRICT D WHERE D.DISTRICT_CODE=T2.REGION_ID(+)
    AND (D.UP_DISTRICT_CODE=${regionId} OR D.DISTRICT_CODE=${regionId})
    ORDER BY D.DISTRICT_CODE
	</select>
	
	
	<!-- ???????????????????????????????? -->
	<select id="queryCrimeCaseInfoForIndustry" parameterType="java.util.Map" resultType="java.util.Map">
	SELECT TB_FINAL.REGION_ID,TB_FINAL.NAME,TB_FINAL.CNT,
    DECODE(TB_FINAL.LAG_CNT,0,'---',TO_CHAR(ROUND(((TB_FINAL.CNT-TB_FINAL.LAG_CNT)*100/TB_FINAL.LAG_CNT),2),'FM999990.00')) YOY_CNT,
    TB_FINAL.ZJ_YS_CNT,
    DECODE(TB_FINAL.LAG_ZJ_YS_CNT,0,'---',TO_CHAR(ROUND(((TB_FINAL.ZJ_YS_CNT-TB_FINAL.LAG_ZJ_YS_CNT)*100/TB_FINAL.LAG_ZJ_YS_CNT),2),'FM999990.00')) YOY_ZJ_YS_CNT,
    TB_FINAL.JY_YS_CNT,
    DECODE(TB_FINAL.LAG_JY_YS_CNT,0,'---',TO_CHAR(ROUND(((TB_FINAL.JY_YS_CNT-TB_FINAL.LAG_JY_YS_CNT)*100/TB_FINAL.LAG_JY_YS_CNT),2),'FM999990.00')) YOY_JY_YS_CNT,
    TB_FINAL.ACCEPT_CNT,
    DECODE(TB_FINAL.LAG_ACCEPT_CNT,0,'---',TO_CHAR(ROUND(((TB_FINAL.ACCEPT_CNT-TB_FINAL.LAG_ACCEPT_CNT)*100/TB_FINAL.LAG_ACCEPT_CNT),2),'FM999990.00')) YOY_ACCEPT_CNT,
    TB_FINAL.LIAN_CNT,
    DECODE(TB_FINAL.LAG_LIAN_CNT,0,'---',TO_CHAR(ROUND(((TB_FINAL.LIAN_CNT-TB_FINAL.LAG_LIAN_CNT)*100/TB_FINAL.LAG_LIAN_CNT),2),'FM999990.00')) YOY_LIAN_CNT,
    TB_FINAL.TQDB_CNT,
    DECODE(TB_FINAL.LAG_TQDB_CNT,0,'---',TO_CHAR(ROUND(((TB_FINAL.TQDB_CNT-TB_FINAL.LAG_TQDB_CNT)*100/TB_FINAL.LAG_TQDB_CNT),2),'FM999990.00')) YOY_TQDB_CNT,
    TB_FINAL.QISU_CNT,
    DECODE(TB_FINAL.LAG_QISU_CNT,0,'---',TO_CHAR(ROUND(((TB_FINAL.QISU_CNT-TB_FINAL.LAG_QISU_CNT)*100/TB_FINAL.LAG_QISU_CNT),2),'FM999990.00')) YOY_QISU_CNT,
    TB_FINAL.PANJUE_CNT,
    DECODE(TB_FINAL.LAG_PANJUE_CNT,0,'---',TO_CHAR(ROUND(((TB_FINAL.PANJUE_CNT-TB_FINAL.LAG_PANJUE_CNT)*100/TB_FINAL.LAG_PANJUE_CNT),2),'FM999990.00')) YOY_PANJUE_CNT
     FROM
    (
      SELECT TB_ALL.REGION_ID,TB_ALL.NAME,TB_ALL.YEAR_STR,
      NVL(TB_COUNT.CNT,0) CNT,
      NVL(LAG(TB_COUNT.CNT,1) OVER(ORDER BY TB_ALL.REGION_ID,TB_ALL.YEAR_STR),0) LAG_CNT,
      NVL(TB_COUNT.ZJ_YS_CNT,0) ZJ_YS_CNT,
      NVL(LAG(TB_COUNT.ZJ_YS_CNT,1) OVER(ORDER BY TB_ALL.REGION_ID,TB_ALL.YEAR_STR),0) LAG_ZJ_YS_CNT,
      NVL(TB_COUNT.JY_YS_CNT,0) JY_YS_CNT,
      NVL(LAG(TB_COUNT.JY_YS_CNT,1) OVER(ORDER BY TB_ALL.REGION_ID,TB_ALL.YEAR_STR),0) LAG_JY_YS_CNT,
      NVL(TB_COUNT.ACCEPT_CNT,0) ACCEPT_CNT,
      NVL(LAG(TB_COUNT.ACCEPT_CNT,1) OVER(ORDER BY TB_ALL.REGION_ID,TB_ALL.YEAR_STR),0) LAG_ACCEPT_CNT,
      NVL(TB_COUNT.LIAN_CNT,0) LIAN_CNT,
      NVL(LAG(TB_COUNT.LIAN_CNT,1) OVER(ORDER BY TB_ALL.REGION_ID,TB_ALL.YEAR_STR),0) LAG_LIAN_CNT,
      NVL(TB_COUNT.TQDB_CNT,0) TQDB_CNT,
      NVL(LAG(TB_COUNT.TQDB_CNT,1) OVER(ORDER BY TB_ALL.REGION_ID,TB_ALL.YEAR_STR),0) LAG_TQDB_CNT,
      NVL(TB_COUNT.QISU_CNT,0) QISU_CNT,
      NVL(LAG(TB_COUNT.QISU_CNT,1) OVER(ORDER BY TB_ALL.REGION_ID,TB_ALL.YEAR_STR),0) LAG_QISU_CNT,
      NVL(TB_COUNT.PANJUE_CNT,0) PANJUE_CNT,
      NVL(LAG(TB_COUNT.PANJUE_CNT,1) OVER(ORDER BY TB_ALL.REGION_ID,TB_ALL.YEAR_STR),0) LAG_PANJUE_CNT
       FROM
      (
        SELECT T_REGION.REGION_ID,T_REGION.NAME,T_YEAR.YEAR_STR  FROM
        (SELECT D.DISTRICT_CODE REGION_ID,D.DISTRICT_NAME NAME FROM DISTRICT D WHERE D.UP_DISTRICT_CODE=${regionId}) T_REGION,
        (SELECT ${yearStr}-2+LEVEL YEAR_STR FROM DUAL CONNECT BY LEVEL&lt;3) T_YEAR
        ORDER BY REGION_ID,YEAR_STR
      ) TB_ALL,
      (
        SELECT 
        RPAD(SUBSTR(O.DISTRICT_CODE,1,RDUAL.REGION_LEN+2),6,0) REGION_ID,
        TO_CHAR(CB.INPUT_TIME,'YYYY') YEAR_STR,
        SUM(CASE WHEN CB.YISONG_STATE=2 THEN 1 ELSE 0 END) ZJ_YS_CNT,
        SUM(CASE WHEN CB.YISONG_STATE=3 THEN 1 ELSE 0 END) JY_YS_CNT,
        SUM(CASE WHEN CB.YISONG_STATE=2 OR CB.YISONG_STATE=3 THEN 1 ELSE 0 END) ACCEPT_CNT,
        SUM(CASE WHEN CB.LIAN_STATE=3 THEN 1 ELSE 0 END) LIAN_CNT,
        SUM(CASE WHEN CB.TIQINGDAIBUPERSON_NUM&gt;0 THEN 1 ELSE 0 END) TQDB_CNT,
        SUM(CASE WHEN CB.TIQINGQISUPERSON_NUM&gt;0 THEN 1 ELSE 0 END) QISU_CNT,
        SUM(CASE WHEN CB.PANJUE_STATE=2 THEN 1 ELSE 0 END) PANJUE_CNT, 
        COUNT(1) CNT
        FROM (select C.CASE_ID,C.INPUT_UNIT,C.INPUT_TIME,C.YISONG_STATE,C.LIAN_STATE,C.DAIBU_STATE,C.QISU_STATE,C.PANJUE_STATE,
         X.TIQINGDAIBUPERSON_NUM,X.TIQINGQISUPERSON_NUM
        from 
        (SELECT A.CASE_ID,A.INPUT_UNIT,A.INPUT_TIME,CS.YISONG_STATE,CS.LIAN_STATE,CS.DAIBU_STATE,CS.QISU_STATE,CS.PANJUE_STATE
        FROM CASE_BASIC A,CASE_STATE CS WHERE A.CASE_ID=CS.CASE_ID) c 
        left join 
        (SELECT CASE_ID,
    	NVL(SUM(CASE WHEN (DAIBU_STATE = 2 OR DAIBU_STATE = 3) THEN 1 ELSE 0 END),0) AS TIQINGDAIBUPERSON_NUM,
    	NVL(SUM(CASE WHEN TIQINGQISU_STATE = 2 THEN 1 ELSE 0 END),0) AS TIQINGQISUPERSON_NUM
    	FROM CASE_XIANYIREN
    	GROUP BY CASE_ID) x
        on c.case_id=x.case_id) CB,
        ORGANISE O,
        (SELECT ${regionId} REGION_ID,regexp_replace(${regionId},'(00)+$') SHORT_REGION,LENGTH(regexp_replace(${regionId},'(00)+$')) REGION_LEN FROM DUAL) RDUAL
         where CB.INPUT_UNIT=O.ORG_CODE
         AND O.DISTRICT_CODE LIKE RDUAL.SHORT_REGION||'%'
    <if test="industryType!=null and industryType!=''">
        AND O.INDUSTRY_TYPE=#{industryType}
    </if>
    AND O.DISTRICT_CODE LIKE RDUAL.SHORT_REGION||'%'
    <if test="yearStr!=null and yearStr!=''">
        AND  (TO_CHAR(CB.INPUT_TIME,'YYYY')=${yearStr} OR TO_CHAR(CB.INPUT_TIME,'YYYY')=${yearStr}-1)
    </if>
    <if test="quarterStr!=null and quarterStr!=''">
        AND TO_CHAR(CB.INPUT_TIME,'Q')=${quarterStr}
    </if>
    <if test="monthStr!=null and monthStr!=''">
        AND TO_CHAR(CB.INPUT_TIME,'MM')=${monthStr}
    </if>
        GROUP BY SUBSTR(O.DISTRICT_CODE,1,RDUAL.REGION_LEN+2),TO_CHAR(CB.INPUT_TIME,'YYYY')
      ) TB_COUNT
    WHERE TB_ALL.REGION_ID=TB_COUNT.REGION_ID(+) AND TB_ALL.YEAR_STR=TB_COUNT.YEAR_STR(+)
    ORDER BY REGION_ID,YEAR_STR
    ) TB_FINAL
    WHERE TB_FINAL.YEAR_STR=${yearStr}
	</select>
	
	<!-- ????????????????????????? -->
	<select id="queryAllCrimeCaseDealStatis" parameterType="java.util.Map" resultType="java.util.Map">
   SELECT TB_FINAL.CNT,
    DECODE(TB_FINAL.LAG_CNT,0,'---',TO_CHAR(ROUND(((TB_FINAL.CNT-TB_FINAL.LAG_CNT)*100/TB_FINAL.LAG_CNT),2),'FM999990.00')) YOY_CNT,
    TB_FINAL.ZJ_YS_CNT,
    DECODE(TB_FINAL.LAG_ZJ_YS_CNT,0,'---',TO_CHAR(ROUND(((TB_FINAL.ZJ_YS_CNT-TB_FINAL.LAG_ZJ_YS_CNT)*100/TB_FINAL.LAG_ZJ_YS_CNT),2),'FM999990.00')) YOY_ZJ_YS_CNT,
    TB_FINAL.JY_YS_CNT,
    DECODE(TB_FINAL.LAG_JY_YS_CNT,0,'---',TO_CHAR(ROUND(((TB_FINAL.JY_YS_CNT-TB_FINAL.LAG_JY_YS_CNT)*100/TB_FINAL.LAG_JY_YS_CNT),2),'FM999990.00')) YOY_JY_YS_CNT,
    TB_FINAL.ACCEPT_CNT,
    DECODE(TB_FINAL.LAG_ACCEPT_CNT,0,'---',TO_CHAR(ROUND(((TB_FINAL.ACCEPT_CNT-TB_FINAL.LAG_ACCEPT_CNT)*100/TB_FINAL.LAG_ACCEPT_CNT),2),'FM999990.00')) YOY_ACCEPT_CNT,
    TB_FINAL.LIAN_CNT,
    DECODE(TB_FINAL.LAG_LIAN_CNT,0,'---',TO_CHAR(ROUND(((TB_FINAL.LIAN_CNT-TB_FINAL.LAG_LIAN_CNT)*100/TB_FINAL.LAG_LIAN_CNT),2),'FM999990.00')) YOY_LIAN_CNT,
    TB_FINAL.TQDB_CNT,
    DECODE(TB_FINAL.LAG_TQDB_CNT,0,'---',TO_CHAR(ROUND(((TB_FINAL.TQDB_CNT-TB_FINAL.LAG_TQDB_CNT)*100/TB_FINAL.LAG_TQDB_CNT),2),'FM999990.00')) YOY_TQDB_CNT,
    TB_FINAL.QISU_CNT,
    DECODE(TB_FINAL.LAG_QISU_CNT,0,'---',TO_CHAR(ROUND(((TB_FINAL.QISU_CNT-TB_FINAL.LAG_QISU_CNT)*100/TB_FINAL.LAG_QISU_CNT),2),'FM999990.00')) YOY_QISU_CNT,
    TB_FINAL.PANJUE_CNT,
    DECODE(TB_FINAL.LAG_PANJUE_CNT,0,'---',TO_CHAR(ROUND(((TB_FINAL.PANJUE_CNT-TB_FINAL.LAG_PANJUE_CNT)*100/TB_FINAL.LAG_PANJUE_CNT),2),'FM999990.00')) YOY_PANJUE_CNT
     FROM
    (
      SELECT TB_COUNT.year_str,
      NVL(TB_COUNT.CNT,0) CNT,
      NVL(LAG(TB_COUNT.CNT,1) OVER(ORDER BY TB_COUNT.YEAR_STR),0) LAG_CNT,
      NVL(TB_COUNT.ZJ_YS_CNT,0) ZJ_YS_CNT,
      NVL(LAG(TB_COUNT.ZJ_YS_CNT,1) OVER(ORDER BY TB_COUNT.YEAR_STR),0) LAG_ZJ_YS_CNT,
      NVL(TB_COUNT.JY_YS_CNT,0) JY_YS_CNT,
      NVL(LAG(TB_COUNT.JY_YS_CNT,1) OVER(ORDER BY TB_COUNT.YEAR_STR),0) LAG_JY_YS_CNT,
      NVL(TB_COUNT.ACCEPT_CNT,0) ACCEPT_CNT,
      NVL(LAG(TB_COUNT.ACCEPT_CNT,1) OVER(ORDER BY TB_COUNT.YEAR_STR),0) LAG_ACCEPT_CNT,
      NVL(TB_COUNT.LIAN_CNT,0) LIAN_CNT,
      NVL(LAG(TB_COUNT.LIAN_CNT,1) OVER(ORDER BY TB_COUNT.YEAR_STR),0) LAG_LIAN_CNT,
      NVL(TB_COUNT.TQDB_CNT,0) TQDB_CNT,
      NVL(LAG(TB_COUNT.TQDB_CNT,1) OVER(ORDER BY TB_COUNT.YEAR_STR),0) LAG_TQDB_CNT,
      NVL(TB_COUNT.QISU_CNT,0) QISU_CNT,
      NVL(LAG(TB_COUNT.QISU_CNT,1) OVER(ORDER BY TB_COUNT.YEAR_STR),0) LAG_QISU_CNT,
      NVL(TB_COUNT.PANJUE_CNT,0) PANJUE_CNT,
      NVL(LAG(TB_COUNT.PANJUE_CNT,1) OVER(ORDER BY TB_COUNT.YEAR_STR),0) LAG_PANJUE_CNT
       FROM
      (
        SELECT 
        TO_CHAR(CB.INPUT_TIME,'YYYY') YEAR_STR,
        SUM(CASE WHEN CB.YISONG_STATE=2 THEN 1 ELSE 0 END) ZJ_YS_CNT,
        SUM(CASE WHEN CB.YISONG_STATE=3 THEN 1 ELSE 0 END) JY_YS_CNT,
        SUM(CASE WHEN CB.YISONG_STATE=2 OR CB.YISONG_STATE=3 THEN 1 ELSE 0 END) ACCEPT_CNT,
        SUM(CASE WHEN CB.LIAN_STATE=3 THEN 1 ELSE 0 END) LIAN_CNT,
        SUM(CASE WHEN CB.TIQINGDAIBUPERSON_NUM&gt;0 THEN 1 ELSE 0 END) TQDB_CNT,
        SUM(CASE WHEN CB.TIQINGQISUPERSON_NUM&gt;0 THEN 1 ELSE 0 END) QISU_CNT,
        SUM(CASE WHEN CB.PANJUE_STATE=2 THEN 1 ELSE 0 END) PANJUE_CNT, 
        COUNT(1) CNT
        FROM 
        (select C.CASE_ID,C.INPUT_UNIT,C.INPUT_TIME,C.YISONG_STATE,C.LIAN_STATE,C.DAIBU_STATE,C.QISU_STATE,C.PANJUE_STATE,
         X.TIQINGDAIBUPERSON_NUM,X.TIQINGQISUPERSON_NUM
        from 
        (SELECT A.CASE_ID,A.INPUT_UNIT,A.INPUT_TIME,CS.YISONG_STATE,CS.LIAN_STATE,CS.DAIBU_STATE,CS.QISU_STATE,CS.PANJUE_STATE
        FROM CASE_BASIC A,CASE_STATE CS WHERE A.CASE_ID=CS.CASE_ID) c 
        left join 
        (SELECT CASE_ID,
    	NVL(SUM(CASE WHEN (DAIBU_STATE = 2 OR DAIBU_STATE = 3) THEN 1 ELSE 0 END),0) AS TIQINGDAIBUPERSON_NUM,
    	NVL(SUM(CASE WHEN TIQINGQISU_STATE = 2 THEN 1 ELSE 0 END),0) AS TIQINGQISUPERSON_NUM
    	FROM CASE_XIANYIREN
    	GROUP BY CASE_ID) x
        on c.case_id=x.case_id) CB,
        ORGANISE O
         where CB.INPUT_UNIT=O.ORG_CODE
    <if test="regionId!=null and regionId!=''">
        AND O.DISTRICT_CODE LIKE regexp_replace(${regionId},'(00)+$')||'%'
    </if>
    <if test="yearStr!=null and yearStr!=''">
        AND (TO_CHAR(CB.input_time,'yyyy')=${yearStr}-1 OR TO_CHAR(CB.input_time,'yyyy')=${yearStr})
    </if>
    <if test="quarterStr!=null and quarterStr!=''">
        AND TO_CHAR(CB.INPUT_TIME,'Q')=${quarterStr}
    </if>
    <if test="monthStr!=null and monthStr!=''">
        AND TO_CHAR(CB.INPUT_TIME,'MM')=${monthStr}
    </if>
    <if test="industryType!=null and industryType!=''">
        AND O.INDUSTRY_TYPE = #{industryType}
    </if>
    GROUP BY TO_CHAR(CB.INPUT_TIME,'YYYY')
      ) TB_COUNT
      ORDER BY YEAR_STR
    ) TB_FINAL
   WHERE TB_FINAL.YEAR_STR=${yearStr}
	</select>  
	
	<!-- ?????????????????????????? -->
	<select id="queryXzcfInputRatioPerRegion" parameterType="java.util.Map" resultType="java.util.Map">
    SELECT D.DISTRICT_CODE REGION_ID,D.DISTRICT_NAME NAME,NVL(T2.CNT,0) CNT,TO_CHAR(ROUND(NVL(T2.RATIO_PER,0),2),'FM990.00') RATIO_PER FROM 
    (
    SELECT SUBSTR(O.DISTRICT_CODE,1,RDUAL.REGION_LEN+2) REGION_SHORT_ID,RPAD(SUBSTR(O.DISTRICT_CODE,1,RDUAL.REGION_LEN+2),6,'0') REGION_ID,COUNT(1) CNT,(RATIO_TO_REPORT(COUNT(1)) OVER())*100 RATIO_PER 
    FROM CASE_BASIC CB,CASE_STATE CS,ORGANISE O,(SELECT ${regionId} REGION_ID,regexp_replace(${regionId},'(00)+$') SHORT_REGION,LENGTH(regexp_replace(${regionId},'(00)+$')) REGION_LEN FROM DUAL) RDUAL
    WHERE CS.CASE_ID=CB.CASE_ID AND CB.INPUT_UNIT=O.ORG_CODE AND CS.CHUFA_STATE=2 AND O.ORG_TYPE IN (1,3)
    AND O.DISTRICT_CODE LIKE RDUAL.SHORT_REGION||'%'
    <if test="yearStr!=null and yearStr!=''">
        AND  TO_CHAR(CB.INPUT_TIME,'YYYY')=${yearStr} 
    </if>
    <if test="quarterStr!=null and quarterStr!=''">
        AND TO_CHAR(CB.INPUT_TIME,'Q')=${quarterStr}
    </if>
    <if test="monthStr!=null and monthStr!=''">
        AND TO_CHAR(CB.INPUT_TIME,'MM')=${monthStr}
    </if>
    GROUP BY SUBSTR(O.DISTRICT_CODE,1,RDUAL.REGION_LEN+2) 
    ) T2,DISTRICT D WHERE D.DISTRICT_CODE=T2.REGION_ID(+)
    AND (D.UP_DISTRICT_CODE=${regionId} OR D.DISTRICT_CODE=${regionId})
    ORDER BY D.DISTRICT_CODE
	</select> 
	
	<!-- ????????????????????????? -->
	<select id="queryXzcfInputRatioPerIndustry" parameterType="java.util.Map" resultType="java.util.Map">
	SELECT TB_ALL.INDUSTRY_ID,TB_ALL.INDUSTRY_NAME,NVL(TB_CNT.CNT,0) CNT,NVL(TB_CNT.RATIO_PER,'0.00') RATIO_PER FROM
	(
	  SELECT O.INDUSTRY_TYPE INDUSTRY_ID,O.INDUSTRY_NAME FROM ORGANISE O WHERE O.INDUSTRY_NAME IS NOT NULL GROUP BY O.INDUSTRY_TYPE,O.INDUSTRY_NAME
	) TB_ALL,
	(
		SELECT O.INDUSTRY_TYPE INDUSTRY_ID,O.INDUSTRY_NAME,COUNT(1) CNT,TO_CHAR(ROUND(((RATIO_TO_REPORT(COUNT(1)) OVER())*100),2),'FM990.00') RATIO_PER  
		FROM CASE_BASIC CB,CASE_STATE CS,ORGANISE O,(SELECT ${regionId} REGION_ID,regexp_replace(${regionId},'(00)+$') SHORT_REGION,LENGTH(regexp_replace(${regionId},'(00)+$')) REGION_LEN FROM DUAL) RDUAL
		WHERE CB.CASE_ID=CS.CASE_ID AND CB.INPUT_UNIT=O.ORG_CODE AND CS.CHUFA_STATE=2 AND O.INDUSTRY_NAME IS NOT NULL
		AND O.DISTRICT_CODE LIKE RDUAL.SHORT_REGION||'%'
		<if test="yearStr!=null and yearStr!=''">
				AND  TO_CHAR(CB.INPUT_TIME,'YYYY')=${yearStr} 
		</if>
		<if test="quarterStr!=null and quarterStr!=''">
				AND TO_CHAR(CB.INPUT_TIME,'Q')=${quarterStr}
		</if>
		<if test="monthStr!=null and monthStr!=''">
				AND TO_CHAR(CB.INPUT_TIME,'MM')=${monthStr}
		</if>
		GROUP BY O.INDUSTRY_TYPE,O.INDUSTRY_NAME ORDER BY O.INDUSTRY_TYPE
	) TB_CNT
	WHERE TB_ALL.INDUSTRY_ID=TB_CNT.INDUSTRY_ID(+) AND TB_ALL.INDUSTRY_NAME=TB_CNT.INDUSTRY_NAME(+)
	ORDER BY TB_ALL.INDUSTRY_ID
	</select>
	
	<!-- ???????????????????????????? -->
	<select id="queryCrimeCaseDealStatis" parameterType="java.util.Map" resultType="java.util.Map">
	SELECT TB_FINAL.REGION_ID,TB_FINAL.NAME,TB_FINAL.CNT,
	DECODE(TB_FINAL.LAG_CNT,0,'---',TO_CHAR(ROUND(((TB_FINAL.CNT-TB_FINAL.LAG_CNT)*100/TB_FINAL.LAG_CNT),2),'FM999990.00')) YOY_CNT,
	TB_FINAL.ZJ_YS_CNT,
	DECODE(TB_FINAL.LAG_ZJ_YS_CNT,0,'---',TO_CHAR(ROUND(((TB_FINAL.ZJ_YS_CNT-TB_FINAL.LAG_ZJ_YS_CNT)*100/TB_FINAL.LAG_ZJ_YS_CNT),2),'FM999990.00')) YOY_ZJ_YS_CNT,
	TB_FINAL.JY_YS_CNT,
	DECODE(TB_FINAL.LAG_JY_YS_CNT,0,'---',TO_CHAR(ROUND(((TB_FINAL.JY_YS_CNT-TB_FINAL.LAG_JY_YS_CNT)*100/TB_FINAL.LAG_JY_YS_CNT),2),'FM999990.00')) YOY_JY_YS_CNT,
	TB_FINAL.ACCEPT_CNT,
	DECODE(TB_FINAL.LAG_ACCEPT_CNT,0,'---',TO_CHAR(ROUND(((TB_FINAL.ACCEPT_CNT-TB_FINAL.LAG_ACCEPT_CNT)*100/TB_FINAL.LAG_ACCEPT_CNT),2),'FM999990.00')) YOY_ACCEPT_CNT,
    TB_FINAL.LIAN_CNT,
    DECODE(TB_FINAL.LAG_LIAN_CNT,0,'---',TO_CHAR(ROUND(((TB_FINAL.LIAN_CNT-TB_FINAL.LAG_LIAN_CNT)*100/TB_FINAL.LAG_LIAN_CNT),2),'FM999990.00')) YOY_LIAN_CNT,
    TB_FINAL.TQDB_CNT,
    DECODE(TB_FINAL.LAG_TQDB_CNT,0,'---',TO_CHAR(ROUND(((TB_FINAL.TQDB_CNT-TB_FINAL.LAG_TQDB_CNT)*100/TB_FINAL.LAG_TQDB_CNT),2),'FM999990.00')) YOY_TQDB_CNT,
    TB_FINAL.QISU_CNT,
    DECODE(TB_FINAL.LAG_QISU_CNT,0,'---',TO_CHAR(ROUND(((TB_FINAL.QISU_CNT-TB_FINAL.LAG_QISU_CNT)*100/TB_FINAL.LAG_QISU_CNT),2),'FM999990.00')) YOY_QISU_CNT,
    TB_FINAL.PANJUE_CNT,
    DECODE(TB_FINAL.LAG_PANJUE_CNT,0,'---',TO_CHAR(ROUND(((TB_FINAL.PANJUE_CNT-TB_FINAL.LAG_PANJUE_CNT)*100/TB_FINAL.LAG_PANJUE_CNT),2),'FM999990.00')) YOY_PANJUE_CNT
     FROM
    (
      SELECT TB_ALL.REGION_ID,TB_ALL.NAME,TB_ALL.YEAR_STR,
      NVL(TB_COUNT.CNT,0) CNT,
      NVL(LAG(TB_COUNT.CNT,1) OVER(ORDER BY TB_ALL.REGION_ID,TB_ALL.YEAR_STR),0) LAG_CNT,
      NVL(TB_COUNT.ZJ_YS_CNT,0) ZJ_YS_CNT,
      NVL(LAG(TB_COUNT.ZJ_YS_CNT,1) OVER(ORDER BY TB_ALL.REGION_ID,TB_ALL.YEAR_STR),0) LAG_ZJ_YS_CNT,
      NVL(TB_COUNT.JY_YS_CNT,0) JY_YS_CNT,
      NVL(LAG(TB_COUNT.JY_YS_CNT,1) OVER(ORDER BY TB_ALL.REGION_ID,TB_ALL.YEAR_STR),0) LAG_JY_YS_CNT,
      NVL(TB_COUNT.ACCEPT_CNT,0) ACCEPT_CNT,
      NVL(LAG(TB_COUNT.ACCEPT_CNT,1) OVER(ORDER BY TB_ALL.REGION_ID,TB_ALL.YEAR_STR),0) LAG_ACCEPT_CNT,
      NVL(TB_COUNT.LIAN_CNT,0) LIAN_CNT,
      NVL(LAG(TB_COUNT.LIAN_CNT,1) OVER(ORDER BY TB_ALL.REGION_ID,TB_ALL.YEAR_STR),0) LAG_LIAN_CNT,
      NVL(TB_COUNT.TQDB_CNT,0) TQDB_CNT,
      NVL(LAG(TB_COUNT.TQDB_CNT,1) OVER(ORDER BY TB_ALL.REGION_ID,TB_ALL.YEAR_STR),0) LAG_TQDB_CNT,
      NVL(TB_COUNT.QISU_CNT,0) QISU_CNT,
      NVL(LAG(TB_COUNT.QISU_CNT,1) OVER(ORDER BY TB_ALL.REGION_ID,TB_ALL.YEAR_STR),0) LAG_QISU_CNT,
      NVL(TB_COUNT.PANJUE_CNT,0) PANJUE_CNT,
      NVL(LAG(TB_COUNT.PANJUE_CNT,1) OVER(ORDER BY TB_ALL.REGION_ID,TB_ALL.YEAR_STR),0) LAG_PANJUE_CNT
       FROM
      (
        SELECT T_REGION.REGION_ID,T_REGION.NAME,T_YEAR.YEAR_STR  FROM
        (SELECT R.DISTRICT_CODE REGION_ID,R.DISTRICT_NAME NAME FROM DISTRICT R WHERE R.UP_DISTRICT_CODE=${regionId} or R.DISTRICT_CODE=${regionId}) T_REGION,
        (SELECT ${yearStr}-2+LEVEL YEAR_STR FROM DUAL CONNECT BY LEVEL&lt;3) T_YEAR
        ORDER BY REGION_ID,YEAR_STR
      ) TB_ALL,
      (
        SELECT 
        RPAD(SUBSTR(O.DISTRICT_CODE,1,RDUAL.REGION_LEN+2),6,0) REGION_ID,
        TO_CHAR(CB.INPUT_TIME,'YYYY') YEAR_STR,
        SUM(CASE WHEN CB.YISONG_STATE=2 THEN 1 ELSE 0 END) ZJ_YS_CNT,
        SUM(CASE WHEN CB.YISONG_STATE=3 THEN 1 ELSE 0 END) JY_YS_CNT,
        SUM(CASE WHEN CB.YISONG_STATE=2 OR CB.YISONG_STATE=3 THEN 1 ELSE 0 END) ACCEPT_CNT,
        SUM(CASE WHEN CB.LIAN_STATE=3 THEN 1 ELSE 0 END) LIAN_CNT,
        SUM(CASE WHEN CB.TIQINGDAIBUPERSON_NUM&gt;0 THEN 1 ELSE 0 END) TQDB_CNT,
        SUM(CASE WHEN CB.TIQINGQISUPERSON_NUM&gt;0 THEN 1 ELSE 0 END) QISU_CNT,
        SUM(CASE WHEN CB.PANJUE_STATE=2 THEN 1 ELSE 0 END) PANJUE_CNT, 
        COUNT(1) CNT
        FROM 
        (select C.CASE_ID,C.INPUT_UNIT,C.INPUT_TIME,C.YISONG_STATE,C.LIAN_STATE,C.DAIBU_STATE,C.QISU_STATE,C.PANJUE_STATE,
         X.TIQINGDAIBUPERSON_NUM,X.TIQINGQISUPERSON_NUM
        from 
        (SELECT A.CASE_ID,A.INPUT_UNIT,A.INPUT_TIME,CS.YISONG_STATE,CS.LIAN_STATE,CS.DAIBU_STATE,CS.QISU_STATE,CS.PANJUE_STATE
        FROM CASE_BASIC A,CASE_STATE CS WHERE A.CASE_ID=CS.CASE_ID) c 
        left join 
        (SELECT CASE_ID,
    	NVL(SUM(CASE WHEN (DAIBU_STATE = 2 OR DAIBU_STATE = 3) THEN 1 ELSE 0 END),0) AS TIQINGDAIBUPERSON_NUM,
    	NVL(SUM(CASE WHEN TIQINGQISU_STATE = 2 THEN 1 ELSE 0 END),0) AS TIQINGQISUPERSON_NUM
    	FROM CASE_XIANYIREN
    	GROUP BY CASE_ID) x
        on c.case_id=x.case_id) CB,
        ORGANISE O,
        (SELECT ${regionId} REGION_ID,regexp_replace(${regionId},'(00)+$') SHORT_REGION,LENGTH(regexp_replace(${regionId},'(00)+$')) REGION_LEN FROM DUAL) RDUAL
         where CB.INPUT_UNIT=O.ORG_CODE
        AND O.DISTRICT_CODE LIKE RDUAL.SHORT_REGION||'%'
        <if test="yearStr!=null and yearStr!=''">
                AND (TO_CHAR(CB.INPUT_TIME,'yyyy')=${yearStr}-1 OR TO_CHAR(CB.INPUT_TIME,'yyyy')=${yearStr})
        </if>
        <if test="quarterStr!=null and quarterStr!=''">
                AND TO_CHAR(CB.INPUT_TIME,'Q')=${quarterStr}
        </if>
        <if test="monthStr!=null and monthStr!=''">
                AND TO_CHAR(CB.INPUT_TIME,'MM')=${monthStr}
        </if>
        GROUP BY SUBSTR(O.DISTRICT_CODE,1,RDUAL.REGION_LEN+2),TO_CHAR(CB.INPUT_TIME,'YYYY')
      ) TB_COUNT
    WHERE TB_ALL.REGION_ID=TB_COUNT.REGION_ID(+) AND TB_ALL.YEAR_STR=TB_COUNT.YEAR_STR(+)
    ORDER BY REGION_ID,YEAR_STR
    ) TB_FINAL
    WHERE TB_FINAL.YEAR_STR=${yearStr}
	</select>
	
	<!-- ??????????????????????????? -->
	<select id="queryCrimeCaseDealStatisByIndustry" parameterType="java.util.Map" resultType="java.util.Map">
    SELECT TB_FINAL.INDUSTRY_ID,TB_FINAL.INDUSTRY_NAME,TB_FINAL.CNT,
    DECODE(TB_FINAL.LAG_CNT,0,'---',TO_CHAR(ROUND(((TB_FINAL.CNT-TB_FINAL.LAG_CNT)*100/TB_FINAL.LAG_CNT),2),'FM999990.00')) YOY_CNT,
    TB_FINAL.ZJ_YS_CNT,
    DECODE(TB_FINAL.LAG_ZJ_YS_CNT,0,'---',TO_CHAR(ROUND(((TB_FINAL.ZJ_YS_CNT-TB_FINAL.LAG_ZJ_YS_CNT)*100/TB_FINAL.LAG_ZJ_YS_CNT),2),'FM999990.00')) YOY_ZJ_YS_CNT,
    TB_FINAL.JY_YS_CNT,
    DECODE(TB_FINAL.LAG_JY_YS_CNT,0,'---',TO_CHAR(ROUND(((TB_FINAL.JY_YS_CNT-TB_FINAL.LAG_JY_YS_CNT)*100/TB_FINAL.LAG_JY_YS_CNT),2),'FM999990.00')) YOY_JY_YS_CNT,
    TB_FINAL.ACCEPT_CNT,
    DECODE(TB_FINAL.LAG_ACCEPT_CNT,0,'---',TO_CHAR(ROUND(((TB_FINAL.ACCEPT_CNT-TB_FINAL.LAG_ACCEPT_CNT)*100/TB_FINAL.LAG_ACCEPT_CNT),2),'FM999990.00')) YOY_ACCEPT_CNT,
    TB_FINAL.LIAN_CNT,
    DECODE(TB_FINAL.LAG_LIAN_CNT,0,'---',TO_CHAR(ROUND(((TB_FINAL.LIAN_CNT-TB_FINAL.LAG_LIAN_CNT)*100/TB_FINAL.LAG_LIAN_CNT),2),'FM999990.00')) YOY_LIAN_CNT,
    TB_FINAL.TQDB_CNT,
    DECODE(TB_FINAL.LAG_TQDB_CNT,0,'---',TO_CHAR(ROUND(((TB_FINAL.TQDB_CNT-TB_FINAL.LAG_TQDB_CNT)*100/TB_FINAL.LAG_TQDB_CNT),2),'FM999990.00')) YOY_TQDB_CNT,
    TB_FINAL.QISU_CNT,
    DECODE(TB_FINAL.LAG_QISU_CNT,0,'---',TO_CHAR(ROUND(((TB_FINAL.QISU_CNT-TB_FINAL.LAG_QISU_CNT)*100/TB_FINAL.LAG_QISU_CNT),2),'FM999990.00')) YOY_QISU_CNT,
    TB_FINAL.PANJUE_CNT,
    DECODE(TB_FINAL.LAG_PANJUE_CNT,0,'---',TO_CHAR(ROUND(((TB_FINAL.PANJUE_CNT-TB_FINAL.LAG_PANJUE_CNT)*100/TB_FINAL.LAG_PANJUE_CNT),2),'FM999990.00')) YOY_PANJUE_CNT
     FROM
    (
      SELECT TB_ALL.INDUSTRY_ID,TB_ALL.INDUSTRY_NAME,TB_ALL.YEAR_STR,
      NVL(TB_COUNT.CNT,0) CNT,
      NVL(LAG(TB_COUNT.CNT,1) OVER(ORDER BY TB_COUNT.INDUSTRY_ID,TB_COUNT.INDUSTRY_NAME,TB_ALL.YEAR_STR),0) LAG_CNT,
      NVL(TB_COUNT.ZJ_YS_CNT,0) ZJ_YS_CNT,
      NVL(LAG(TB_COUNT.ZJ_YS_CNT,1) OVER(ORDER BY TB_COUNT.INDUSTRY_ID,TB_COUNT.INDUSTRY_NAME,TB_ALL.YEAR_STR),0) LAG_ZJ_YS_CNT,
      NVL(TB_COUNT.JY_YS_CNT,0) JY_YS_CNT,
      NVL(LAG(TB_COUNT.JY_YS_CNT,1) OVER(ORDER BY TB_COUNT.INDUSTRY_ID,TB_COUNT.INDUSTRY_NAME,TB_ALL.YEAR_STR),0) LAG_JY_YS_CNT,
      NVL(TB_COUNT.ACCEPT_CNT,0) ACCEPT_CNT,
      NVL(LAG(TB_COUNT.ACCEPT_CNT,1) OVER(ORDER BY TB_COUNT.INDUSTRY_ID,TB_COUNT.INDUSTRY_NAME,TB_ALL.YEAR_STR),0) LAG_ACCEPT_CNT,
      NVL(TB_COUNT.LIAN_CNT,0) LIAN_CNT,
      NVL(LAG(TB_COUNT.LIAN_CNT,1) OVER(ORDER BY TB_COUNT.INDUSTRY_ID,TB_COUNT.INDUSTRY_NAME,TB_ALL.YEAR_STR),0) LAG_LIAN_CNT,
      NVL(TB_COUNT.TQDB_CNT,0) TQDB_CNT,
      NVL(LAG(TB_COUNT.TQDB_CNT,1) OVER(ORDER BY TB_COUNT.INDUSTRY_ID,TB_COUNT.INDUSTRY_NAME,TB_ALL.YEAR_STR),0) LAG_TQDB_CNT,
      NVL(TB_COUNT.QISU_CNT,0) QISU_CNT,
      NVL(LAG(TB_COUNT.QISU_CNT,1) OVER(ORDER BY TB_COUNT.INDUSTRY_ID,TB_COUNT.INDUSTRY_NAME,TB_ALL.YEAR_STR),0) LAG_QISU_CNT,
      NVL(TB_COUNT.PANJUE_CNT,0) PANJUE_CNT,
      NVL(LAG(TB_COUNT.PANJUE_CNT,1) OVER(ORDER BY TB_COUNT.INDUSTRY_ID,TB_COUNT.INDUSTRY_NAME,TB_ALL.YEAR_STR),0) LAG_PANJUE_CNT
       FROM
      ( 
         SELECT INDUSTRY_ID,INDUSTRY_NAME,YEAR_STR FROM
        (SELECT DISTINCT PO1.INDUSTRY_TYPE INDUSTRY_ID,PO1.INDUSTRY_NAME FROM ORGANISE PO1 WHERE
          EXISTS 
          (
          SELECT 1 FROM CASE_BASIC C1 WHERE C1.INPUT_UNIT=PO1.ORG_CODE
        <if test="regionId!=null and regionId!=''">
                AND PO1.DISTRICT_CODE LIKE regexp_replace(${regionId},'(00)+$')||'%'
        </if>
        <if test="yearStr!=null and yearStr!=''">
                AND (TO_CHAR(C1.INPUT_TIME,'yyyy')=${yearStr}-1 OR TO_CHAR(C1.INPUT_TIME,'yyyy')=${yearStr})
        </if>
        <if test="quarterStr!=null and quarterStr!=''">
                AND TO_CHAR(C1.INPUT_TIME,'Q')=${quarterStr}
        </if>
        <if test="monthStr!=null and monthStr!=''">
                AND TO_CHAR(C1.INPUT_TIME,'MM')=${monthStr}
        </if>
          )
        ) TB_INDUSTRY,
        (SELECT ${yearStr}-2+LEVEL YEAR_STR FROM DUAL CONNECT BY LEVEL&lt;3) TB_YEAR 
        ORDER BY INDUSTRY_ID,INDUSTRY_NAME,YEAR_STR
      ) TB_ALL,
      (
        SELECT 
        O.INDUSTRY_TYPE INDUSTRY_ID,O.INDUSTRY_NAME,
        TO_CHAR(CB.INPUT_TIME,'YYYY') YEAR_STR,
        SUM(CASE WHEN CB.YISONG_STATE=2 THEN 1 ELSE 0 END) ZJ_YS_CNT,
        SUM(CASE WHEN CB.YISONG_STATE=3 THEN 1 ELSE 0 END) JY_YS_CNT,
        SUM(CASE WHEN CB.YISONG_STATE=2 OR CB.YISONG_STATE=3 THEN 1 ELSE 0 END) ACCEPT_CNT,
        SUM(CASE WHEN CB.LIAN_STATE=3 THEN 1 ELSE 0 END) LIAN_CNT,
        SUM(CASE WHEN CB.TIQINGDAIBUPERSON_NUM&gt;0 THEN 1 ELSE 0 END) TQDB_CNT,
        SUM(CASE WHEN CB.TIQINGQISUPERSON_NUM&gt;0 THEN 1 ELSE 0 END) QISU_CNT,
        SUM(CASE WHEN CB.PANJUE_STATE=2 THEN 1 ELSE 0 END) PANJUE_CNT, 
        COUNT(1) CNT
        FROM 
        (select C.CASE_ID,C.INPUT_UNIT,C.INPUT_TIME,C.YISONG_STATE,C.LIAN_STATE,C.DAIBU_STATE,C.QISU_STATE,C.PANJUE_STATE,
         X.TIQINGDAIBUPERSON_NUM,X.TIQINGQISUPERSON_NUM
        from 
        (SELECT A.CASE_ID,A.INPUT_UNIT,A.INPUT_TIME,CS.YISONG_STATE,CS.LIAN_STATE,CS.DAIBU_STATE,CS.QISU_STATE,CS.PANJUE_STATE
        FROM CASE_BASIC A,CASE_STATE CS WHERE A.CASE_ID=CS.CASE_ID) c 
        left join 
        (SELECT CASE_ID,
    	NVL(SUM(CASE WHEN (DAIBU_STATE = 2 OR DAIBU_STATE = 3) THEN 1 ELSE 0 END),0) AS TIQINGDAIBUPERSON_NUM,
    	NVL(SUM(CASE WHEN TIQINGQISU_STATE = 2 THEN 1 ELSE 0 END),0) AS TIQINGQISUPERSON_NUM
    	FROM CASE_XIANYIREN
    	GROUP BY CASE_ID) x
        on c.case_id=x.case_id) CB,
        ORGANISE O
         where CB.INPUT_UNIT=O.ORG_CODE
        <if test="regionId!=null and regionId!=''">
                AND O.DISTRICT_CODE LIKE regexp_replace(${regionId},'(00)+$')||'%'
        </if>
        <if test="yearStr!=null and yearStr!=''">
                AND (TO_CHAR(CB.INPUT_TIME,'yyyy')=${yearStr}-1 OR TO_CHAR(CB.INPUT_TIME,'yyyy')=${yearStr})
        </if>
        <if test="quarterStr!=null and quarterStr!=''">
                AND TO_CHAR(CB.INPUT_TIME,'Q')=${quarterStr}
        </if>
        <if test="monthStr!=null and monthStr!=''">
                AND TO_CHAR(CB.INPUT_TIME,'MM')=${monthStr}
        </if>
        GROUP BY O.INDUSTRY_TYPE,O.INDUSTRY_NAME,TO_CHAR(CB.INPUT_TIME,'YYYY')
      ) TB_COUNT
    WHERE  TB_ALL.INDUSTRY_ID=TB_COUNT.INDUSTRY_ID(+) AND TB_ALL.INDUSTRY_NAME=TB_COUNT.INDUSTRY_NAME(+) AND TB_ALL.YEAR_STR=TB_COUNT.YEAR_STR(+)
    ORDER BY TB_ALL.INDUSTRY_ID,TB_ALL.INDUSTRY_NAME,TB_ALL.YEAR_STR
    ) TB_FINAL
    WHERE TB_FINAL.YEAR_STR=${yearStr} AND TB_FINAL.INDUSTRY_ID IS NOT NULL
	</select>
	
	<!-- ??????????????? -->
	<select id="queryTop10Accuse" parameterType="java.util.Map" resultType="java.util.Map">
    SELECT * FROM 
    (
        SELECT COUNT(AI.NAME) ACCUSE_NUM,
                          AI.ID ACCUSE_ID,
                          AI.NAME ACCUSE_NAME
                     FROM CASE_BASIC CB,ORGANISE O,
                          (SELECT CASE_ID, ACCUSE_ID
                             FROM CASE_ACCUSE A
                           UNION
                           SELECT B.CASE_ID, ACCUSE_ID
                             FROM XIANYIREN_ACCUSE B
                            GROUP BY ACCUSE_ID, CASE_ID
                           ) CA,
                          ACCUSE_INFO AI
                    WHERE CB.CASE_ID = CA.CASE_ID AND CB.INPUT_UNIT=O.ORG_CODE
                      AND AI.ID = CA.ACCUSE_ID
                      AND accuse_id != 190
              <if test="regionId!=null and regionId!=''">
                            AND O.DISTRICT_CODE LIKE regexp_replace(${regionId},'(00)+$')||'%'
              </if>
              <if test="yearStr!=null and yearStr!=''">
                            AND TO_CHAR(CB.INPUT_TIME,'yyyy')=${yearStr}
              </if>
              <if test="quarterStr!=null and quarterStr!=''">
                            AND TO_CHAR(CB.INPUT_TIME,'Q')=${quarterStr}
              </if>
              <if test="monthStr!=null and monthStr!=''">
                            AND TO_CHAR(CB.INPUT_TIME,'MM')=${monthStr}
              </if>
                    GROUP BY AI.ID,AI.NAME
                    ORDER BY ACCUSE_NUM DESC
    ) 
	</select>
	
	
	<select id="queryCaseCountForZHFX" parameterType="java.util.Map" resultType="int">
		select count(1) FROM CASE_BASIC CB,CASE_STATE CS,ORGANISE O
		where CB.CASE_ID=CS.CASE_ID AND CB.INPUT_UNIT=O.ORG_CODE
		<if test="regionId!=null and regionId!=''">
				AND O.DISTRICT_CODE LIKE regexp_replace(${regionId},'(00)+$')||'%'
		</if>
		<if test="yearStr!=null and yearStr!=''">
				AND  TO_CHAR(CB.INPUT_TIME,'yyyy')=${yearStr}
		</if>
		<if test="quarterStr!=null and quarterStr!=''">
				AND TO_CHAR(CB.INPUT_TIME,'Q')=${quarterStr}
		</if>
		<if test="monthStr!=null and monthStr!=''">
				AND TO_CHAR(CB.INPUT_TIME,'MM')=${monthStr}
		</if>
		<if test="chufaState!=null and chufaState!=''">
				AND CS.CHUFA_STATE = ${chufaState}
		</if>
	</select>
	
	
	<select id="queryCrimeCaseCountForZHFX" parameterType="java.util.Map" resultType="int">
	SELECT COUNT(distinct cb.case_id) FROM CASE_BASIC CB,CASE_STATE CS,ORGANISE O,
       (
       SELECT CASE_ID,LA.NAME AS ACCUSE_NAME 
       FROM CASE_ACCUSE_RULE_RELATION CI,ACCUSE_RULE I,
       ACCUSE_RULE_RELATION SA,ACCUSE_INFO LA
       WHERE CI.RULE_ID = I.ID AND CI.RULE_ID = SA.RULE_ID 
       AND SA.ACCUSE_ID = LA.ID
       AND SA.ACCUSE_ID!=190) T
     WHERE CB.CASE_ID = T.CASE_ID AND CB.INPUT_UNIT=O.ORG_CODE
     <![CDATA[ AND CB.CASE_STATE < 4 ]]>
      AND CB.CASE_ID = CS.CASE_ID
     AND CB.IS_SUSPECTED_CRIMINAL = 1
    <if test="regionId!=null and regionId!=''">
        AND O.DISTRICT_CODE LIKE regexp_replace(${regionId},'(00)+$')||'%'
    </if>
    <if test="yearStr!=null and yearStr!=''">
        AND  TO_CHAR(CB.INPUT_TIME,'yyyy')=${yearStr}
    </if>
    <if test="quarterStr!=null and quarterStr!=''">
        AND TO_CHAR(CB.INPUT_TIME,'Q')=${quarterStr}
    </if>
    <if test="monthStr!=null and monthStr!=''">
        AND TO_CHAR(CB.INPUT_TIME,'MM')=${monthStr}
    </if>
    <if test="chufaState!=null and chufaState!=''">
        AND CS.CHUFA_STATE = ${chufaState} 
    </if>
	</select>
	
	
	<select id="queryJGCLCaseCountForZHFX" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT 
	    nvl(SUM(CASE WHEN FILTER_COUNT &gt; 0 THEN 1 ELSE 0 END),0) AS JGCL_TOTAL,
	    nvl(SUM(CASE WHEN FILTER_COUNT = 6 THEN 1 ELSE 0 END),0) AS JGCL_FILTER_1,
	    nvl(SUM(CASE WHEN FILTER_COUNT = 5 THEN 1 ELSE 0 END),0) AS JGCL_FILTER_2,
	    nvl(SUM(CASE WHEN FILTER_COUNT = 4 THEN 1 ELSE 0 END),0) AS JGCL_FILTER_3,
	    nvl(SUM(CASE WHEN FILTER_COUNT = 3 THEN 1 ELSE 0 END),0) AS JGCL_FILTER_4,
	    nvl(SUM(CASE WHEN FILTER_COUNT = 2 THEN 1 ELSE 0 END),0) AS JGCL_FILTER_5,
	    nvl(SUM(CASE WHEN FILTER6_COUNT = 3 THEN 1 ELSE 0 END),0) AS JGCL_FILTER_6,
	    nvl(SUM(CASE WHEN FILTER7_COUNT = 3 THEN 1 ELSE 0 END),0) AS JGCL_FILTER_7,
	    nvl(SUM(CASE WHEN FILTER8_COUNT = 4 THEN 1 ELSE 0 END),0) AS JGCL_FILTER_8
       FROM
      (
      SELECT (TB_FILTERS.LOWER_MONEY_FILTER+TB_FILTERS.IDENTIFY_FILTER+TB_FILTERS.DESCUSS_FILTER+TB_FILTERS.BEYOND_FILTER+TB_FILTERS.SERIOUS_FILTER+TB_FILTERS.TIMES_FILTER) FILTER_COUNT, 
             (TB_FILTERS.BEYOND_FILTER+TB_FILTERS.DESCUSS_FILTER+TB_FILTERS.IDENTIFY_FILTER) AS FILTER6_COUNT,
             (TB_FILTERS.TIMES_FILTER+TB_FILTERS.DESCUSS_FILTER+TB_FILTERS.IDENTIFY_FILTER) AS FILTER7_COUNT,
             (TB_FILTERS.SERIOUS_FILTER+TB_FILTERS.BEYOND_FILTER+TB_FILTERS.DESCUSS_FILTER+TB_FILTERS.IDENTIFY_FILTER) AS FILTER8_COUNT
      FROM (
        SELECT 
        CASE WHEN PCE.IS_LOWER_LIMIT_MONEY=1 THEN 1 ELSE 0 END LOWER_MONEY_FILTER,
        CASE WHEN PCE.IS_IDENTIFY &lt; 6 THEN 1 ELSE 0 END IDENTIFY_FILTER,
        CASE WHEN PCE.IS_DESCUSS=1 THEN 1 ELSE 0 END DESCUSS_FILTER,
        CASE WHEN PCE.IS_BEYOND_EIGHTY=1 THEN 1 ELSE 0 END BEYOND_FILTER,
        CASE WHEN PCE.IS_SERIOUS_CASE=1 THEN 1 ELSE 0 END SERIOUS_FILTER,
        CASE WHEN PCE.CHUFA_TIMES &gt;1 THEN 1 ELSE 0 END TIMES_FILTER
        FROM CASE_BASIC CB,CASE_STATE CS,ORGANISE O,PENALTY_CASE_FORM PCE
          WHERE CB.CASE_ID=CS.CASE_ID AND CB.INPUT_UNIT=O.ORG_CODE AND CB.INPUT_UNIT=O.ORG_CODE AND CB.CASE_ID=PCE.CASE_ID(+)
           AND CB.CASE_STATE = 2 AND CS.CHUFA_STATE = 2
      <if test="regionId!=null and regionId!=''">
            AND O.DISTRICT_CODE LIKE regexp_replace(${regionId},'(00)+$')||'%'
      </if>
      <if test="yearStr!=null and yearStr!=''">
            AND  TO_CHAR(CB.INPUT_TIME,'yyyy')=${yearStr}
      </if>
      <if test="quarterStr!=null and quarterStr!=''">
            AND TO_CHAR(CB.INPUT_TIME,'Q')=${quarterStr}
      </if>
      <if test="monthStr!=null and monthStr!=''">
            AND TO_CHAR(CB.INPUT_TIME,'MM')=${monthStr}
      </if>
      <if test="chufaState!=null and chufaState!=''">
            AND CS.CHUFA_STATE = ${chufaState}
      </if>
      ) TB_FILTERS
    ) TB_COUNT
	</select>
	
	<select id="queryDSJFXCaseCountForZHFX" parameterType="java.util.Map" resultType="int">
		SELECT COUNT(DISTINCT CB1.CASE_ID)
		FROM
		(SELECT
	    CB.CASE_ID,CB.CASE_NO,CB.CASE_NAME,CB.INPUTER,CB.INPUT_TIME,PCE.CHUFA_TIME,CB.ANFA_ADDRESS,CB.ANFA_TIME,
	    CB.AMOUNT_INVOLVED,O.ORG_CODE,O.ORG_NAME,PCE.identify_type,
	    CB.CASE_STATE,CB.RECORD_SRC,CB.LATEST_POCESS_TIME,CB.PROC_KEY,CST.CHUFA_STATE,PCE.GOODS_INVOLVED,
	    CX.IDS_NO,CX."NAME" AS XIANYIREN_NAME,CC."NAME" AS COMPANY_NAME,O.DISTRICT_CODE
	    FROM CASE_BASIC CB,CASE_STATE CST,PENALTY_CASE_FORM PCE,CASE_XIANYIREN CX,CASE_COMPANY CC,USER_ U,ORGANISE O
	    WHERE
	    CB.PROC_KEY = 'chufaProc'
	    AND CB.CASE_ID = CST.CASE_ID
	    AND CB.CASE_ID =PCE.CASE_ID(+)
	      AND CB.CASE_ID = CX.CASE_ID(+)
	      AND CB.CASE_ID= CC.CASE_ID(+)
	      AND CB.CASE_TYPE IN (1,2)
	      AND CB.INPUTER = U.USER_ID
	      AND O.ORG_CODE=CB.INPUT_UNIT
			    	<if test="regionId!=null and regionId!=''">
		    			    	AND O.DISTRICT_CODE LIKE regexp_replace(${regionId},'(00)+$')||'%'
		    	</if>
		    	<if test="chufaState!=null and chufaState!=''">
		    			    	AND CST.CHUFA_STATE = ${chufaState}
		    	</if>
		) CB1,
		(SELECT
	    CB.CASE_ID,CB.CASE_NO,CB.CASE_NAME,CB.INPUTER,CB.INPUT_TIME,PCE.CHUFA_TIME,CB.ANFA_ADDRESS,CB.ANFA_TIME,
	    CB.AMOUNT_INVOLVED,O.ORG_CODE,O.ORG_NAME,PCE.identify_type,
	    CB.CASE_STATE,CB.RECORD_SRC,CB.LATEST_POCESS_TIME,CB.PROC_KEY,CST.CHUFA_STATE,PCE.GOODS_INVOLVED,
	    CX.IDS_NO,CX."NAME" AS XIANYIREN_NAME,CC."NAME" AS COMPANY_NAME,O.DISTRICT_CODE
	    FROM CASE_BASIC CB,CASE_STATE CST,PENALTY_CASE_FORM PCE,CASE_XIANYIREN CX,CASE_COMPANY CC,USER_ U,ORGANISE O
	    WHERE
	    CB.PROC_KEY = 'chufaProc'
	    AND CB.CASE_ID = CST.CASE_ID
	    AND CB.CASE_ID =PCE.CASE_ID(+)
	      AND CB.CASE_ID = CX.CASE_ID(+)
	      AND CB.CASE_ID= CC.CASE_ID(+)
	      AND CB.CASE_TYPE IN (1,2)
	      AND CB.INPUTER = U.USER_ID
	      AND O.ORG_CODE=CB.INPUT_UNIT
		    	<if test="regionId!=null and regionId!=''">
		    			    	AND O.DISTRICT_CODE LIKE regexp_replace(${regionId},'(00)+$')||'%'
		    	</if>
		    	<if test="chufaState!=null and chufaState!=''">
		    			    	AND CST.CHUFA_STATE = ${chufaState}
		    	</if>
    ) CB2
    WHERE CB1.CASE_ID != CB2.CASE_ID 
    and CB1.INPUTER = CB2.INPUTER
    <include refid="yisiFaCaseFieldForZHFX" />
	</select>
	<sql id="yisiFaCaseFieldForZHFX">
		<trim>
			<if test="orgId!=null and orgId !='' and orgId != '-1'">
				AND cb1.INPUTER IN (SELECT USER_ID FROM USER_ WHERE ORG_ID
				IN
				(SELECT ORG_CODE FROM ORGANISE WHERE ORG_CODE = #{orgId} OR
				UP_ORG_CODE = #{orgId} ))
			</if>
			<if test="districtId !=null and districtId !='' ">
				and CB1.district_code like concat('%',concat(#{districtId},'%'))
			</if>
			<choose>
				<when test="startMoney != null and endMoney != null ">
		      <![CDATA[
		       	AND  CB1.AMOUNT_INVOLVED >= #{startMoney,jdbcType=DECIMAL} AND CB1.AMOUNT_INVOLVED  <= (#{endMoney,jdbcType=DECIMAL})
		       	AND  CB2.AMOUNT_INVOLVED >= #{startMoney,jdbcType=DECIMAL} AND CB2.AMOUNT_INVOLVED  <= (#{endMoney,jdbcType=DECIMAL})
		       	]]>
				</when>
				<when test="endMoney != null ">
		      <![CDATA[
			      	AND  CB1.AMOUNT_INVOLVED  <= (#{endMoney,jdbcType=DECIMAL})
			      		AND  CB2.AMOUNT_INVOLVED  <= (#{endMoney,jdbcType=DECIMAL})
			   ]]>
				</when>
				<when test="startMoney != null and amountInvolved==null">
		      <![CDATA[
			      	AND  CB1.AMOUNT_INVOLVED >= #{startMoney,jdbcType=DECIMAL}
			      		AND  CB2.AMOUNT_INVOLVED >= #{startMoney,jdbcType=DECIMAL}
			  ]]>
				</when>
			</choose>
	        <if test="address != null and address != ''">
	        	and	CB1.anfa_address = CB2.anfa_address
	        	and CB1.anfa_address is not null
	        </if>
			<if test="shijian != null and shijian != ''">
				and	CB1.anfa_time = CB2.anfa_time
	        	and CB1.anfa_time is not null				
			</if>
			<if test="wupin != null and wupin != ''">
				and CB1.GOODS_INVOLVED = CB2.GOODS_INVOLVED 
				and CB1.GOODS_INVOLVED IS NOT NULL
			</if>
			<if test="jianding != null and jianding != ''">
				and CB1.identify_type = CB2.identify_type 
				and CB1.identify_type IS NOT NULL 
				and CB1.identify_type != 6
			</if>			
			<if test="shijian != null ">
				and	cb1.CHUFA_TIME = cb2.CHUFA_TIME
			</if>
			<if test="dangshiren !=null and dangshiren != '' ">
				and CB1.XIANYIREN_name = CB2.XIANYIREN_name
			</if>	
			<if test="danwei !=null and danwei !='' ">
				and CB1.COMPANY_name = CB2.COMPANY_name
			</if>
			<choose>
				<when test="minCaseInputTime !=null and maxCaseInputTime !=null">
						<![CDATA[ 
						and ( cb1.input_time >= #{minCaseInputTime,jdbcType=TIMESTAMP} and cb1.input_time < (#{maxCaseInputTime,jdbcType=TIMESTAMP} +   interval   '1'  day) )
						and ( cb2.input_time >= #{minCaseInputTime,jdbcType=TIMESTAMP} and cb2.input_time < (#{maxCaseInputTime,jdbcType=TIMESTAMP} +   interval   '1'  day) )
						]]>
				</when>
				<when test="minCaseInputTime !=null">
						<![CDATA[ and cb1.input_time >= #{minCaseInputTime,jdbcType=TIMESTAMP}]]>
						<![CDATA[ and cb2.input_time >= #{minCaseInputTime,jdbcType=TIMESTAMP}]]>
				</when>
				<when test="maxCaseInputTime !=null">
						<![CDATA[ and cb1.input_time < (#{maxCaseInputTime,jdbcType=TIMESTAMP} +   interval   '1'  day)]]>
						<![CDATA[ and cb2.input_time < (#{maxCaseInputTime,jdbcType=TIMESTAMP} +   interval   '1'  day)]]>						
				</when>
			</choose>
			<choose>
				<when test="startTime !=null and endTime !=null">
						<![CDATA[ 
						and ( cb1.input_time >= #{startTime,jdbcType=TIMESTAMP} and cb1.input_time < (#{endTime,jdbcType=TIMESTAMP} +   interval   '1'  day) )
						and ( cb2.input_time >= #{startTime,jdbcType=TIMESTAMP} and cb2.input_time < (#{endTime,jdbcType=TIMESTAMP} +   interval   '1'  day) )
						]]>
				</when>
				<when test="startTime !=null">
						<![CDATA[ and cb1.input_time >= #{startTime,jdbcType=TIMESTAMP}]]>
						<![CDATA[ and cb2.input_time >= #{startTime,jdbcType=TIMESTAMP}]]>
				</when>
				<when test="endTime !=null">
						<![CDATA[ and cb1.input_time < (#{endTime,jdbcType=TIMESTAMP} +   interval   '1'  day)]]>
						<![CDATA[ and cb2.input_time < (#{endTime,jdbcType=TIMESTAMP} +   interval   '1'  day)]]>						
				</when>
			</choose>	
			<if test="yearStr !=null and yearStr !=''"> 
			AND  TO_CHAR(CB1.input_time,'yyyy')=${yearStr}
			AND  TO_CHAR(CB2.input_time,'yyyy')=${yearStr}
			</if>
			<if test="quarterStr !=null and quarterStr !=''">
			AND TO_CHAR(CB1.INPUT_TIME,'Q')=${quarterStr}
			AND TO_CHAR(CB2.INPUT_TIME,'Q')=${quarterStr}
			</if>
			<if test="monthStr !=null and monthStr !=''"> 
			AND TO_CHAR(CB1.INPUT_TIME,'MM')=${monthStr}
			AND TO_CHAR(CB2.INPUT_TIME,'MM')=${monthStr}
			</if>
		</trim>
	</sql>
	
	<resultMap extends="BaseResultMap" id="policeNoAcceptResultMap" type="com.ksource.liangfa.domain.CaseBasic">
		<result column="districtCode" property="districtCode" />
		<result column="orgName" property="orgName" />
		<result column="yisong_time" property="yisongTime" />
	</resultMap>
	<select id="getYisongPoliceNotAcceptList" parameterType="map" resultMap="policeNoAcceptResultMap">
		SELECT C.CASE_ID,C.CASE_NO,C.CASE_NAME,C.CASE_STATE,C.INPUT_TIME,U.USER_NAME AS USERNAME,O.DISTRICT_CODE AS DISTRICTCODE,O.ORG_NAME AS ORGNAME,
		CC.YISONG_TIME
		FROM CASE_BASIC C,CRIME_CASE_FORM CC,CASE_STATE S, USER_ U,ORGANISE O
		WHERE C.CASE_ID=S.CASE_ID
		AND C.CASE_ID=CC.CASE_ID
		AND C.INPUTER= U.USER_ID
		AND U.ORG_ID=O.ORG_CODE
        AND C.CASE_STATE = 10
        AND C.PROC_KEY ='chufaProc'
        <if test="conditionFormula != null and conditionFormula != '' ">
            AND ${conditionFormula}
        </if>
		<if test="shortDistrictId!=null and shortDistrictId!='' ">
			AND O.DISTRICT_CODE LIKE #{shortDistrictId}||'%'
		</if>
		<if test="caseNo != null">
			AND C.CASE_NO LIKE CONCAT(CONCAT('%',#{caseNo}),'%')
		</if>
		<if test="caseName != null">
			AND C.CASE_NAME LIKE CONCAT(CONCAT('%',#{caseName}),'%')
		</if>
		<if test="orgPath!=null and orgPath != '' ">
			AND O.ORG_PATH LIKE CONCAT(#{orgPath},'%')
		</if>
        <if test="orgId !=null">
            AND  O.ORG_CODE = #{orgId}
        </if>   		
        <if test="acceptOrg != null and acceptOrg != '' ">
            AND CC.ACCEPT_ORG = #{acceptOrg}
        </if>		
		<if test="startTime != null and startTime!='' and startTime!='null'">
			<![CDATA[
			   AND C.INPUT_TIME >= #{startTime,jdbcType=TIMESTAMP}
			 	]]>
		</if>
		<if test="endTime != null and endTime!='' and endTime!='null'">
			 <![CDATA[
			     AND C.INPUT_TIME  < #{endTime,jdbcType=TIMESTAMP}+ INTERVAL '1' DAY
			 	]]>
		</if>
		ORDER BY O.DISTRICT_CODE ASC,CC.YISONG_TIME DESC
	</select>
	<select id="getYisongPoliceNotAcceptCount" parameterType="map" resultType="int">
		SELECT COUNT(1)
		FROM CASE_BASIC C,CRIME_CASE_FORM CC,CASE_STATE S, USER_ U,ORGANISE O
		WHERE C.CASE_ID=S.CASE_ID
		AND C.CASE_ID=CC.CASE_ID
		AND C.INPUTER= U.USER_ID
		AND U.ORG_ID=O.ORG_CODE
        AND C.CASE_STATE = 10
        AND C.PROC_KEY ='chufaProc'
        <if test="conditionFormula != null and conditionFormula != '' ">
            AND ${conditionFormula}
        </if>
		<if test="shortDistrictId!=null and shortDistrictId!='' ">
			AND O.DISTRICT_CODE LIKE #{shortDistrictId}||'%'
		</if>
		<if test="caseNo != null">
			AND C.CASE_NO LIKE CONCAT(CONCAT('%',#{caseNo}),'%')
		</if>
		<if test="caseName != null">
			AND C.CASE_NAME LIKE CONCAT(CONCAT('%',#{caseName}),'%')
		</if>
		<if test="orgPath!=null and orgPath != '' ">
			AND O.ORG_PATH LIKE CONCAT(#{orgPath},'%')
		</if>
        <if test="orgId !=null">
            AND  O.ORG_CODE = #{orgId}
        </if>   		
        <if test="acceptOrg != null and acceptOrg != '' ">
            AND CC.ACCEPT_ORG = #{acceptOrg}
        </if>		
		<if test="startTime != null and startTime!='' and startTime!='null'">
			<![CDATA[
			   AND C.INPUT_TIME >= #{startTime,jdbcType=TIMESTAMP}
			 	]]>
		</if>
		<if test="endTime != null and endTime!='' and endTime!='null'">
			 <![CDATA[
			     AND C.INPUT_TIME  < #{endTime,jdbcType=TIMESTAMP}+ INTERVAL '1' DAY
			 	]]>
		</if>
	</select>
	
	<select id="queryYisongCaseCount" parameterType="com.ksource.liangfa.domain.CaseBasic" resultType="int">
        SELECT COUNT(1) 
        from case_basic c,case_state s,user_ u,organise o
        where c.case_id=s.case_id and c.inputer=u.user_id
		and u.org_id=o.org_code
		and s.YISONG_STATE &gt; 1 
        and s.YISONG_STATE &lt; 4  
        and c.PROC_KEY ='chufaProc'		
		<if test="districtId != null ">
			and o.district_code like #{districtId}||'%'
		</if>
 		<if test="startTime!= null">
			<![CDATA[AND  c.INPUT_TIME >= #{startTime,jdbcType=TIMESTAMP}]]>
		</if>
		<if test="endTime!= null">
			<![CDATA[AND  c.INPUT_TIME  < (#{endTime,jdbcType=TIMESTAMP} +   interval   '1'  day)]]>
		</if>
    </select>
    
    
    <select id="queryPoliceNotAcceptCaseList" parameterType="map" resultMap="BaseResultMap">
		select c.*, u.user_Name as userName
		from case_basic c,case_state s, user_ u,organise o
		where c.case_id=s.case_id
		and c.inputer= u.user_id
		and u.org_id=o.org_code
		and s.YISONG_STATE &gt; 1 
        and s.YISONG_STATE &lt; 4  
        and c.CASE_STATE = 10
		<if test="districtId!=null and districtId!='' ">
			AND o.district_code like #{districtId}||'%'
		</if>
		<if test="startTime != null and startTime!='' and startTime!='null'">
			<![CDATA[
			   AND C.INPUT_TIME >= #{startTime,jdbcType=TIMESTAMP}
			 	]]>
		</if>
		<if test="endTime != null and endTime!='' and endTime!='null'">
			 <![CDATA[
			     AND C.INPUT_TIME  < #{endTime,jdbcType=TIMESTAMP}+   interval   '1'  day
			 	]]>
		</if>
		and c.PROC_KEY ='chufaProc'
		order by c.latest_Pocess_Time desc,c.case_id asc
	</select>
	<select id="queryPoliceNotAcceptCaseCount" parameterType="map" resultType="int">
		select count(*)
		from case_basic c,case_state s, user_ u,organise o
		where c.case_id=s.case_id
		and c.inputer= u.user_id
		and u.org_id=o.org_code
		and s.YISONG_STATE &gt; 1 
        and s.YISONG_STATE &lt; 4  
        and c.CASE_STATE = 10
		<if test="districtId!=null and districtId!='' ">
			AND o.district_code like #{districtId}||'%'
		</if>
		<if test="startTime != null and startTime!='' and startTime!='null'">
			<![CDATA[
			   AND C.INPUT_TIME >= #{startTime,jdbcType=TIMESTAMP}
			 	]]>
		</if>
		<if test="endTime != null and endTime!='' and endTime!='null'">
			 <![CDATA[
			     AND C.INPUT_TIME  < #{endTime,jdbcType=TIMESTAMP}+   interval   '1'  day
			 	]]>
		</if>
		and c.PROC_KEY ='chufaProc'
	</select>
	
	<select id="queryYisongCount" parameterType="map" resultType="int">
			SELECT COUNT(1) FROM CASE_BASIC C,CASE_STATE S,ORGANISE O 
			WHERE C.INPUT_UNIT = O.ORG_CODE
			AND C.CASE_ID = S.CASE_ID
	    	<if test="regionId!=null and regionId!=''">
			AND o.DISTRICT_CODE LIKE regexp_replace(${regionId},'(00)+$')||'%'
			</if>
			<if test="yearStr!=null and yearStr!=''"> 
			AND  TO_CHAR(c.input_time,'yyyy')=${yearStr}
			</if>
			<if test="quarterStr!=null and quarterStr!=''">
			AND TO_CHAR(C.INPUT_TIME,'Q')=${quarterStr}
			</if>
			<if test="monthStr!=null and monthStr!=''"> 
			AND TO_CHAR(C.INPUT_TIME,'MM')=${monthStr}
			</if>
			<if test="chufaState !=null and chufaState !=''"> 
			AND S.CHUFA_STATE = ${chufaState}
			</if>
			<if test="yisongState !=null and yisongState !=''"> 
			AND S.YISONG_STATE = ${yisongState}
			</if> 
	</select>
	
	<resultMap id="queryfilingSupervisionListResultMap" type="com.ksource.liangfa.domain.CaseBasic">
		<id column="CASE_ID" jdbcType="VARCHAR" property="caseId" />
		<result column="CASE_NO" jdbcType="VARCHAR" property="caseNo" />
		<result column="CASE_NAME" jdbcType="VARCHAR" property="caseName" />
		<result column="INPUT_UNIT_NAME" jdbcType="VARCHAR" property="inputUnitName" />
		<result column="AMOUNT_INVOLVED" jdbcType="DECIMAL" property="amountInvolved" />
		<result column="CASE_STATE" jdbcType="VARCHAR" property="caseState" />
		<result column="DISTRICT_CODE" jdbcType="VARCHAR" property="districtCode" />
		<result column="CHUFA_TIMES" jdbcType="DECIMAL" property="chufaTimes" />
		<result column="IS_SERIOUS_CASE" jdbcType="DECIMAL" property="isSeriousCase" />
		<result column="IS_BEYOND_EIGHTY" jdbcType="DECIMAL" property="isBeyondEighty" />
		<result column="IS_DESCUSS" jdbcType="DECIMAL" property="isDescuss" />
		<result column="IS_IDENTIFY" jdbcType="DECIMAL" property="isIdentify" />
		<result column="IS_LOWER_LIMIT_MONEY" jdbcType="DECIMAL" property="isLowerLimitMoney" />
		<result column="PROC_KEY" jdbcType="VARCHAR" property="procKey" />
		<result column="INPUT_TIME" jdbcType="TIMESTAMP" property="inputTime" />
	</resultMap>
	<select id="queryfilingSupervisionList" parameterType="map" resultMap="queryfilingSupervisionListResultMap">
		SELECT CB.CASE_ID,CB.CASE_NO,CB.CASE_NAME,CB.AMOUNT_INVOLVED,CB.CASE_STATE,O.ORG_NAME AS INPUT_UNIT_NAME,O.DISTRICT_CODE,CB.PROC_KEY,
		PCF.IS_DESCUSS,PCF.CHUFA_TIMES,PCF.IS_SERIOUS_CASE,PCF.IS_BEYOND_EIGHTY,PCF.IS_LOWER_LIMIT_MONEY,PCF.IS_IDENTIFY,CB.INPUT_TIME
		FROM CASE_BASIC CB,CASE_STATE CT,PENALTY_CASE_FORM PCF,ORGANISE O
		WHERE CB.CASE_ID = CT.CASE_ID
		AND CB.CASE_ID = PCF.CASE_ID
		AND CB.INPUT_UNIT = O.ORG_CODE
		AND CB.CASE_STATE = 2
		AND CT.CHUFA_STATE = 2
		AND O.DISTRICT_CODE LIKE CONCAT(#{districtCode},'%')
		<if test="caseNo != null and caseNo != '' ">
		AND CB.CASE_NO LIKE CONCAT(CONCAT('%',#{caseNo}),'%')
		</if>
		<if test="caseName != null and caseName != '' ">
		AND CB.CASE_NAME LIKE CONCAT(CONCAT('%',#{caseName}),'%')
		</if>
		<if test="orgPath != null and orgPath != '' ">
			AND O.ORG_PATH LIKE CONCAT(#{orgPath},'%')
		</if>
		<if test="minAmountInvolvedS != null">
		 AND CB.AMOUNT_INVOLVED &gt;= #{minAmountInvolvedS,jdbcType=DECIMAL}
		</if>
		<if test="maxAmountInvolvedS != null">
		<![CDATA[ AND CB.AMOUNT_INVOLVED <= #{maxAmountInvolvedS,jdbcType=DECIMAL} ]]>
		</if>
		<if test="minCaseInputTimeS != null">
		 AND CB.INPUT_TIME &gt;= #{minCaseInputTimeS,jdbcType=TIMESTAMP}
		</if>
		<if test="maxCaseInputTimeS != null">
		<![CDATA[ AND CB.INPUT_TIME < (#{maxCaseInputTimeS,jdbcType=TIMESTAMP} + INTERVAL '1' DAY)]]>
		</if>
		<if test="isDiscussCaseS != null">
		AND PCF.IS_DESCUSS = #{isDiscussCaseS}
		</if>
		<if test="chufaTimesS != null">
		<![CDATA[ AND PCF.CHUFA_TIMES > #{chufaTimesS} ]]>
		</if>
		<if test="isSeriousCaseS != null">
		AND PCF.IS_SERIOUS_CASE = #{isSeriousCaseS}
		</if>
		<if test="isBeyondEightyS!= null">
		AND PCF.IS_BEYOND_EIGHTY = #{isBeyondEightyS}
		</if>
		<if test="isIdentifyS != null">
		  AND PCF.IS_IDENTIFY = #{isIdentifyS}
		</if>
		<if test="isLowerLimitMoneyS != null">
		AND PCF.IS_LOWER_LIMIT_MONEY = #{isLowerLimitMoneyS}
		</if>
		<if test="procKey != null and procKey =='chufaProc'">
		 AND (1=2
		<choose>
		  <when test="minAmountInvolved != null and maxAmountInvolved != null">
		    <![CDATA[ OR ( CB.AMOUNT_INVOLVED >= #{minAmountInvolved,jdbcType=DECIMAL}
		        AND CB.AMOUNT_INVOLVED <= #{maxAmountInvolved,jdbcType=DECIMAL} )
		    ]]>
		  </when>
		  <when test="minAmountInvolved != null">
		    <![CDATA[ OR CB.AMOUNT_INVOLVED >= #{minAmountInvolved,jdbcType=DECIMAL} ]]>
		  </when>
		  <when test="maxAmountInvolved != null">
		    <![CDATA[ OR CB.AMOUNT_INVOLVED <= #{maxAmountInvolved,jdbcType=DECIMAL} ]]>
		  </when>
		</choose>
		<choose>
		  <when test="minCaseInputTime != null and maxCaseInputTime != null">
		    <![CDATA[ OR (CB.INPUT_TIME >= #{minCaseInputTime,jdbcType=TIMESTAMP}
		         AND CB.INPUT_TIME < (#{maxCaseInputTime,jdbcType=TIMESTAMP} + INTERVAL '1' DAY) )
		    ]]>
		  </when>
		  <when test="minCaseInputTime != null">
		    <![CDATA[ OR CB.INPUT_TIME >= #{minCaseInputTime,jdbcType=TIMESTAMP}]]>
		  </when>
		  <when test="maxCaseInputTime != null">
		    <![CDATA[ OR CB.INPUT_TIME < (#{maxCaseInputTime,jdbcType=TIMESTAMP} + INTERVAL '1' DAY)]]>
		  </when>
		</choose>
		<if test="isDiscussCase != null">
		  OR PCF.IS_DESCUSS = #{isDiscussCase}
		</if>
		<if test="chufaTimes != null">
		  OR PCF.CHUFA_TIMES &gt; #{chufaTimes}
		</if>
		<if test="isSeriousCase != null">
		  OR PCF.IS_SERIOUS_CASE = #{isSeriousCase}
		</if>
		<if test="isBeyondEighty != null">
		  OR PCF.IS_BEYOND_EIGHTY = #{isBeyondEighty}
		</if>
		<if test="isLowerLimitMoney != null">
		  OR PCF.IS_LOWER_LIMIT_MONEY = #{isLowerLimitMoney}
		</if>
		<if test="isIdentify != null">
		  OR PCF.IS_IDENTIFY = #{isIdentify}
		</if>
		)
		</if>
	</select>
	<select id="queryfilingSupervisionCount" parameterType="map" resultType="int">
		SELECT COUNT(1)
		FROM CASE_BASIC CB,CASE_STATE CT,PENALTY_CASE_FORM PCF,ORGANISE O
		WHERE CB.CASE_ID = CT.CASE_ID
		AND CB.CASE_ID = PCF.CASE_ID
		AND CB.INPUT_UNIT = O.ORG_CODE
		AND CB.CASE_STATE = 2
		AND CT.CHUFA_STATE = 2
		AND O.DISTRICT_CODE LIKE CONCAT(#{districtCode},'%')
		<if test="caseNo != null and caseNo != '' ">
		AND CB.CASE_NO LIKE CONCAT(CONCAT('%',#{caseNo}),'%')
		</if>
		<if test="caseName != null and caseName != '' ">
		AND CB.CASE_NAME LIKE CONCAT(CONCAT('%',#{caseName}),'%')
		</if>
		<if test="orgPath != null and orgPath != '' ">
			AND O.ORG_PATH LIKE CONCAT(#{orgPath},'%')
		</if>
		<if test="minAmountInvolvedS != null">
		 AND CB.AMOUNT_INVOLVED &gt;= #{minAmountInvolvedS,jdbcType=DECIMAL}
		</if>
		<if test="maxAmountInvolvedS != null">
		<![CDATA[ AND CB.AMOUNT_INVOLVED <= #{maxAmountInvolvedS,jdbcType=DECIMAL} ]]>
		</if>
		<if test="minCaseInputTimeS != null">
		 AND CB.INPUT_TIME &gt;= #{minCaseInputTimeS,jdbcType=TIMESTAMP}
		</if>
		<if test="maxCaseInputTimeS != null">
		<![CDATA[ AND CB.INPUT_TIME < (#{maxCaseInputTimeS,jdbcType=TIMESTAMP} + INTERVAL '1' DAY)]]>
		</if>
		<if test="isDiscussCaseS != null">
		AND PCF.IS_DESCUSS = #{isDiscussCaseS}
		</if>
		<if test="chufaTimesS != null">
		<![CDATA[ AND PCF.CHUFA_TIMES > #{chufaTimesS} ]]>
		</if>
		<if test="isSeriousCaseS != null">
		AND PCF.IS_SERIOUS_CASE = #{isSeriousCaseS}
		</if>
		<if test="isBeyondEightyS != null">
		AND PCF.IS_BEYOND_EIGHTY = #{isBeyondEightyS}
		</if>
		<if test="isIdentifyS != null">
		  AND PCF.IS_IDENTIFY = #{isIdentifyS}
		</if>
		<if test="isLowerLimitMoneyS != null">
		AND PCF.IS_LOWER_LIMIT_MONEY = #{isLowerLimitMoneyS}
		</if>
		<if test="procKey != null and procKey=='chufaProc'">
		 AND (1=2
		<choose>
		  <when test="minAmountInvolved !=null and maxAmountInvolved !=null">
		    <![CDATA[ OR ( CB.AMOUNT_INVOLVED >= #{minAmountInvolved,jdbcType=DECIMAL}
		        AND CB.AMOUNT_INVOLVED <= #{maxAmountInvolved,jdbcType=DECIMAL} )
		    ]]>
		  </when>
		  <when test="minAmountInvolved !=null">
		    <![CDATA[ OR CB.AMOUNT_INVOLVED >= #{minAmountInvolved,jdbcType=DECIMAL} ]]>
		  </when>
		  <when test="maxAmountInvolved !=null">
		    <![CDATA[ OR CB.AMOUNT_INVOLVED <= #{maxAmountInvolved,jdbcType=DECIMAL} ]]>
		  </when>
		</choose>
		<choose>
		  <when test="minCaseInputTime !=null and maxCaseInputTime !=null">
		    <![CDATA[ OR (CB.INPUT_TIME >= #{minCaseInputTime,jdbcType=TIMESTAMP}
		         AND CB.INPUT_TIME < (#{maxCaseInputTime,jdbcType=TIMESTAMP} + INTERVAL '1' DAY) )
		    ]]>
		  </when>
		  <when test="minCaseInputTime !=null">
		    <![CDATA[ OR CB.INPUT_TIME >= #{minCaseInputTime,jdbcType=TIMESTAMP}]]>
		  </when>
		  <when test="maxCaseInputTime !=null">
		    <![CDATA[ OR CB.INPUT_TIME < (#{maxCaseInputTime,jdbcType=TIMESTAMP} + INTERVAL '1' DAY)]]>
		  </when>
		</choose>
		<if test="isDiscussCase!=null">
		  OR PCF.IS_DESCUSS = #{isDiscussCase}
		</if>
		<if test="chufaTimes!=null">
		  OR PCF.CHUFA_TIMES &gt; #{chufaTimes}
		</if>
		<if test="isSeriousCase!=null">
		  OR PCF.IS_SERIOUS_CASE = #{isSeriousCase}
		</if>
		<if test="isBeyondEighty!=null">
		  OR PCF.IS_BEYOND_EIGHTY = #{isBeyondEighty}
		</if>
		<if test="isLowerLimitMoney!=null">
		  OR PCF.IS_LOWER_LIMIT_MONEY = #{isLowerLimitMoney}
		</if>
		<if test="isIdentify != null">
		  OR PCF.IS_IDENTIFY = #{isIdentify}
		</if>
		)
		</if>	
	</select>
	<resultMap id="queryCompletedCaseListResultMap" type="com.ksource.liangfa.domain.CaseBasic">
		<id column="CASE_ID" jdbcType="VARCHAR" property="caseId" />
		<result column="CASE_NO" jdbcType="VARCHAR" property="caseNo" />
		<result column="CASE_NAME" jdbcType="VARCHAR" property="caseName" />
		<result column="INPUTER_NAME" jdbcType="VARCHAR" property="inputerName" />
    	<result column="INPUT_TIME" jdbcType="TIMESTAMP" property="inputTime" />
		<result column="INPUT_UNIT_NAME" jdbcType="VARCHAR" property="inputUnitName" />
		<result column="AMOUNT_INVOLVED" jdbcType="DECIMAL" property="amountInvolved" />
		<result column="CASE_STATE" jdbcType="VARCHAR" property="caseState" />
		<result column="PROC_KEY" jdbcType="VARCHAR" property="procKey" />
		<result column="LATEST_POCESS_TIME" jdbcType="TIMESTAMP" property="latestPocessTime" />
	</resultMap>
	<select id="queryCompletedCaseList" parameterType="java.util.Map" resultMap="queryCompletedCaseListResultMap">
		SELECT B.CASE_ID,B.CASE_NO,B.CASE_NAME,B.INPUT_TIME,B.AMOUNT_INVOLVED,B.CASE_STATE,U.USER_NAME AS INPUTER_NAME,
			   O.ORG_NAME AS INPUT_UNIT_NAME,B.PROC_KEY,B.LATEST_POCESS_TIME
		  FROM CASE_BASIC B,USER_ U,ORGANISE O,
			   (SELECT CASE_ID FROM CASE_STEP ,USER_
	      		WHERE ASSIGN_PERSON  = USER_ID
				AND ORG_ID = #{orgId}
				GROUP BY CASE_ID) T
	      WHERE B.CASE_ID = T.CASE_ID
	        AND B.INPUTER = U.USER_ID
	        AND B.INPUT_UNIT = O.ORG_CODE
			<if test="caseNo != null and caseNo != '' ">
			AND B.CASE_NO LIKE CONCAT(CONCAT('%',#{caseNo}),'%')
			</if>
			<if test="caseName != null and caseName != '' ">
			AND B.CASE_NAME LIKE CONCAT(CONCAT('%',#{caseName}),'%')
			</if>
			<if test="caseState != null and caseState != '' ">
			AND B.CASE_STATE = #{caseState}
			</if>			
			<if test="startTime != null and startTime != '' and startTime != 'null'">
				   AND B.INPUT_TIME &gt;= #{startTime,jdbcType=TIMESTAMP}
			</if>
			<if test="endTime != null and endTime != '' and endTime != 'null'">
				 <![CDATA[
				     AND B.INPUT_TIME  < #{endTime,jdbcType=TIMESTAMP} + interval   '1'  day
				 	]]>
			</if>
			ORDER BY B.LATEST_POCESS_TIME DESC
	</select>
	<select id="queryCompletedCaseCount" parameterType="java.util.Map" resultType="java.lang.Integer">
		SELECT COUNT(1)
		  FROM CASE_BASIC B,USER_ U,ORGANISE O,
			   (SELECT CASE_ID FROM CASE_STEP ,USER_
	      		WHERE ASSIGN_PERSON  = USER_ID
				AND ORG_ID = #{orgId}
				GROUP BY CASE_ID) T
	      WHERE B.CASE_ID = T.CASE_ID
	        AND B.INPUTER = U.USER_ID
	        AND B.INPUT_UNIT = O.ORG_CODE
			<if test="caseNo != null and caseNo != '' ">
			AND B.CASE_NO LIKE CONCAT(CONCAT('%',#{caseNo}),'%')
			</if>
			<if test="caseName != null and caseName != '' ">
			AND B.CASE_NAME LIKE CONCAT(CONCAT('%',#{caseName}),'%')
			</if>
			<if test="caseState != null and caseState != '' ">
			AND B.CASE_STATE = #{caseState}
			</if>			
			<if test="startTime != null and startTime != '' and startTime != 'null'">
				   AND B.INPUT_TIME &gt;= #{startTime,jdbcType=TIMESTAMP}
			</if>
			<if test="endTime != null and endTime != '' and endTime != 'null'">
				 <![CDATA[
				     AND B.INPUT_TIME  < #{endTime,jdbcType=TIMESTAMP} + interval   '1'  day
				 	]]>
			</if>
	</select>
		
	<sql id="caseBasicColumn">
		CB.CASE_ID,CB.CASE_NO,CB.CASE_NAME,CB.INPUTER,CB.INPUT_TIME,CB.INPUT_UNIT,
      CB.AMOUNT_INVOLVED,CB.CASE_DETAIL_NAME,CB.CASE_STATE,RECORD_SRC,
      CB.LATEST_POCESS_TIME,CB.PROC_KEY,CB.INPUT_TYPE,CB.VERSION_NO,
      CB.IS_ASSIGN,CB.ANFA_TIME,CB.ANFA_ADDRESS,CB.IS_SUSPECTED_CRIMINAL,
      CB.UNDERTAKER,CB.UNDERTAKER_TIME,CB.UNDERTAKER_SUGGEST
	</sql>
	<select id="getAudit" parameterType="string" resultMap="BaseResultMap">
		select <include refid="caseBasicColumn" /> 
		from case_basic cb where cb.case_id=#{caseId}
	</select>
	
	<update id="updateCaseStateByCaseId" parameterType="map">
		update case_basic
		set case_state=#{caseState}
		where case_id=#{caseId}
	</update>
	<select id="queryWarningData" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT SUM(CASE WHEN CASE_STATE = 10 THEN 1 ELSE 0 END) AS STANDED_COUNT
		FROM CASE_BASIC C,ORGANISE O
		WHERE C.INPUT_UNIT = O.ORG_CODE
		<if test="districtCode !=null and districtCode !='' ">
			AND O.DISTRICT_CODE LIKE CONCAT(#{districtCode},'%')
		</if>
	</select>
	

   		
	<resultMap id="getSuspectedCaseListResultMap" type="com.ksource.liangfa.domain.CaseBasic">
		<id column="CASE_ID" jdbcType="VARCHAR" property="caseId" />
		<result column="CASE_NO" jdbcType="VARCHAR" property="caseNo" />
		<result column="CASE_NAME" jdbcType="VARCHAR" property="caseName" />
		<result column="CASE_STATE" jdbcType="VARCHAR" property="caseState" />
   	 	<result column="INPUTER" jdbcType="VARCHAR" property="inputer" />
    	<result column="INPUT_TIME" jdbcType="TIMESTAMP" property="inputTime" />
    	<result column="INPUT_UNIT" jdbcType="DECIMAL" property="inputUnit" />
    	<result column="PROC_KEY" jdbcType="VARCHAR" property="procKey" />
    	<result column="AMOUNT_INVOLVED" jdbcType="DECIMAL" property="amountInvolved" />
		<result column="INPUT_UNIT_NAME" jdbcType="VARCHAR" property="inputUnitName" />
		<result column="DISTRICT_CODE" jdbcType="VARCHAR" property="districtCode" />
	</resultMap>
  	<select id="getSuspectedCaseList" parameterType="java.util.Map" resultMap="getSuspectedCaseListResultMap">
	  	SELECT DISTINCT CB.CASE_ID,CB.CASE_NO,CB.CASE_NAME,CB.CASE_STATE,CB.INPUTER,CB.INPUT_TIME,CB.INPUT_UNIT,
	  	CB.PROC_KEY,CB.AMOUNT_INVOLVED,O.ORG_NAME AS INPUT_UNIT_NAME,O.DISTRICT_CODE
	    FROM CASE_BASIC CB,ORGANISE O,CASE_STATE CT,
	    (SELECT DISTINCT S.CASE_ID,A.ACCUSE_ID FROM CASE_ACCUSE_RULE_RELATION S,ACCUSE_RULE_RELATION  A
	    	WHERE S.rule_id = A.rule_id) T
	    WHERE CB.INPUT_UNIT = O.ORG_CODE
	    AND CB.CASE_ID = T.CASE_ID
	    AND CB.CASE_ID = CT.CASE_ID
	    AND CB.IS_SUSPECTED_CRIMINAL = 1
	    <![CDATA[ AND CB.CASE_STATE  <= 4 ]]>
		<if test="caseNo != null and caseNo != '' ">
		AND CB.CASE_NO LIKE CONCAT(CONCAT('%',#{caseNo}),'%')
		</if>
		<if test="caseName != null and caseName != '' ">
		AND CB.CASE_NAME LIKE CONCAT(CONCAT('%',#{caseName}),'%')
		</if>
		<if test="orgPath != null and orgPath != '' ">
			AND O.ORG_PATH LIKE CONCAT(#{orgPath},'%')
		</if>
		<if test="districtId !=null and districtId !='' ">
			AND O.DISTRICT_CODE LIKE CONCAT(#{districtId},'%')
		</if>
		<if test="minCaseInputTime !=null">
			<![CDATA[ AND CB.INPUT_TIME >= #{minCaseInputTime,jdbcType=TIMESTAMP}]]>
		</if>
		<if test="maxCaseInputTime !=null">
			<![CDATA[ AND CB.INPUT_TIME < (#{maxCaseInputTime,jdbcType=TIMESTAMP} + INTERVAL '1' DAY)]]>
		</if>
    	<if test="accuseIdAry != null and accuseIdAry != ''">
       		AND T.ACCUSE_ID IN
       		<foreach close=")" collection="accuseIdAry" item="accuseId" open="(" separator=",">
       			#{accuseId}
       		</foreach>
         </if>
         ORDER BY O.DISTRICT_CODE ASC,CB.INPUT_TIME DESC
  	</select>

  	<select id="getSuspectedCaseCount" parameterType="java.util.Map" resultType="int">
	  	SELECT COUNT(DISTINCT CB.CASE_ID)
	    FROM CASE_BASIC CB,ORGANISE O,CASE_STATE CT,
	    (SELECT DISTINCT S.CASE_ID,A.ACCUSE_ID FROM CASE_ACCUSE_RULE_RELATION S,ACCUSE_RULE_RELATION  A
	    	WHERE S.rule_id = A.rule_id) T
	    WHERE CB.INPUT_UNIT = O.ORG_CODE
	    AND CB.CASE_ID = T.CASE_ID
	    AND CB.CASE_ID = CT.CASE_ID
	    AND CB.IS_SUSPECTED_CRIMINAL = 1
	    <![CDATA[ AND CB.CASE_STATE  <= 4 ]]>
		<if test="caseNo != null and caseNo != '' ">
		AND CB.CASE_NO LIKE CONCAT(CONCAT('%',#{caseNo}),'%')
		</if>
		<if test="caseName != null and caseName != '' ">
		AND CB.CASE_NAME LIKE CONCAT(CONCAT('%',#{caseName}),'%')
		</if>
		<if test="orgPath != null and orgPath != '' ">
			AND O.ORG_PATH LIKE CONCAT(#{orgPath},'%')
		</if>
		<if test="districtId !=null and districtId !='' ">
			AND O.DISTRICT_CODE LIKE CONCAT(#{districtId},'%')
		</if>
		<if test="minCaseInputTime !=null">
			<![CDATA[ AND CB.INPUT_TIME >= #{minCaseInputTime,jdbcType=TIMESTAMP}]]>
		</if>
		<if test="maxCaseInputTime !=null">
			<![CDATA[ AND CB.INPUT_TIME < (#{maxCaseInputTime,jdbcType=TIMESTAMP} + INTERVAL '1' DAY)]]>
		</if>
    	<if test="accuseIdAry != null and accuseIdAry != ''">
         	AND T.ACCUSE_ID IN
       		<foreach close=")" collection="accuseIdAry" item="accuseId" open="(" separator=",">
       			#{accuseId}
       		</foreach>
         </if>
  	</select>
  	
  	<resultMap id="getAmonutWarnCaseListResultMap" type="com.ksource.liangfa.domain.CaseBasic">
		<id column="CASE_ID" jdbcType="VARCHAR" property="caseId" />
		<result column="CASE_NO" jdbcType="VARCHAR" property="caseNo" />
		<result column="CASE_NAME" jdbcType="VARCHAR" property="caseName" />
		<result column="CASE_STATE" jdbcType="VARCHAR" property="caseState" />
    	<result column="INPUT_TIME" jdbcType="TIMESTAMP" property="inputTime" />
    	<result column="INPUT_UNIT" jdbcType="DECIMAL" property="inputUnit" />
    	<result column="PROC_KEY" jdbcType="VARCHAR" property="procKey" />
    	<result column="AMOUNT_INVOLVED" jdbcType="DECIMAL" property="amountInvolved" />
		<result column="INPUT_UNIT_NAME" jdbcType="VARCHAR" property="inputUnitName" />
		<result column="STAND_AMOUNT" jdbcType="DECIMAL" property="standAmount" />
  	</resultMap>
  	<select id="getAmonutWarnCaseList" parameterType="java.util.Map" resultMap="getAmonutWarnCaseListResultMap">
	  		SELECT C.CASE_ID,C.INPUT_UNIT,C.CASE_NO,C.CASE_NAME,C.CASE_STATE,C.INPUT_TIME,C.PROC_KEY,C.AMOUNT_INVOLVED,O.ORG_NAME AS INPUT_UNIT_NAME
	  		FROM CASE_BASIC C,ORGANISE O
	      	WHERE C.INPUT_UNIT = O.ORG_CODE
			<if test="caseNo != null and caseNo != '' ">
			AND C.CASE_NO LIKE CONCAT(CONCAT('%',#{caseNo}),'%')
			</if>
			<if test="caseName != null and caseName != '' ">
			AND C.CASE_NAME LIKE CONCAT(CONCAT('%',#{caseName}),'%')
			</if>
			<if test="conditionFormula != null and conditionFormula != '' ">
			 AND ${conditionFormula}
			</if>
			<if test="orgId!=null and orgId !='' and orgId != '-1'">
				AND O.ORG_CODE = #{orgId}
			</if>
           <if test="orgPath != null and orgPath !='' ">
                AND O.ORG_PATH LIKE concat(#{orgPath},'%')
           </if>			
			<if test="districtId !=null and districtId !='' ">
				and O.district_code like concat(#{districtId},'%')
			</if>
			<choose>
				<when test="minCaseInputTime !=null and maxCaseInputTime !=null">
					<![CDATA[ and ( C.INPUT_TIME >= #{minCaseInputTime,jdbcType=TIMESTAMP}
							 and C.INPUT_TIME < (#{maxCaseInputTime,jdbcType=TIMESTAMP} +   interval   '1'  day) )
					]]>
				</when>
				<when test="minCaseInputTime !=null">
					<![CDATA[ and C.INPUT_TIME >= #{minCaseInputTime,jdbcType=TIMESTAMP}]]>
				</when>
				<when test="maxCaseInputTime !=null">
					<![CDATA[ and C.INPUT_TIME < (#{maxCaseInputTime,jdbcType=TIMESTAMP} +   interval   '1'  day)]]>
				</when>
			</choose>		      		
  	</select>
  	
  	<select id="getAmonutWarnCaseCount" parameterType="java.util.Map" resultType="java.lang.Integer">
		  SELECT COUNT(1)
		  FROM CASE_BASIC C,ORGANISE O
		      WHERE C.INPUT_UNIT = O.ORG_CODE
				<if test="caseNo != null and caseNo != '' ">
				AND C.CASE_NO LIKE CONCAT(CONCAT('%',#{caseNo}),'%')
				</if>
				<if test="caseName != null and caseName != '' ">
				AND C.CASE_NAME LIKE CONCAT(CONCAT('%',#{caseName}),'%')
				</if>
				<if test="orgId!=null and orgId !='' and orgId != '-1'">
					AND O.ORG_CODE = #{orgId}
				</if>
				<if test="orgPath != null and orgPath !='' ">
				     AND O.ORG_PATH LIKE concat(#{orgPath},'%')
				</if>
				<if test="conditionFormula != null and conditionFormula != '' ">
                    AND ${conditionFormula}
                </if>
				<if test="districtId !=null and districtId !='' ">
					and O.district_code like concat(#{districtId},'%')
				</if>
				<choose>
					<when test="minCaseInputTime !=null and maxCaseInputTime !=null">
						<![CDATA[ and ( C.INPUT_TIME >= #{minCaseInputTime,jdbcType=TIMESTAMP}
								 and C.INPUT_TIME < (#{maxCaseInputTime,jdbcType=TIMESTAMP} +   interval   '1'  day) )
						]]>
					</when>
					<when test="minCaseInputTime !=null">
						<![CDATA[ and C.INPUT_TIME >= #{minCaseInputTime,jdbcType=TIMESTAMP}]]>
					</when>
					<when test="maxCaseInputTime !=null">
						<![CDATA[ and C.INPUT_TIME < (#{maxCaseInputTime,jdbcType=TIMESTAMP} +   interval   '1'  day)]]>
					</when>
				</choose>
  	</select>
  	
  	
  	<resultMap id="getJieanCaseListResultMap" type="com.ksource.liangfa.domain.CaseBasic">
		<id column="CASE_ID" jdbcType="VARCHAR" property="caseId" />
		<result column="CASE_NO" jdbcType="VARCHAR" property="caseNo" />
		<result column="CASE_NAME" jdbcType="VARCHAR" property="caseName" />
		<result column="CASE_STATE" jdbcType="VARCHAR" property="caseState" />
    	<result column="INPUT_TIME" jdbcType="TIMESTAMP" property="inputTime" />
    	<result column="INPUT_UNIT" jdbcType="DECIMAL" property="inputUnit" />
    	<result column="PROC_KEY" jdbcType="VARCHAR" property="procKey" />
		<result column="INPUT_UNIT_NAME" jdbcType="VARCHAR" property="inputUnitName" />
  	</resultMap>
  	<select id="getJieanCaseList" parameterType="java.util.Map" resultMap="getJieanCaseListResultMap">
  		SELECT C.CASE_ID,C.CASE_NO,C.CASE_NAME,C.INPUT_TIME,C.CASE_STATE,C.PROC_KEY,O.ORG_NAME as INPUT_UNIT_NAME
  		FROM CASE_BASIC C,CASE_STATE S, USER_ U,ORGANISE O
      	WHERE C.CASE_ID = S.CASE_ID
      	AND C.INPUTER = U.USER_ID
      	AND U.ORG_ID = O.ORG_CODE
      	AND S.JIEAN_STATE=2
		<if test="caseNo != null and caseNo != '' ">
			AND C.CASE_NO LIKE CONCAT(CONCAT('%',#{caseNo}),'%')
		</if>
		<if test="caseName != null and caseName != '' ">
			AND C.CASE_NAME LIKE CONCAT(CONCAT('%',#{caseName}),'%')
		</if>
		<if test="orgId!=null and orgId !='' and orgId != '-1'">
			AND (O.ORG_CODE = #{orgId} OR O.UP_ORG_CODE = #{orgId})
		</if>
		<if test="districtId !=null and districtId !='' ">
			and O.district_code like concat(#{districtId},'%')
		</if>
		<if test="orgPath !=null and orgPath !='' ">
			AND O.ORG_PATH LIKE concat(#{orgPath},'%')
		</if>
		<choose>
			<when test="startTime !=null and endTime !=null">
				<![CDATA[ and ( C.INPUT_TIME >= #{startTime,jdbcType=TIMESTAMP}
						 and C.INPUT_TIME < (#{endTime,jdbcType=TIMESTAMP} +   interval   '1'  day) )
				]]>
			</when>
			<when test="startTime !=null">
				<![CDATA[ and C.INPUT_TIME >= #{startTime,jdbcType=TIMESTAMP}]]>
			</when>
			<when test="endTime !=null">
				<![CDATA[ and C.INPUT_TIME < (#{endTime,jdbcType=TIMESTAMP} +   interval   '1'  day)]]>
			</when>
		</choose>	
		ORDER BY C.INPUT_TIME DESC	      	
  	</select>
  	
  	<select id="getJieanCaseCount" parameterType="java.util.Map" resultType="java.lang.Integer">
		SELECT COUNT(1)
		FROM CASE_BASIC C,CASE_STATE S, USER_ U,ORGANISE O
	    WHERE C.CASE_ID = S.CASE_ID
	    AND C.INPUTER = U.USER_ID
	    AND U.ORG_ID = O.ORG_CODE
	    AND S.JIEAN_STATE=2
		<if test="caseNo != null and caseNo != '' ">
			AND C.CASE_NO LIKE CONCAT(CONCAT('%',#{caseNo}),'%')
		</if>
		<if test="caseName != null and caseName != '' ">
			AND C.CASE_NAME LIKE CONCAT(CONCAT('%',#{caseName}),'%')
		</if>
		<if test="orgId!=null and orgId !='' and orgId != '-1'">
			AND (O.ORG_CODE = #{orgId} OR O.UP_ORG_CODE = #{orgId})
		</if>
		<if test="districtId !=null and districtId !='' ">
			and O.district_code like concat(#{districtId},'%')
		</if>
		<if test="orgPath !=null and orgPath !='' ">
			AND O.ORG_PATH LIKE concat(#{orgPath},'%')
		</if>
		<choose>
			<when test="startTime !=null and endTime !=null">
				<![CDATA[ and ( C.INPUT_TIME >= #{startTime,jdbcType=TIMESTAMP}
						 and C.INPUT_TIME < (#{endTime,jdbcType=TIMESTAMP} +   interval   '1'  day) )
				]]>
			</when>
			<when test="startTime !=null">
				<![CDATA[ and C.INPUT_TIME >= #{startTime,jdbcType=TIMESTAMP}]]>
			</when>
			<when test="endTime !=null">
				<![CDATA[ and C.INPUT_TIME < (#{endTime,jdbcType=TIMESTAMP} +   interval   '1'  day)]]>
			</when>
		</choose>		      
  	</select>
	
	<resultMap id="getCaseTurnoverListResultMap" extends="BaseResultMap" type="com.ksource.liangfa.domain.CaseBasic">
		<result column="INPUT_ORG_NAME" jdbcType="VARCHAR" property="inputOrgName" />
		<result column="JIESHOU_ORG_NAME" jdbcType="VARCHAR" property="jieshouOrgName" />
	</resultMap>
	  <!-- 我的移送管辖列表 -->
	  <select id="getCaseTurnoverList" parameterType="java.util.Map" resultMap="getCaseTurnoverListResultMap">
	  	SELECT 
	    C.CASE_ID,C.CASE_NAME,C.CASE_NO,C.ANFA_TIME,C.INPUT_TIME,C.CASE_STATE,C.AMOUNT_INVOLVED,
	    (SELECT O.ORG_NAME FROM ORGANISE O WHERE O.ORG_CODE=C.INPUT_UNIT) AS INPUT_ORG_NAME, 
	    (SELECT O.ORG_NAME FROM ORGANISE O WHERE O.ORG_CODE=CT.JIESHOU_ORG) AS JIESHOU_ORG_NAME
	    FROM CASE_BASIC C,CASE_TURNOVER CT
	    WHERE C.CASE_ID=CT.CASE_ID
	    <if test="caseName != null">
	    	AND C.CASE_NAME LIKE concat(concat('%',#{caseName}),'%')
	    </if>
	  	<if test="caseNo != null">
	    	AND C.CASE_NO LIKE concat(concat('%',#{caseNo}),'%')
	    </if>
	    <if test="assignOrg != null">
	    	AND C.ASSIGN_ORG = #{assignOrg}
	    </if>
	    <if test="startTime != null">
	    	AND <![CDATA[ C.INPUT_TIME>=#{startTime} ]]>
	    </if>
	    <if test="endTime!=null ">
	    	AND <![CDATA[ C.INPUT_TIME < #{endTime}+ interval '1' day ]]>
	    </if>
	    <if test="caseState!=null">
	    	 AND C.CASE_STATE=#{caseState}
	    </if>
	    <if test="isTurnover != null">
	    	AND C.IS_TURNOVER=#{isTurnover}
	    </if>
	    <if test="inputUnit != null">
	    	AND C.INPUT_UNIT=#{inputUnit}
	    </if>
	    order by C.LATEST_POCESS_TIME desc
	  </select>
	  <select id="getCaseTurnoverCount" parameterType="java.util.Map" resultType="int" >
	  	SELECT COUNT(1) FROM CASE_BASIC C,CASE_TURNOVER CT
	    WHERE C.CASE_ID=CT.CASE_ID
	    <if test="caseName != null">
	    	AND C.CASE_NAME LIKE concat(concat('%',#{caseName}),'%')
	    </if>
	  	<if test="caseNo != null">
	    	AND C.CASE_NO LIKE concat(concat('%',#{caseNo}),'%')
	    </if>
	    <if test="assignOrg != null">
	    	AND C.ASSIGN_ORG = #{assignOrg}
	    </if>
	    <if test="startTime != null">
	    	AND <![CDATA[ C.INPUT_TIME>=#{startTime} ]]>
	    </if>
	    <if test="endTime!=null ">
	    	AND <![CDATA[ C.INPUT_TIME < #{endTime}+ interval '1' day ]]>
	    </if>
	    <if test="caseState!=null">
	    	 AND C.CASE_STATE=#{caseState}
	    </if>
	    <if test="isTurnover != null">
	    	AND C.IS_TURNOVER=#{isTurnover}
	    </if>
	    <if test="inputUnit != null">
	    	AND C.INPUT_UNIT=#{inputUnit}
	    </if>
	    order by C.LATEST_POCESS_TIME desc
	  </select>
	  
	  <resultMap id="getCaseFenpaiListResultMap" extends="BaseResultMap" type="com.ksource.liangfa.domain.CaseBasic">
		<result column="INPUT_ORG_NAME" jdbcType="VARCHAR" property="inputOrgName" />
	  </resultMap>
	  <!-- 我的分派列表 -->
	  <select id="getCaseFenpaiList" parameterType="java.util.Map" resultMap="getCaseFenpaiListResultMap">
	  	SELECT 
	    C.CASE_ID,C.CASE_NAME,C.CASE_NO,C.ANFA_TIME,C.INPUT_TIME,C.CASE_STATE,C.AMOUNT_INVOLVED,
	    (SELECT O.ORG_NAME FROM ORGANISE O WHERE O.ORG_CODE=C.INPUT_UNIT) AS INPUT_ORG_NAME 
	    FROM CASE_BASIC C,CASE_FENPAI CF
	    WHERE C.CASE_ID=CF.CASE_ID
	    <if test="caseName != null">
	    	AND C.CASE_NAME LIKE concat(concat('%',#{caseName}),'%')
	    </if>
	  	<if test="caseNo != null">
	    	AND C.CASE_NO LIKE concat(concat('%',#{caseNo}),'%')
	    </if>
	    <if test="fenpaiOrg != null">
	    	AND CF.fenpai_ORG = #{fenpaiOrg}
	    </if>
	    <if test="startTime != null">
	    	AND <![CDATA[ C.INPUT_TIME>=#{startTime} ]]>
	    </if>
	    <if test="endTime!=null ">
	    	AND <![CDATA[ C.INPUT_TIME < #{endTime}+ interval '1' day ]]>
	    </if>
	    <if test="caseState!=null">
	    	 AND C.CASE_STATE=#{caseState}
	    </if>
	    <if test="inputUnit != null">
	    	AND C.INPUT_UNIT=#{inputUnit}
	    </if>
	    <if test="isAssign != null">
	    	AND C.IS_ASSIGN=#{isAssign}
	    </if>
	    order by C.LATEST_POCESS_TIME desc
	  </select>
	  <select id="getCaseFenpaiCount" parameterType="java.util.Map" resultType="int" >
	  	SELECT COUNT(1) FROM CASE_BASIC C,CASE_FENPAI CF
	    WHERE C.CASE_ID=CF.CASE_ID
	    <if test="caseName != null">
	    	AND C.CASE_NAME LIKE concat(concat('%',#{caseName}),'%')
	    </if>
	  	<if test="caseNo != null">
	    	AND C.CASE_NO LIKE concat(concat('%',#{caseNo}),'%')
	    </if>
	   <if test="fenpaiOrg != null">
	    	AND CF.fenpai_ORG = #{fenpaiOrg}
	    </if>
	    <if test="startTime != null">
	    	AND <![CDATA[ C.INPUT_TIME>=#{startTime} ]]>
	    </if>
	    <if test="endTime!=null ">
	    	AND <![CDATA[ C.INPUT_TIME < #{endTime}+ interval '1' day ]]>
	    </if>
	    <if test="caseState!=null">
	    	 AND C.CASE_STATE=#{caseState}
	    </if>
	    <if test="inputUnit != null">
	    	AND C.INPUT_UNIT=#{inputUnit}
	    </if>
	    <if test="isAssign != null">
	    	AND C.IS_ASSIGN=#{isAssign}
	    </if>
	    order by C.LATEST_POCESS_TIME desc
	  </select>
	  <resultMap type="com.ksource.liangfa.domain.CaseBasic" id="getFenpaiInfoResultMap" extends="BaseResultMap">
	  	<result column="INPUT_ORG_NAME" jdbcType="VARCHAR" property="inputOrgName" />
    	<result column="FENPAI_ORG_NAME" jdbcType="VARCHAR" property="fenpaiOrgName" />
    	<result column="JIESHOU_ORG_NAME" jdbcType="VARCHAR" property="jieshouOrgName" />
    	<result column="FENPAI_TIME" jdbcType="TIMESTAMP" property="fenpaiTime" />
	  </resultMap>
	  <select id="getFenpaiInfo" parameterType="java.lang.String" resultMap="getFenpaiInfoResultMap">
	  	SELECT 
		  c.CASE_NO,
		  c.CASE_NAME,
		  c.INPUT_TIME,
		  cf.FENPAI_TIME,
		  (SELECT o.ORG_NAME FROM ORGANISE o WHERE o.ORG_CODE=c.INPUT_UNIT) AS input_org_name,
		  (SELECT o.ORG_NAME FROM ORGANISE o WHERE o.ORG_CODE=cf.FENPAI_ORG) AS fenpai_org_name,
		  (SELECT o.ORG_NAME FROM ORGANISE o WHERE o.ORG_CODE=cf.JIESHOU_ORG) AS jieshou_org_name
		  FROM CASE_BASIC c,CASE_FENPAI cf
		  WHERE c.CASE_ID=cf.CASE_ID AND c.CASE_ID=#{caseId}
	  </select>
	   
	  <resultMap type="com.ksource.liangfa.domain.CaseBasic" id="getYiSongGuanXiaInfoResultMap">
	  	<result column="INPUT_TIME" jdbcType="TIMESTAMP" property="inputTime" />
	  	<result column="YISONG_TIME" jdbcType="TIMESTAMP" property="yisongTime" />
	  	<result column="INPUT_ORG_NAME" jdbcType="VARCHAR" property="inputOrgName" />
	  	<result column="JIESHOU_ORG_NAME" jdbcType="VARCHAR" property="jieshouOrgName" />
	  </resultMap>
	  <!-- 移送管辖步骤信息展示 -->
	  <select id="getYiSongGuanXiaInfo" parameterType="java.lang.String" resultMap="getYiSongGuanXiaInfoResultMap">
		  SELECT C.INPUT_TIME,
	          CT.YISONG_TIME,
	          (SELECT O.ORG_NAME FROM ORGANISE O WHERE O.ORG_CODE = C.INPUT_UNIT) AS INPUT_ORG_NAME,
			  (SELECT O.ORG_NAME FROM ORGANISE O WHERE O.ORG_CODE = CT.JIESHOU_ORG) AS JIESHOU_ORG_NAME
			  FROM CASE_BASIC C, CASE_TURNOVER CT
			  WHERE C.CASE_ID = CT.CASE_ID
			  AND C.CASE_ID=#{caseId}
	  </select>
	  
  <select id="getTimeOutCount" parameterType="java.util.Map" resultType="java.lang.Integer">
    SELECT COUNT(1) from (
        SELECT T.CREATE_TIME, O.DISTRICT_CODE
          FROM CASE_TODO T, CASE_BASIC C, ORGANISE O
         WHERE T.ASSIGN_ORG = O.ORG_CODE
           AND T.CASE_ID = C.CASE_ID
           <if test="orgPath != null">
		        AND O.ORG_PATH LIKE concat(#{orgPath},'%')
		   </if>
           )
    WHERE DISTRICT_CODE LIKE #{districtCode}||'%'
    AND ${conditionFormula}
  </select>
  
  
  <select id="queryTimeOutWarnCaseCount" parameterType="java.util.Map" resultType="java.lang.Integer">
    SELECT COUNT(1) from (
        SELECT T.CREATE_TIME, O.DISTRICT_CODE
          FROM CASE_TODO T, CASE_BASIC C, ORGANISE O,CASE_STATE S
         WHERE T.ASSIGN_ORG = O.ORG_CODE
           AND T.CASE_ID = C.CASE_ID
           AND C.CASE_ID = S.CASE_ID
           AND S.JIEAN_STATE = 1
        <if test="caseName != null">
            AND C.CASE_NAME LIKE CONCAT(CONCAT('%',#{caseName}),'%')
        </if>
        <if test="caseNo != null">
            AND C.CASE_NO LIKE CONCAT(CONCAT('%',#{caseNo}),'%')
        </if>
        <if test="districtId !=null and districtId !='' ">
             AND O.DISTRICT_CODE LIKE #{districtId}||'%'
        </if>
        <if test="orgPath!=null and orgPath !=''">
            AND O.ORG_PATH LIKE CONCAT(#{orgPath},'%')
        </if>
        <if test="orgId!=null and orgId !=''">
            AND O.ORG_CODE = #{orgId}
        </if>        
        <if test="startTime!=null and startTime!=''">
                <![CDATA[AND C.INPUT_TIME>=#{startTime,jdbcType=TIMESTAMP}]]>
        </if>
        <if test="endTime!=null and endTime!=''">
                <![CDATA[AND C.INPUT_TIME<(#{endTime,jdbcType=TIMESTAMP} + INTERVAL '1' DAY)]]>
        </if>        
           )
    WHERE ${conditionFormula}
  </select>
  <resultMap type="com.ksource.liangfa.domain.CaseBasic" id="queryTimeOutWarnCaseListResultMap">
        <id column="CASE_ID" jdbcType="VARCHAR" property="caseId" />
        <result column="CASE_NO" jdbcType="VARCHAR" property="caseNo" />
        <result column="CASE_NAME" jdbcType="VARCHAR" property="caseName" />
        <result column="CASE_STATE" jdbcType="VARCHAR" property="caseState" />
        <result column="INPUT_TIME" jdbcType="TIMESTAMP" property="inputTime" />
        <result column="PROC_KEY" jdbcType="VARCHAR" property="procKey" />
        <result column="INPUT_UNIT_NAME" jdbcType="VARCHAR" property="inputUnitName" />
        <result column="LATEST_POCESS_TIME" jdbcType="TIMESTAMP" property="latestPocessTime" />
        <result column="TIME_OUT_DAYS" jdbcType="DECIMAL" property="timeoutDays" />
  </resultMap>
  <select id="queryTimeOutWarnCaseList" parameterType="java.util.Map" resultMap="queryTimeOutWarnCaseListResultMap">
    SELECT CASE_ID,CASE_NO,CASE_NAME,CASE_STATE,INPUT_TIME,PROC_KEY,CREATE_TIME AS LATEST_POCESS_TIME,INPUT_UNIT_NAME,DISTRICT_CODE, 
    FLOOR(TO_NUMBER(SYSDATE - (CREATE_TIME + 0)-60)) as TIME_OUT_DAYS
    from (
        SELECT C.CASE_ID,C.CASE_NO,C.CASE_NAME,C.CASE_STATE,C.INPUT_TIME,C.PROC_KEY,T.CREATE_TIME,
        (SELECT ORG_NAME FROM ORGANISE WHERE ORG_CODE=C.INPUT_UNIT) AS INPUT_UNIT_NAME,
        O.DISTRICT_CODE
          FROM CASE_TODO T, CASE_BASIC C, ORGANISE O,CASE_STATE S
         WHERE T.ASSIGN_ORG = O.ORG_CODE
           AND T.CASE_ID = C.CASE_ID
           AND C.CASE_ID = S.CASE_ID
           AND S.JIEAN_STATE = 1
        <if test="caseName != null">
            AND C.CASE_NAME LIKE CONCAT(CONCAT('%',#{caseName}),'%')
        </if>
        <if test="caseNo != null">
            AND C.CASE_NO LIKE CONCAT(CONCAT('%',#{caseNo}),'%')
        </if>
        <if test="districtId !=null and districtId !='' ">
             AND O.DISTRICT_CODE LIKE #{districtId}||'%'
        </if>
        <if test="orgPath!=null and orgPath !=''">
            AND O.ORG_PATH LIKE CONCAT(#{orgPath},'%')
        </if>
        <if test="orgId!=null and orgId !=''">
            AND O.ORG_CODE = #{orgId}
        </if>        
        <if test="startTime!=null and startTime!=''">
                <![CDATA[AND C.INPUT_TIME>=#{startTime,jdbcType=TIMESTAMP}]]>
        </if>
        <if test="endTime!=null and endTime!=''">
                <![CDATA[AND C.INPUT_TIME<(#{endTime,jdbcType=TIMESTAMP} + INTERVAL '1' DAY)]]>
        </if>         
           )
    WHERE ${conditionFormula} 
    ORDER BY CREATE_TIME DESC
  </select>
  
  <select id="getAmountWarnCount" parameterType="java.util.Map" resultType="java.lang.Integer">
     SELECT COUNT(1) from CASE_BASIC,ORGANISE
     WHERE INPUT_UNIT = ORG_CODE
       AND DISTRICT_CODE LIKE #{districtCode}||'%'
       AND ${conditionFormula}
  </select>
  
  <select id="getDelayWarnCount" parameterType="java.util.Map" resultType="java.lang.Integer">
     SELECT COUNT(1) from CASE_BASIC C,ORGANISE O,CRIME_CASE_FORM CC
     WHERE C.INPUT_UNIT = O.ORG_CODE
       AND C.CASE_ID = CC.CASE_ID
       AND C.CASE_STATE = 10
       <if test="acceptOrg != null and acceptOrg != '' ">
          AND CC.ACCEPT_ORG = #{acceptOrg}
       </if>
       AND O.DISTRICT_CODE LIKE #{districtCode}||'%'
       AND ${conditionFormula}
  </select>
    
    
    <resultMap type="com.ksource.liangfa.domain.CaseBasic" id="queryAllCaseListMap">
        <result column="CASE_ID" jdbcType="VARCHAR" property="caseId" />
        <result column="CASE_NO" jdbcType="VARCHAR" property="caseNo" />
        <result column="CASE_NAME" jdbcType="VARCHAR" property="caseName" />
        <result column="CASE_STATE" jdbcType="VARCHAR" property="caseState" />
        <result column="INPUT_TIME" jdbcType="TIMESTAMP" property="inputTime" />
        <result column="INPUT_UNIT_NAME" jdbcType="VARCHAR" property="inputUnitName" />
    </resultMap>
    <select id="queryAllCaseList" parameterType="map" resultMap="queryAllCaseListMap">
		SELECT CB.CASE_ID,
           CB.CASE_NO,
           CB.CASE_NAME,
           CB.CASE_STATE,
           CB.INPUT_TIME,
           U.ORG_NAME AS INPUT_UNIT_NAME
   		 FROM CASE_BASIC CB,CASE_STATE CS,V_USER_ORGANISE_DISTRICT U
   		WHERE CB.CASE_ID=CS.CASE_ID
   		 AND CB.INPUTER=U.USER_ID
		<if test="districtCode!=null and districtCode!='' ">
			AND U.DISTRICT_CODE LIKE #{districtCode}||'%' 
		</if>
		<if test="orgPath!=null">
			AND U.ORG_PATH LIKE #{orgPath} ||'%'
		</if>
		<if test="condition != null and condition!='' ">
			AND (INSTR(CB.CASE_NO,#{condition})> 0 OR INSTR(CB.CASE_NAME,#{condition})> 0)
		</if>
	    <if test="startTimeApp != null and startTimeApp!='' and startTimeApp!='null'">
			<![CDATA[
			   AND CB.INPUT_TIME >= TO_DATE(#{startTimeApp},'yyyy-MM-dd')
			 	]]>
		</if>
		<if test="endTimeApp != null and endTimeApp!='' and endTimeApp!='null'">
			 <![CDATA[
			     AND CB.INPUT_TIME  < TO_DATE(#{endTimeApp},'yyyy-MM-dd') + INTERVAL '1' DAY
			 	]]>
		</if>
		<if test="caseState!=null">
			AND CB.CASE_STATE =#{caseState}
		</if>
		<if test="yisongState!=null">
			AND CS.YISONG_STATE =#{yisongState}
		</if>
		<if test="industryType != null and industryType!='' ">
		    AND U.INDUSTRY_TYPE = #{industryType}
		</if>
		<if test="xingzhenglianState!=null">
			AND CS.XINGZHENGLIAN_STATE =#{xingzhenglianState}
		</if>
		<if test="chufaState!=null">
			AND CS.CHUFA_STATE =#{chufaState}
		</if>
		<if test="lianState!=null">
			AND CS.LIAN_STATE =#{lianState}
		</if>
		<if test="daibuState!=null">
			AND CS.DAIBU_STATE =#{daibuState}
		</if>
		<if test="qisuState!=null">
			AND CS.QISU_STATE =#{qisuState}
		</if>
		<if test="panjueState!=null">
			AND CS.PANJUE_STATE =#{panjueState}
		</if>
		<if test="yisongAllState!=null">
			AND CS.YISONG_STATE IN (2,3)
		</if>	
		ORDER BY U.DISTRICT_CODE ASC,CB.INPUT_TIME DESC
	</select>
	<select id="queryAllCaseCount" parameterType="map" resultType="java.lang.Integer">
		 SELECT COUNT(CB.CASE_ID) 
		 FROM CASE_BASIC CB,CASE_STATE CS,V_USER_ORGANISE_DISTRICT U
    	 WHERE CB.CASE_ID=CS.CASE_ID
   		 AND CB.INPUTER=U.USER_ID
		<if test="districtCode!=null and districtCode!='' ">
			AND U.DISTRICT_CODE LIKE #{districtCode}||'%' 
		</if>
		<if test="orgPath!=null">
			AND U.ORG_PATH LIKE #{orgPath} ||'%'
		</if>
		<if test="condition != null and condition!='' ">
			AND (INSTR(CB.CASE_NO,#{condition})> 0 OR INSTR(CB.CASE_NAME,#{condition})> 0)
		</if>
		<if test="startTimeApp != null and startTimeApp!='' and startTimeApp!='null'">
			<![CDATA[
			   AND CB.INPUT_TIME >= TO_DATE(#{startTimeApp},'yyyy-MM-dd')
			 	]]>
		</if>
		<if test="endTimeApp != null and endTimeApp!='' and endTimeApp!='null'">
			 <![CDATA[
			     AND CB.INPUT_TIME  < TO_DATE(#{endTimeApp},'yyyy-MM-dd') + INTERVAL '1' DAY
			 	]]>
		</if>
		<if test="caseState!=null">
			AND CB.CASE_STATE =#{caseState}
		</if>
		<if test="yisongState!=null">
			AND CS.YISONG_STATE =#{yisongState}
		</if>
		<if test="industryType != null and industryType!='' ">
		    AND U.INDUSTRY_TYPE = #{industryType}
		</if>
		<if test="xingzhenglianState!=null">
			AND CS.XINGZHENGLIAN_STATE =#{xingzhenglianState}
		</if>
		<if test="chufaState!=null">
			AND CS.CHUFA_STATE =#{chufaState}
		</if>
		<if test="lianState!=null">
			AND CS.LIAN_STATE =#{lianState}
		</if>
		<if test="daibuState!=null">
			AND CS.DAIBU_STATE =#{daibuState}
		</if>
		<if test="qisuState!=null">
			AND CS.QISU_STATE =#{qisuState}
		</if>
		<if test="panjueState!=null">
			AND CS.PANJUE_STATE =#{panjueState}
		</if>
		<if test="yisongAllState!=null">
			AND CS.YISONG_STATE IN (2,3)
		</if>	
	</select>
	
	
	<resultMap id="getAdministratorAcceptCaseMap" type="com.ksource.liangfa.domain.CaseBasic">
        <result column="CASE_ID" jdbcType="VARCHAR" property="caseId" />
        <result column="CASE_NO" jdbcType="VARCHAR" property="caseNo" />
        <result column="CASE_NAME" jdbcType="VARCHAR" property="caseName" />
	    <result column="ANFA_TIME" jdbcType="TIMESTAMP" property="anfaTime" />
	    <result column="CASE_DETAIL_NAME" jdbcType="CLOB" property="caseDetailName" />
        <result column="RECORD_SRC" jdbcType="VARCHAR" property="recordSrc" />
	    <result column="ANFA_ADDRESS" jdbcType="VARCHAR" property="anfaAddress" />
	    <result column="UNDERTAKER_SUGGEST" jdbcType="VARCHAR" property="undertakerSuggest" />
	    <result column="UNDERTAKER" jdbcType="VARCHAR" property="undertaker" />
	    <result column="UNDERTAKER_TIME" jdbcType="TIMESTAMP" property="undertakerTime" />
	    <result column="ANFAADDRESSNAME" jdbcType="VARCHAR" property="anfaAddressName" />
	    <result column="TRANSACTPERSON" jdbcType="VARCHAR" property="transactPerson" />
	    <result column="TRANSACTTIME" jdbcType="TIMESTAMP" property="transactTime" />
    </resultMap>
    <select id="getAdministratorAcceptCase" parameterType="map" resultMap="getAdministratorAcceptCaseMap">
		SELECT C.CASE_ID, C.CASE_NO,C.CASE_NAME,C.ANFA_TIME,C.CASE_DETAIL_NAME,C.UNDERTAKER,C.UNDERTAKER_TIME,C.UNDERTAKER_SUGGEST,
		C.RECORD_SRC,
		(SELECT D.DISTRICT_NAME FROM DISTRICT D WHERE D.DISTRICT_CODE=C.ANFA_ADDRESS) as ANFAADDRESSNAME,
		(SELECT U.USER_NAME FROM USER_ U WHERE U.USER_ID=P.ASSIGN_PERSON) AS TRANSACTPERSON,
		P.END_DATE AS TRANSACTTIME 
		FROM CASE_BASIC C,CASE_STEP P
		WHERE C.CASE_ID=P.CASE_ID
		<if test="caseId!=null">
			AND C.CASE_ID =#{caseId}
		</if>
		<if test="stepId!=null">
			AND P.STEP_ID =#{stepId}
		</if>
	</select>
	
  	<select id="analyCaseBasicList" parameterType="java.util.Map" resultMap="getSuspectedCaseListResultMap">
	  	SELECT DISTINCT CB.CASE_ID,CB.CASE_NO,CB.CASE_NAME,CB.CASE_STATE,CB.INPUTER,CB.INPUT_TIME,CB.INPUT_UNIT,
	  	CB.PROC_KEY,CB.AMOUNT_INVOLVED,O.ORG_NAME AS INPUT_UNIT_NAME,O.DISTRICT_CODE
	    FROM CASE_BASIC CB,ORGANISE O,CASE_STATE CT,
	    (SELECT DISTINCT S.CASE_ID,A.ACCUSE_ID FROM CASE_ILLEGAL_SITUATION S,ILLEGAL_SITUATION_ACCUSE  A
	    	WHERE S.SITUATION_ID = A.ILLEGAL_SITUATION_ID) T
	    WHERE CB.INPUT_UNIT = O.ORG_CODE
	    AND CB.CASE_ID = T.CASE_ID
	    AND CB.CASE_ID = CT.CASE_ID
	    AND CB.IS_SUSPECTED_CRIMINAL = 1
	    <![CDATA[ AND CB.CASE_STATE  <= 4 ]]>
		<if test="caseNo != null and caseNo != '' ">
		AND CB.CASE_NO LIKE CONCAT(CONCAT('%',#{caseNo}),'%')
		</if>
		<if test="caseName != null and caseName != '' ">
		AND CB.CASE_NAME LIKE CONCAT(CONCAT('%',#{caseName}),'%')
		</if>
		<if test="orgPath != null and orgPath != '' ">
			AND O.ORG_PATH LIKE CONCAT(#{orgPath},'%')
		</if>
		<if test="districtId !=null and districtId !='' ">
			AND O.DISTRICT_CODE LIKE CONCAT(#{districtId},'%')
		</if>
		<if test="minCaseInputTime !=null">
			<![CDATA[ AND CB.INPUT_TIME >= #{minCaseInputTime,jdbcType=TIMESTAMP}]]>
		</if>
		<if test="maxCaseInputTime !=null">
			<![CDATA[ AND CB.INPUT_TIME < (#{maxCaseInputTime,jdbcType=TIMESTAMP} + INTERVAL '1' DAY)]]>
		</if>
    	<if test="accuseIdAry != null and accuseIdAry != ''">
       		AND T.ACCUSE_ID IN
       		<foreach close=")" collection="accuseIdAry" item="accuseId" open="(" separator=",">
       			#{accuseId}
       		</foreach>
         </if>
         ORDER BY O.DISTRICT_CODE ASC,CB.INPUT_TIME DESC
  	</select>
  	<update id="updateClueId" parameterType="java.lang.Integer">
  		UPDATE CASE_BASIC CB SET CB.CLUE_ID = NULL WHERE CB.CLUE_ID = #{clueId, jdbcType=NUMERIC}
  	</update>
  	
    <select id="getCaseByIndustryType" parameterType="java.util.Map" resultMap="ResultMapWithBLOBs">
        SELECT  <include refid="Base_Column_List" />,
        <include refid="Blob_Column_List" />  FROM CASE_BASIC CB,
         V_USER_ORGANISE_DISTRICT U
         WHERE CB.INPUTER =U.USER_ID
        <if test="caseState !=null">
            AND CB.CASE_STATE &lt;= #{caseState}
        </if>
        <if test="industryType !=null and industryType !=''">
            AND U.industry_Type = #{industryType}
        </if>
    </select>  	
    
    
    <select id="getPanjueCaseCount" parameterType="map" resultType="java.lang.Integer">
		SELECT COUNT(1)
		FROM CASE_BASIC CB ,ORGANISE O,CASE_STATE CST
		WHERE CB.PROC_KEY = 'chufaProc'
		AND CB.CASE_ID = CST.CASE_ID
	    AND CB.INPUT_UNIT=O.ORG_CODE
		<include refid="acceptCaseField" />
	</select>
	<select id="getPanjueCaseList" parameterType="map" resultMap="GetCaseListResultMap">
		SELECT CB.CASE_ID,CB.CASE_NO,CB.CASE_NAME,CB.INPUTER,CB.INPUT_TIME,
   		O.ORG_NAME AS INPUT_UNIT_NAME,
		CB.CASE_STATE,CB.LATEST_POCESS_TIME,CB.PROC_KEY
		FROM CASE_BASIC CB ,ORGANISE O,CASE_STATE CST
		WHERE CB.PROC_KEY = 'chufaProc'
		AND CB.CASE_ID = CST.CASE_ID
        AND CB.INPUT_UNIT=O.ORG_CODE
		<include refid="acceptCaseField" />
		ORDER BY O.DISTRICT_CODE ASC,CB.LATEST_POCESS_TIME DESC
	</select>
  	
</mapper>